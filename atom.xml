<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TsuiWade&#39;s blog</title>
  
  
  <link href="https://tsuiwade.github.io/atom.xml" rel="self"/>
  
  <link href="https://tsuiwade.github.io/"/>
  <updated>2022-04-08T20:00:38.000Z</updated>
  <id>https://tsuiwade.github.io/</id>
  
  <author>
    <name>tsuiwade</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>qt曲线图</title>
    <link href="https://tsuiwade.github.io/2022/04/08/blog46-myQChart/"/>
    <id>https://tsuiwade.github.io/2022/04/08/blog46-myQChart/</id>
    <published>2022-04-08T20:00:38.000Z</published>
    <updated>2022-04-08T20:00:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>为了做一个调节控制轴的上位机软件。</p><p>主要用到了QT chart， 并且大量学习内置的<code>example</code>，主要包括 QLineSeries、QSplineSeries，一个样条曲线和一个折线。</p><p>其中白色显示最为重要的RMS曲线，与黑色背景形成最鲜明对比。</p><p>还有一个QAreaSeries为了显示两个意义相同的位置信息（实际位置和设定位置），以亮蓝线表示实际位置，暗蓝色表示设定位置，中间的透明蓝表示两线围成的区域。</p><p>还有一个QStackedBarSeries，折叠柱状图，我的想法是设计红色为正误差，绿色为负误差，类似于股票的涨跌，其中柱状图包络线为实际值，并且整图来看，由于误差的累计在pid中是有所含义的，红绿色面积大小比较显眼。</p><p>还设置了多y轴，个人认为这是我设计最全的一个图了：各个颜色和图类分别表示不同的含义，我本想将左侧的红绿色y轴合二为一，但不太会且有bug，故放弃。</p><p>在图中还有点击图例的交互：实现图例闪烁和曲线现隐。</p><p>以及鼠标hover在scatter点上的显示反应。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220408194524894.png" alt="image-20220627204728330"></p><p>接下来还需要做协议的解析、动态调整y轴的范围、计算error值。计算rms值。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220627223625218.png" alt="image-20220627223625218"></p><p>最终经过调试完善项目界面如上图所示。</p><p>还添加了双轴双图显示、关掉界面再打开的文本框数据缓存功能、文本框重要数据的实时显示、qt chart的每隔一段时间更新画图、保存为csv文件的保存功能、status状态栏的qt组件控制、拖动条设置图像更新频率等功能。</p><p>源码已上传至github上。</p><hr><p>该代码前期耗费两周研究qt chart的诸多显示效果，结合项目实际意义设计最佳画图方案。后期结合望远镜实时数据，添加诸多功能。</p><hr><p>2022/6/27 还花时间修复了这半年来blog的一些问题。</p>]]></content>
    
    
    <summary type="html">使用了qt自带的qchart库实现一个多形态的曲线图，更好区分地进行调试，源码见仓库。</summary>
    
    
    
    <category term="qt" scheme="https://tsuiwade.github.io/categories/qt/"/>
    
    
    <category term="qt" scheme="https://tsuiwade.github.io/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>研究一下星表</title>
    <link href="https://tsuiwade.github.io/2022/03/18/blog45-starCatalog/"/>
    <id>https://tsuiwade.github.io/2022/03/18/blog45-starCatalog/</id>
    <published>2022-03-18T17:24:41.000Z</published>
    <updated>2022-03-18T17:24:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://baike.baidu.com/item/欧洲空间局/8769487">欧洲空间局</a>（ESA）在1989年8月8日成功地发射了依巴谷<a href="https://baike.baidu.com/item/天体测量卫星/15568941">天体测量卫星</a>，<a href="https://baike.baidu.com/item/依巴谷星表">依巴谷星表</a>和第谷星表是<a href="https://baike.baidu.com/item/依巴谷卫星/6240692">依巴谷卫星</a>的主要观测结果，依巴谷星表测定了约12万颗恒星，构成了均匀的<a href="https://baike.baidu.com/item/天球参考系/1453747">天球参考系</a>，极限星等达到13mag，其位置、自行与<a href="https://baike.baidu.com/item/视差">视差</a>的精度分别为±0.002″、±0.002″/yr、±0.002″。1997年在日本京都召开的IAU第23届大会给出了由212颗<a href="https://baike.baidu.com/item/河外致密射电源/9210040">河外致密射电源</a>构成的<a href="https://baike.baidu.com/item/国际天球参考系/15581252">国际天球参考系</a>（ICRS），决定由依巴谷星表取代已沿用10多年的FK5星表，成为ICRS在光学波段的实现，并将改进后的依巴谷框架称为依巴谷天球参考框架（HCRF）。</p><p>古希腊天文学家依巴谷以精确的天体测量著名于世，他发现了岁差，将三角学应用于天文学，首先提出了星等的概念并被后世进一步发展完善，被尊称为“方位天文学之父”。欧空局的依巴谷计划的英文缩写与依巴谷的名字非常相似，也正好纪念了这位天文学伟人。这项计划分为“依巴谷实验”和“第谷实验”两部分。前者最终测得118218颗恒星的高精度数据；后者测得数百万颗恒星的低精度数据。</p><h2 id="常用目视星表"><a href="#常用目视星表" class="headerlink" title="常用目视星表"></a>常用目视星表</h2><p>在实际应用中常用的目视星表中有：</p><p>（1）《<a href="https://baike.baidu.com/item/依巴谷星表">依巴谷星表</a>》（Hipparcos catalogue），简称HIP或HP</p><p>欧洲空间局（简称ESA）依巴谷<a href="https://baike.baidu.com/item/天体测量卫星/15568941">天体测量卫星</a>（Hipparcos）计划的主要成果。1997年发表的第2版，是位置精确度最高的科学数据，包括的恒星总数为120313个，极限星等为13等，精确度在千分之一弧秒，而第谷星表 列出的则略微超过1,050,000颗恒星。包括赤道坐标，自行，星等，光谱型、颜色、光谱型、视差、径向速度等信息。</p><p>（2）HD星表（Henry Draper Catalogue）或 耶鲁亮星星表编号HD。亨利·德雷伯星表（HD/HDE）</p><p>HD星表给出88 883颗恒星的2000年历元位置、星等、自行、光谱型等数据，是最传统的星表之一。耶鲁亮星星表包括25万颗全部 8等以上的恒星和很多暗达11等的恒星的著名星表。HD序号在没有拜耳字母或佛氏星数的恒星中被普遍的采用，在原始的HD星表中序号从1～225,300是依1900.0分点的赤经，从225,301～359,083是在1949年出版的亨利·德雷珀扩充星表中增加的，仍然使用HD表示。</p><p>（4）<a href="https://baike.baidu.com/item/SAO星表/6485132">SAO星表</a>（Smithsonian Astrophysical Observatory ，1966）史密松星表</p><p>SAO星表是天文观测最常用的星表，它给出了258 997颗星等亮于11m的恒星，有编号、自行值、光谱型、V星等，表内列有与HD星表和BD（DM）星表的交叉证认序号。</p><hr><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220321111520189.png" alt="image-20220321111520189"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220321121232624.png" alt="image-20220321121232624"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220321121314466.png" alt="image-20220321121314466"></p><p>能得到数据 也不知道怎么计算。。。</p><p>就用Stellarium里的数据吧</p>]]></content>
    
    
    <summary type="html">本文来研究一下依巴谷星表</summary>
    
    
    
    <category term="星表" scheme="https://tsuiwade.github.io/categories/%E6%98%9F%E8%A1%A8/"/>
    
    
    <category term="星表" scheme="https://tsuiwade.github.io/tags/%E6%98%9F%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>编译Stellarium过程</title>
    <link href="https://tsuiwade.github.io/2022/03/15/blog44-buildStellarium/"/>
    <id>https://tsuiwade.github.io/2022/03/15/blog44-buildStellarium/</id>
    <published>2022-03-15T23:26:54.000Z</published>
    <updated>2022-03-15T23:26:54.000Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>首先下载qt，我这里使用的是qt5.14.2，下载挺快的。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220316082552203.png" alt="image-20220316082852120"></p><p>We recommend to use Qt 5.12 or later. You must select Qt Script and msvc2017/msvc2019 among so many checkboxes.</p><p>Add <code>C:\Qt\Qt5.15.12</code> to your <code>PATH</code> variable - you should add string <code>C:\Qt\Qt5.15.12\msvc2019;C:\Qt\Qt5.15.12\msvc2019\bin</code> for 32-bit or <code>C:\Qt\Qt5.15.12\msvc2019_64;C:\Qt\Qt5.15.12\msvc2019_64\bin</code> for 64-bit to <code>PATH</code> variable. (Replace the version numbers of Qt and the version of Visual Studio (2017/2019) with the version that you have installed)</p><p><a href="https://github.com/Stellarium/stellarium/blob/master/BUILDING.md">https://github.com/Stellarium/stellarium/blob/master/BUILDING.md</a></p><p>接着下载github上stellarium的源码。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220316082946891.png" alt="image-20220316082946891"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220316084705332.png" alt="image-20220316084705332"></p><p>接着下载cmake </p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220316083021304.png" alt="image-20220316083021304"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220316085856109.png" alt="image-20220316085856109"></p><p>接着将stellarium文件中的CMakeLists.txt拖进qt creator中，将自动能展开，但出现一些问题</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220315234126876.png" alt="image-20220315234126876"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220316085005174.png" alt="image-20220316085005174"></p><p>然后稍微改改字符，就可以运行了。</p><p>对代码的修改如下：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img//img/image-20220316111236063.png" alt="image-20220316111236063"></p>]]></content>
    
    
    <summary type="html">由于莫名的原因，Stellarium编译运行出问题了，于是我重新进行进行配置，在此进行记录。</summary>
    
    
    
    <category term="Stellarium" scheme="https://tsuiwade.github.io/categories/Stellarium/"/>
    
    
    <category term="Stellarium" scheme="https://tsuiwade.github.io/tags/Stellarium/"/>
    
  </entry>
  
  <entry>
    <title>Zone Model</title>
    <link href="https://tsuiwade.github.io/2022/03/09/blog43-zoneModel/"/>
    <id>https://tsuiwade.github.io/2022/03/09/blog43-zoneModel/</id>
    <published>2022-03-09T16:40:27.000Z</published>
    <updated>2022-03-09T16:40:27.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220309194832300.png" alt="image-20220309194832300"></p><p>icosahedron</p><p>正二十面体 <a href="https://baike.baidu.com/item/%E6%AD%A3%E4%BA%8C%E5%8D%81%E9%9D%A2%E4%BD%93/1921640">https://baike.baidu.com/item/%E6%AD%A3%E4%BA%8C%E5%8D%81%E9%9D%A2%E4%BD%93/1921640</a></p><p>正二十面体(Regular icosahedron [2] ) 是由20个等边三角形所组成的<a href="https://baike.baidu.com/item/正多面体">正多面体</a>，共有12个顶点，30条棱，20个面。为五个<a href="https://baike.baidu.com/item/柏拉图多面体/2769757">柏拉图多面体</a>之一。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220309164132823.png" alt="image-20220309164132823"></p><p> sqrt(50-10*sqrt(5))/10 = 0.5257</p><p>sqrt(50+10*sqrt(5))/10 = 0.8507</p><hr><p>画图十分精美</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220321102438566.png" alt="image-20220321102438566"></p><p><a href="https://www.redblobgames.com/x/1842-delaunay-voronoi-sphere/">https://www.redblobgames.com/x/1842-delaunay-voronoi-sphere/</a></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220321101619465.png" alt="image-20220321101619465"></p><hr><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220309171100201.png" alt="image-20220309171100201"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% plot_triangle.m</span></span><br><span class="line">clear all; close all;</span><br><span class="line">m = <span class="built_in">sqrt</span>(<span class="number">50</span><span class="number">-10</span>*<span class="built_in">sqrt</span>(<span class="number">5</span>))/<span class="number">10</span>;</span><br><span class="line">n = <span class="built_in">sqrt</span>(<span class="number">50</span>+<span class="number">10</span>*<span class="built_in">sqrt</span>(<span class="number">5</span>))/<span class="number">10</span>;</span><br><span class="line">A = [</span><br><span class="line">    n,-m,<span class="number">0</span>;</span><br><span class="line">    n,m,<span class="number">0</span>;</span><br><span class="line">    -n,m,<span class="number">0</span>;</span><br><span class="line">    -n,-m,<span class="number">0</span>;</span><br><span class="line">    <span class="number">0</span>,n,-m;</span><br><span class="line">    <span class="number">0</span>,n,m;</span><br><span class="line">    <span class="number">0</span>,-n,m;</span><br><span class="line">    <span class="number">0</span>,-n,-m;</span><br><span class="line">    -m,<span class="number">0</span>,n;</span><br><span class="line">    m,<span class="number">0</span>,n;</span><br><span class="line">    m,<span class="number">0</span>,-n;</span><br><span class="line">    -m,<span class="number">0</span>,-n;</span><br><span class="line">    ];</span><br><span class="line"><span class="built_in">scatter3</span>(A(:,<span class="number">1</span>),A(:,<span class="number">2</span>),A(:,<span class="number">3</span>));</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">center=[];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">0</span>,<span class="number">1</span>,<span class="number">9</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">0</span>,<span class="number">9</span>,<span class="number">6</span>)];</span><br><span class="line"></span><br><span class="line">center = [center;plot_triangle(A,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">0</span>,<span class="number">7</span>,<span class="number">10</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">6</span>,<span class="number">7</span>,<span class="number">0</span>)];</span><br><span class="line"></span><br><span class="line">center = [center;plot_triangle(A,<span class="number">7</span>,<span class="number">6</span>,<span class="number">3</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">6</span>,<span class="number">8</span>,<span class="number">3</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">11</span>,<span class="number">10</span>,<span class="number">7</span>)];</span><br><span class="line"></span><br><span class="line">center = [center;plot_triangle(A,<span class="number">7</span>,<span class="number">3</span>,<span class="number">11</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">3</span>,<span class="number">2</span>,<span class="number">11</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>)];</span><br><span class="line"></span><br><span class="line">center = [center;plot_triangle(A,<span class="number">10</span>,<span class="number">11</span>,<span class="number">4</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">2</span>,<span class="number">4</span>,<span class="number">11</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>)];</span><br><span class="line"></span><br><span class="line">center = [center;plot_triangle(A,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">4</span>,<span class="number">1</span>,<span class="number">10</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>)];</span><br><span class="line"></span><br><span class="line">center = [center;plot_triangle(A,<span class="number">5</span>,<span class="number">9</span>,<span class="number">1</span>)];</span><br><span class="line">center = [center;plot_triangle(A,<span class="number">8</span>,<span class="number">9</span>,<span class="number">5</span>)];</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">text(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line"></span><br><span class="line">axis equal;</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">plot_triangle</span><span class="params">(A,d1,d2,d3)</span></span></span><br><span class="line">d1 = d1 + <span class="number">1</span>;</span><br><span class="line">d2 = d2 + <span class="number">1</span>;</span><br><span class="line">d3 = d3 + <span class="number">1</span>;</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"></span><br><span class="line">line([A(d1,<span class="number">1</span>),A(d2,<span class="number">1</span>),A(d3,<span class="number">1</span>),A(d1,<span class="number">1</span>)],[A(d1,<span class="number">2</span>),A(d2,<span class="number">2</span>),A(d3,<span class="number">2</span>),A(d1,<span class="number">2</span>)],[A(d1,<span class="number">3</span>),A(d2,<span class="number">3</span>),A(d3,<span class="number">3</span>),A(d1,<span class="number">3</span>)]);</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220309194211980.png" alt="image-20220309194211980"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220312234651019.png" alt="image-20220312234651019"></p><hr><p>进入源码进行查看</p><p>StelGeodesicGrid::StelGeodesicGrid（StelGeodesicGrid.cpp） 被调用1次 调用20次<br>        StelGeodesicGrid::initTriangle（StelGeodesicGrid.cpp）被调用20次 c0/c1/c2为20个面的3个点，函数内的循环没进</p><p>下面6个点为 c0/c1/c2/e0/e1/e2</p><p>1 [0.850651, 0.525731, 0] [0.850651, -0.525731, 0] [0.525731, 0, -0.850651] [0.809017, -0.309017, -0.5] [0.809017, 0.309017, -0.5] [1, 0, 0]</p><p>2 [0.850651, -0.525731, 0] [0.850651, 0.525731, 0] [0.525731, 0, 0.850651] [0.809017, 0.309017, 0.5] [0.809017, -0.309017, 0.5] [1, 0, 0]</p><p>3 [0.850651, -0.525731, 0] [0.525731, 0, 0.850651] [0, -0.850651, 0.525731] [0.309017, -0.5, 0.809017] [0.5, -0.809017, 0.309017] [0.809017, -0.309017, 0.5]</p><p>4 [0.525731, 0, 0.850651] [-0.525731, 0, 0.850651] [0, -0.850651, 0.525731] [-0.309017, -0.5, 0.809017] [0.309017, -0.5, 0.809017] [0, 0, 1]</p><p>5 [0.850651, -0.525731, 0] [0, -0.850651, -0.525731] [0.525731, 0, -0.850651] [0.309017, -0.5, -0.809017] [0.809017, -0.309017, -0.5] [0.5, -0.809017, -0.309017]</p><p>6 [0, -0.850651, 0.525731] [0, -0.850651, -0.525731] [0.850651, -0.525731, 0] [0.5, -0.809017, -0.309017] [0.5, -0.809017, 0.309017] [0, -1, 0]</p><p>7 [0, -0.850651, -0.525731] [0, -0.850651, 0.525731] [-0.850651, -0.525731, 0] [-0.5, -0.809017, 0.309017] [-0.5, -0.809017, -0.309017] [0, -1, 0]</p><p>8 [0, -0.850651, 0.525731] [-0.525731, 0, 0.850651] [-0.850651, -0.525731, 0] [-0.809017, -0.309017, 0.5] [-0.5, -0.809017, 0.309017] [-0.309017, -0.5, 0.809017]</p><p>9 [-0.525731, 0, -0.850651] [0.525731, 0, -0.850651] [0, -0.850651, -0.525731] [0.309017, -0.5, -0.809017] [-0.309017, -0.5, -0.809017] [0, 0, -1]</p><p>10 [0, -0.850651, -0.525731] [-0.850651, -0.525731, 0] [-0.525731, 0, -0.850651] [-0.809017, -0.309017, -0.5] [-0.309017, -0.5, -0.809017] [-0.5, -0.809017, -0.309017]</p><p>11 [-0.850651, -0.525731, 0] [-0.850651, 0.525731, 0] [-0.525731, 0, -0.850651] [-0.809017, 0.309017, -0.5] [-0.809017, -0.309017, -0.5] [-1, 0, 0]</p><p>12 [-0.850651, 0.525731, 0] [-0.850651, -0.525731, 0] [-0.525731, 0, 0.850651] [-0.809017, -0.309017, 0.5] [-0.809017, 0.309017, 0.5] [-1, 0, 0]</p><p>13 [0.525731, 0, -0.850651] [-0.525731, 0, -0.850651] [0, 0.850651, -0.525731] [-0.309017, 0.5, -0.809017] [0.309017, 0.5, -0.809017] [0, 0, -1]</p><p>14 [-0.850651, 0.525731, 0] [0, 0.850651, -0.525731] [-0.525731, 0, -0.850651] [-0.309017, 0.5, -0.809017] [-0.809017, 0.309017, -0.5] [-0.5, 0.809017, -0.309017]</p><p>15 [0, 0.850651, 0.525731] [0, 0.850651, -0.525731] [-0.850651, 0.525731, 0] [-0.5, 0.809017, -0.309017] [-0.5, 0.809017, 0.309017] [0, 1, 0]</p><p>16 [-0.850651, 0.525731, 0] [-0.525731, 0, 0.850651] [0, 0.850651, 0.525731] [-0.309017, 0.5, 0.809017] [-0.5, 0.809017, 0.309017] [-0.809017, 0.309017, 0.5]</p><p>17 [0, 0.850651, -0.525731] [0.850651, 0.525731, 0] [0.525731, 0, -0.850651] [0.809017, 0.309017, -0.5] [0.309017, 0.5, -0.809017] [0.5, 0.809017, -0.309017]</p><p>18 [0, 0.850651, -0.525731] [0, 0.850651, 0.525731] [0.850651, 0.525731, 0] [0.5, 0.809017, 0.309017] [0.5, 0.809017, -0.309017] [0, 1, 0]</p><p>19 [0, 0.850651, 0.525731] [0.525731, 0, 0.850651] [0.850651, 0.525731, 0] [0.809017, 0.309017, 0.5] [0.5, 0.809017, 0.309017] [0.309017, 0.5, 0.809017]</p><p>20 [-0.525731, 0, 0.850651] [0.525731, 0, 0.850651] [0, 0.850651, 0.525731] [0.309017, 0.5, 0.809017] [-0.309017, 0.5, 0.809017] [0, 0, 1]</p><hr><p>然后才进入了下面的程序</p><p>StarMgr::init()<br>        StelGeodesicGrid::visitTriangles 被调用1次 调用20次函数<br>                StelGeodesicGrid::visitTriangles 被调用20次 再每次调用自身4次函数<br>                        (*func)(lev, index, c0, c1, c2, context);<br>                        initTriangleFunc （StarMgr.hpp）<br>                                StarMgr::initTriangle 被调用1次<br>                                        ZoneArray::initTriangle </p><p>​        </p><p>需要注意调用了100次的 StelGeodesicGrid::visitTriangles 中的 Triangle &amp;t(triangles [ lev ] [ index ] );</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Triangle</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">Vec3f e0,e1,e2;   <span class="comment">// Seitenmittelpunkte</span></span><br><span class="line">&#125;;</span><br><span class="line">Triangle **triangles;</span><br></pre></td></tr></table></figure><p>triangles变量在StelGeodesicGrid::initTriangle中已经定义过</p><p>checkAndLoadCatal  visitTriangles  1</p><p> 1  z-&gt;center [0.934172, 0, -0.356822] z-&gt;axis0 [0, 1, 0]  z-&gt;axis1 [0.356822, 0, 0.934172] star_position_scale 0.763932 c0 [0.850651, 0.525731, 0] c1 [0.850651, -0.525731, 0] c2 [0.525731, 0, -0.850651]</p><p> 2  z-&gt;center [0.939124, 0.294748, -0.176549] z-&gt;axis0 [-0.299452, 0.954111, 0]  z-&gt;axis1 [0.168448, 0.052868, 0.984292] star_position_scale 0.361541 c0 [0.850651, 0.525731, 0] c1 [1, 0, 0] c2 [0.809017, 0.309017, -0.5]</p><p> 3  z-&gt;center [0.939124, -0.294748, -0.176549] z-&gt;axis0 [0.299452, 0.954111, 0]  z-&gt;axis1 [0.168448, -0.052868, 0.984292] star_position_scale 0.361541 c0 [1, 0, 0] c1 [0.850651, -0.525731, 0] c2 [0.809017, -0.309017, -0.5]</p><p> 4  z-&gt;center [0.75696, 0, -0.653462] z-&gt;axis0 [0, 1, 0]  z-&gt;axis1 [0.653462, 0, 0.75696] star_position_scale 0.361541 c0 [0.809017, 0.309017, -0.5] c1 [0.809017, -0.309017, -0.5] c2 [0.525731, 0, -0.850651]</p><p> 5  z-&gt;center [0.934172, 0, -0.356822] z-&gt;axis0 [0, 1, 0]  z-&gt;axis1 [0.356822, 0, 0.934172] star_position_scale 0.381966 c0 [0.809017, -0.309017, -0.5] c1 [0.809017, 0.309017, -0.5] c2 [1, 0, 0]</p><p>checkAndLoadCatal  visitTriangles  2</p><p> 6  z-&gt;center [0.934172, 0, 0.356822] z-&gt;axis0 [0, 1, 0]  z-&gt;axis1 [-0.356822, 0, 0.934172] star_position_scale 0.763932 c0 [0.850651, -0.525731, 0] c1 [0.850651, 0.525731, 0] c2 [0.525731, 0, 0.850651]</p><p> 7  z-&gt;center [0.939124, -0.294748, 0.176549] z-&gt;axis0 [0.299452, 0.954111, 0]  z-&gt;axis1 [-0.168448, 0.052868, 0.984292] star_position_scale 0.381966 c0 [0.850651, -0.525731, 0] c1 [1, 0, 0] c2 [0.809017, -0.309017, 0.5]</p><p> 8  z-&gt;center [0.939124, 0.294748, 0.176549] z-&gt;axis0 [-0.299452, 0.954111, 0]  z-&gt;axis1 [-0.168448, -0.052868, 0.984292] star_position_scale 0.381966 c0 [1, 0, 0] c1 [0.850651, 0.525731, 0] c2 [0.809017, 0.309017, 0.5]</p><p> 9  z-&gt;center [0.75696, 0, 0.653462] z-&gt;axis0 [0, 1, 0]  z-&gt;axis1 [-0.653462, 0, 0.75696] star_position_scale 0.381966 c0 [0.809017, -0.309017, 0.5] c1 [0.809017, 0.309017, 0.5] c2 [0.525731, 0, 0.850651]</p><p> 10  z-&gt;center [0.934172, 0, 0.356822] z-&gt;axis0 [0, 1, 0]  z-&gt;axis1 [-0.356822, 0, 0.934172] star_position_scale 0.381966 c0 [0.809017, 0.309017, 0.5] c1 [0.809017, -0.309017, 0.5] c2 [1, 0, 0]</p><p>checkAndLoadCatal  visitTriangles  3</p><p> 11  z-&gt;center [0.57735, -0.57735, 0.57735] z-&gt;axis0 [0.707107, 0.707107, 0]  z-&gt;axis1 [-0.408248, 0.408248, 0.816497] star_position_scale 0.763932 c0 [0.850651, -0.525731, 0] c1 [0.525731, 0, 0.850651] c2 [0, -0.850651, 0.525731]</p><p> 12  z-&gt;center [0.762575, -0.580411, 0.285662] z-&gt;axis0 [0.605648, 0.795733, 0]  z-&gt;axis1 [-0.227311, 0.173011, 0.95833] star_position_scale 0.381966 c0 [0.850651, -0.525731, 0] c1 [0.809017, -0.309017, 0.5] c2 [0.5, -0.809017, 0.309017]</p><p> 13  z-&gt;center [0.580411, -0.285662, 0.762575] z-&gt;axis0 [0.441587, 0.897219, 0]  z-&gt;axis1 [-0.684196, 0.336743, 0.6469] star_position_scale 0.381966 c0 [0.809017, -0.309017, 0.5] c1 [0.525731, 0, 0.850651] c2 [0.309017, -0.5, 0.809017]</p><p> 14  z-&gt;center [0.285662, -0.762575, 0.580411] z-&gt;axis0 [0.936452, 0.350797, 0]  z-&gt;axis1 [-0.203606, 0.543526, 0.814324] star_position_scale 0.381966 c0 [0.5, -0.809017, 0.309017] c1 [0.309017, -0.5, 0.809017] c2 [0, -0.850651, 0.525731]</p><p> 15  z-&gt;center [0.57735, -0.57735, 0.57735] z-&gt;axis0 [0.707107, 0.707107, 0]  z-&gt;axis1 [-0.408248, 0.408248, 0.816497] star_position_scale 0.381966 c0 [0.309017, -0.5, 0.809017] c1 [0.5, -0.809017, 0.309017] c2 [0.809017, -0.309017, 0.5]</p><p>checkAndLoadCatal  visitTriangles  4</p><p> 16  z-&gt;center [0, -0.356822, 0.934172] z-&gt;axis0 [1, 0, 0]  z-&gt;axis1 [0, 0.934172, 0.356822] star_position_scale 0.763932 c0 [0.525731, 0, 0.850651] c1 [-0.525731, 0, 0.850651] c2 [0, -0.850651, 0.525731]</p><p> 17  z-&gt;center [0.294748, -0.176549, 0.939124] z-&gt;axis0 [0.513854, 0.857878, 0]  z-&gt;axis1 [-0.805654, 0.482573, 0.343578] star_position_scale 0.381966 c0 [0.525731, 0, 0.850651] c1 [0, 0, 1] c2 [0.309017, -0.5, 0.809017]</p><p> 18  z-&gt;center [-0.294748, -0.176549, 0.939124] z-&gt;axis0 [0.513854, -0.857878, 0]  z-&gt;axis1 [0.805654, 0.482573, 0.343578] star_position_scale 0.381966 c0 [0, 0, 1] c1 [-0.525731, 0, 0.850651] c2 [-0.309017, -0.5, 0.809017]</p><p> 19  z-&gt;center [0, -0.653462, 0.75696] z-&gt;axis0 [1, 0, 0]  z-&gt;axis1 [0, 0.75696, 0.653462] star_position_scale 0.381966 c0 [0.309017, -0.5, 0.809017] c1 [-0.309017, -0.5, 0.809017] c2 [0, -0.850651, 0.525731]</p><p> 20  z-&gt;center [0, -0.356822, 0.934172] z-&gt;axis0 [1, 0, 0]  z-&gt;axis1 [0, 0.934172, 0.356822] star_position_scale 0.381966 c0 [-0.309017, -0.5, 0.809017] c1 [0.309017, -0.5, 0.809017] c2 [0, 0, 1]</p><p>checkAndLoadCatal  visitTriangles  5</p><p> 21  z-&gt;center [0.57735, -0.57735, -0.57735] z-&gt;axis0 [0.707107, 0.707107, 0]  z-&gt;axis1 [0.408248, -0.408248, 0.816497] star_position_scale 0.763932 c0 [0.850651, -0.525731, 0] c1 [0, -0.850651, -0.525731] c2 [0.525731, 0, -0.850651]</p><p> 22  z-&gt;center [0.762575, -0.580411, -0.285662] z-&gt;axis0 [0.605648, 0.795733, 0]  z-&gt;axis1 [0.227311, -0.173011, 0.95833] star_position_scale 0.381966 c0 [0.850651, -0.525731, 0] c1 [0.5, -0.809017, -0.309017] c2 [0.809017, -0.309017, -0.5]</p><p> 23  z-&gt;center [0.285662, -0.762575, -0.580411] z-&gt;axis0 [0.936452, 0.350797, 0]  z-&gt;axis1 [0.203606, -0.543526, 0.814324] star_position_scale 0.381966 c0 [0.5, -0.809017, -0.309017] c1 [0, -0.850651, -0.525731] c2 [0.309017, -0.5, -0.809017]</p><p> 24  z-&gt;center [0.580411, -0.285662, -0.762575] z-&gt;axis0 [0.441587, 0.897219, 0]  z-&gt;axis1 [0.684196, -0.336743, 0.6469] star_position_scale 0.381966 c0 [0.809017, -0.309017, -0.5] c1 [0.309017, -0.5, -0.809017] c2 [0.525731, 0, -0.850651]</p><p> 25  z-&gt;center [0.57735, -0.57735, -0.57735] z-&gt;axis0 [0.707107, 0.707107, 0]  z-&gt;axis1 [0.408248, -0.408248, 0.816497] star_position_scale 0.381966 c0 [0.309017, -0.5, -0.809017] c1 [0.809017, -0.309017, -0.5] c2 [0.5, -0.809017, -0.309017]</p><p>checkAndLoadCatal  visitTriangles  6</p><p> 26  z-&gt;center [0.356822, -0.934172, 0] z-&gt;axis0 [0.934172, 0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.763932 c0 [0, -0.850651, 0.525731] c1 [0, -0.850651, -0.525731] c2 [0.850651, -0.525731, 0]</p><p> 27  z-&gt;center [0.176549, -0.939124, 0.294748] z-&gt;axis0 [0.982784, 0.184757, 0]  z-&gt;axis1 [-0.0544568, 0.289674, 0.955575] star_position_scale 0.381966 c0 [0, -0.850651, 0.525731] c1 [0, -1, 0] c2 [0.5, -0.809017, 0.309017]</p><p> 28  z-&gt;center [0.176549, -0.939124, -0.294748] z-&gt;axis0 [0.982784, 0.184757, 0]  z-&gt;axis1 [0.0544568, -0.289674, 0.955575] star_position_scale 0.381966 c0 [0, -1, 0] c1 [0, -0.850651, -0.525731] c2 [0.5, -0.809017, -0.309017]</p><p> 29  z-&gt;center [0.653462, -0.75696, 0] z-&gt;axis0 [0.75696, 0.653462, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [0.5, -0.809017, 0.309017] c1 [0.5, -0.809017, -0.309017] c2 [0.850651, -0.525731, 0]</p><p> 30  z-&gt;center [0.356822, -0.934172, 0] z-&gt;axis0 [0.934172, 0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [0.5, -0.809017, -0.309017] c1 [0.5, -0.809017, 0.309017] c2 [0, -1, 0]</p><p>checkAndLoadCatal  visitTriangles  7</p><p> 31  z-&gt;center [-0.356822, -0.934172, 0] z-&gt;axis0 [0.934172, -0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.763932 c0 [0, -0.850651, -0.525731] c1 [0, -0.850651, 0.525731] c2 [-0.850651, -0.525731, 0]</p><p> 32  z-&gt;center [-0.176549, -0.939124, -0.294748] z-&gt;axis0 [0.982784, -0.184757, 0]  z-&gt;axis1 [-0.0544568, -0.289674, 0.955575] star_position_scale 0.381966 c0 [0, -0.850651, -0.525731] c1 [0, -1, 0] c2 [-0.5, -0.809017, -0.309017]</p><p> 33  z-&gt;center [-0.176549, -0.939124, 0.294748] z-&gt;axis0 [0.982784, -0.184757, 0]  z-&gt;axis1 [0.0544568, 0.289674, 0.955575] star_position_scale 0.381966 c0 [0, -1, 0] c1 [0, -0.850651, 0.525731] c2 [-0.5, -0.809017, 0.309017]</p><p> 34  z-&gt;center [-0.653462, -0.75696, 0] z-&gt;axis0 [0.75696, -0.653462, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [-0.5, -0.809017, -0.309017] c1 [-0.5, -0.809017, 0.309017] c2 [-0.850651, -0.525731, 0]</p><p> 35  z-&gt;center [-0.356822, -0.934172, 0] z-&gt;axis0 [0.934172, -0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [-0.5, -0.809017, 0.309017] c1 [-0.5, -0.809017, -0.309017] c2 [0, -1, 0]</p><p>checkAndLoadCatal  visitTriangles  8</p><p> 36  z-&gt;center [-0.57735, -0.57735, 0.57735] z-&gt;axis0 [0.707107, -0.707107, 0]  z-&gt;axis1 [0.408248, 0.408248, 0.816497] star_position_scale 0.763932 c0 [0, -0.850651, 0.525731] c1 [-0.525731, 0, 0.850651] c2 [-0.850651, -0.525731, 0]</p><p> 37  z-&gt;center [-0.285662, -0.762575, 0.580411] z-&gt;axis0 [0.936452, -0.350797, 0]  z-&gt;axis1 [0.203606, 0.543526, 0.814324] star_position_scale 0.381966 c0 [0, -0.850651, 0.525731] c1 [-0.309017, -0.5, 0.809017] c2 [-0.5, -0.809017, 0.309017]</p><p> 38  z-&gt;center [-0.580411, -0.285662, 0.762575] z-&gt;axis0 [0.441587, -0.897219, 0]  z-&gt;axis1 [0.684196, 0.336743, 0.6469] star_position_scale 0.381966 c0 [-0.309017, -0.5, 0.809017] c1 [-0.525731, 0, 0.850651] c2 [-0.809017, -0.309017, 0.5]</p><p> 39  z-&gt;center [-0.762575, -0.580411, 0.285662] z-&gt;axis0 [0.605648, -0.795733, 0]  z-&gt;axis1 [0.227311, 0.173011, 0.95833] star_position_scale 0.381966 c0 [-0.5, -0.809017, 0.309017] c1 [-0.809017, -0.309017, 0.5] c2 [-0.850651, -0.525731, 0]</p><p> 40  z-&gt;center [-0.57735, -0.57735, 0.57735] z-&gt;axis0 [0.707107, -0.707107, 0]  z-&gt;axis1 [0.408248, 0.408248, 0.816497] star_position_scale 0.381966 c0 [-0.809017, -0.309017, 0.5] c1 [-0.5, -0.809017, 0.309017] c2 [-0.309017, -0.5, 0.809017]</p><p>checkAndLoadCatal  visitTriangles  9</p><p> 41  z-&gt;center [0, -0.356822, -0.934172] z-&gt;axis0 [1, 0, 0]  z-&gt;axis1 [0, -0.934172, 0.356822] star_position_scale 0.763932 c0 [-0.525731, 0, -0.850651] c1 [0.525731, 0, -0.850651] c2 [0, -0.850651, -0.525731]</p><p> 42  z-&gt;center [-0.294748, -0.176549, -0.939124] z-&gt;axis0 [0.513854, -0.857878, 0]  z-&gt;axis1 [-0.805654, -0.482573, 0.343578] star_position_scale 0.381966 c0 [-0.525731, 0, -0.850651] c1 [0, 0, -1] c2 [-0.309017, -0.5, -0.809017]</p><p> 43  z-&gt;center [0.294748, -0.176549, -0.939124] z-&gt;axis0 [0.513854, 0.857878, 0]  z-&gt;axis1 [0.805654, -0.482573, 0.343578] star_position_scale 0.381966 c0 [0, 0, -1] c1 [0.525731, 0, -0.850651] c2 [0.309017, -0.5, -0.809017]</p><p> 44  z-&gt;center [0, -0.653462, -0.75696] z-&gt;axis0 [1, 0, 0]  z-&gt;axis1 [0, -0.75696, 0.653462] star_position_scale 0.381966 c0 [-0.309017, -0.5, -0.809017] c1 [0.309017, -0.5, -0.809017] c2 [0, -0.850651, -0.525731]</p><p> 45  z-&gt;center [0, -0.356822, -0.934172] z-&gt;axis0 [1, 0, 0]  z-&gt;axis1 [0, -0.934172, 0.356822] star_position_scale 0.381966 c0 [0.309017, -0.5, -0.809017] c1 [-0.309017, -0.5, -0.809017] c2 [0, 0, -1]</p><p>checkAndLoadCatal  visitTriangles  10</p><p> 46  z-&gt;center [-0.57735, -0.57735, -0.57735] z-&gt;axis0 [0.707107, -0.707107, 0]  z-&gt;axis1 [-0.408248, -0.408248, 0.816497] star_position_scale 0.763932 c0 [0, -0.850651, -0.525731] c1 [-0.850651, -0.525731, 0] c2 [-0.525731, 0, -0.850651]</p><p> 47  z-&gt;center [-0.285662, -0.762575, -0.580411] z-&gt;axis0 [0.936452, -0.350797, 0]  z-&gt;axis1 [-0.203606, -0.543526, 0.814324] star_position_scale 0.381966 c0 [0, -0.850651, -0.525731] c1 [-0.5, -0.809017, -0.309017] c2 [-0.309017, -0.5, -0.809017]</p><p> 48  z-&gt;center [-0.762575, -0.580411, -0.285662] z-&gt;axis0 [0.605648, -0.795733, 0]  z-&gt;axis1 [-0.227311, -0.173011, 0.95833] star_position_scale 0.381966 c0 [-0.5, -0.809017, -0.309017] c1 [-0.850651, -0.525731, 0] c2 [-0.809017, -0.309017, -0.5]</p><p> 49  z-&gt;center [-0.580411, -0.285662, -0.762575] z-&gt;axis0 [0.441587, -0.897219, 0]  z-&gt;axis1 [-0.684196, -0.336743, 0.6469] star_position_scale 0.381966 c0 [-0.309017, -0.5, -0.809017] c1 [-0.809017, -0.309017, -0.5] c2 [-0.525731, 0, -0.850651]</p><p> 50  z-&gt;center [-0.57735, -0.57735, -0.57735] z-&gt;axis0 [0.707107, -0.707107, 0]  z-&gt;axis1 [-0.408248, -0.408248, 0.816497] star_position_scale 0.381966 c0 [-0.809017, -0.309017, -0.5] c1 [-0.309017, -0.5, -0.809017] c2 [-0.5, -0.809017, -0.309017]</p><p>checkAndLoadCatal  visitTriangles  11</p><p> 51  z-&gt;center [-0.934172, 0, -0.356822] z-&gt;axis0 [0, -1, 0]  z-&gt;axis1 [-0.356822, 0, 0.934172] star_position_scale 0.763932 c0 [-0.850651, -0.525731, 0] c1 [-0.850651, 0.525731, 0] c2 [-0.525731, 0, -0.850651]</p><p> 52  z-&gt;center [-0.939124, -0.294748, -0.176549] z-&gt;axis0 [0.299452, -0.954111, 0]  z-&gt;axis1 [-0.168448, -0.052868, 0.984292] star_position_scale 0.381966 c0 [-0.850651, -0.525731, 0] c1 [-1, 0, 0] c2 [-0.809017, -0.309017, -0.5]</p><p> 53  z-&gt;center [-0.939124, 0.294748, -0.176549] z-&gt;axis0 [-0.299452, -0.954111, 0]  z-&gt;axis1 [-0.168448, 0.052868, 0.984292] star_position_scale 0.381966 c0 [-1, 0, 0] c1 [-0.850651, 0.525731, 0] c2 [-0.809017, 0.309017, -0.5]</p><p> 54  z-&gt;center [-0.75696, 0, -0.653462] z-&gt;axis0 [0, -1, 0]  z-&gt;axis1 [-0.653462, 0, 0.75696] star_position_scale 0.381966 c0 [-0.809017, -0.309017, -0.5] c1 [-0.809017, 0.309017, -0.5] c2 [-0.525731, 0, -0.850651]</p><p> 55  z-&gt;center [-0.934172, 0, -0.356822] z-&gt;axis0 [0, -1, 0]  z-&gt;axis1 [-0.356822, 0, 0.934172] star_position_scale 0.381966 c0 [-0.809017, 0.309017, -0.5] c1 [-0.809017, -0.309017, -0.5] c2 [-1, 0, 0]</p><p>checkAndLoadCatal  visitTriangles  12</p><p> 56  z-&gt;center [-0.934172, 0, 0.356822] z-&gt;axis0 [0, -1, 0]  z-&gt;axis1 [0.356822, 0, 0.934172] star_position_scale 0.763932 c0 [-0.850651, 0.525731, 0] c1 [-0.850651, -0.525731, 0] c2 [-0.525731, 0, 0.850651]</p><p> 57  z-&gt;center [-0.939124, 0.294748, 0.176549] z-&gt;axis0 [-0.299452, -0.954111, 0]  z-&gt;axis1 [0.168448, -0.052868, 0.984292] star_position_scale 0.381966 c0 [-0.850651, 0.525731, 0] c1 [-1, 0, 0] c2 [-0.809017, 0.309017, 0.5]</p><p> 58  z-&gt;center [-0.939124, -0.294748, 0.176549] z-&gt;axis0 [0.299452, -0.954111, 0]  z-&gt;axis1 [0.168448, 0.052868, 0.984292] star_position_scale 0.381966 c0 [-1, 0, 0] c1 [-0.850651, -0.525731, 0] c2 [-0.809017, -0.309017, 0.5]</p><p> 59  z-&gt;center [-0.75696, 0, 0.653462] z-&gt;axis0 [0, -1, 0]  z-&gt;axis1 [0.653462, 0, 0.75696] star_position_scale 0.381966 c0 [-0.809017, 0.309017, 0.5] c1 [-0.809017, -0.309017, 0.5] c2 [-0.525731, 0, 0.850651]</p><p> 60  z-&gt;center [-0.934172, 0, 0.356822] z-&gt;axis0 [0, -1, 0]  z-&gt;axis1 [0.356822, 0, 0.934172] star_position_scale 0.381966 c0 [-0.809017, -0.309017, 0.5] c1 [-0.809017, 0.309017, 0.5] c2 [-1, 0, 0]</p><p>checkAndLoadCatal  visitTriangles  13</p><p> 61  z-&gt;center [0, 0.356822, -0.934172] z-&gt;axis0 [-1, 0, 0]  z-&gt;axis1 [0, 0.934172, 0.356822] star_position_scale 0.763932 c0 [0.525731, 0, -0.850651] c1 [-0.525731, 0, -0.850651] c2 [0, 0.850651, -0.525731]</p><p> 62  z-&gt;center [0.294748, 0.176549, -0.939124] z-&gt;axis0 [-0.513854, 0.857878, 0]  z-&gt;axis1 [0.805654, 0.482573, 0.343578] star_position_scale 0.381966 c0 [0.525731, 0, -0.850651] c1 [0, 0, -1] c2 [0.309017, 0.5, -0.809017]</p><p> 63  z-&gt;center [-0.294748, 0.176549, -0.939124] z-&gt;axis0 [-0.513854, -0.857878, 0]  z-&gt;axis1 [-0.805654, 0.482573, 0.343578] star_position_scale 0.381966 c0 [0, 0, -1] c1 [-0.525731, 0, -0.850651] c2 [-0.309017, 0.5, -0.809017]</p><p> 64  z-&gt;center [0, 0.653462, -0.75696] z-&gt;axis0 [-1, 0, 0]  z-&gt;axis1 [0, 0.75696, 0.653462] star_position_scale 0.381966 c0 [0.309017, 0.5, -0.809017] c1 [-0.309017, 0.5, -0.809017] c2 [0, 0.850651, -0.525731]</p><p> 65  z-&gt;center [0, 0.356822, -0.934172] z-&gt;axis0 [-1, 0, 0]  z-&gt;axis1 [0, 0.934172, 0.356822] star_position_scale 0.381966 c0 [-0.309017, 0.5, -0.809017] c1 [0.309017, 0.5, -0.809017] c2 [0, 0, -1]</p><p>checkAndLoadCatal  visitTriangles  14</p><p> 66  z-&gt;center [-0.57735, 0.57735, -0.57735] z-&gt;axis0 [-0.707107, -0.707107, 0]  z-&gt;axis1 [-0.408248, 0.408248, 0.816497] star_position_scale 0.763932 c0 [-0.850651, 0.525731, 0] c1 [0, 0.850651, -0.525731] c2 [-0.525731, 0, -0.850651]</p><p> 67  z-&gt;center [-0.762575, 0.580411, -0.285662] z-&gt;axis0 [-0.605648, -0.795733, 0]  z-&gt;axis1 [-0.227311, 0.173011, 0.95833] star_position_scale 0.381966 c0 [-0.850651, 0.525731, 0] c1 [-0.5, 0.809017, -0.309017] c2 [-0.809017, 0.309017, -0.5]</p><p> 68  z-&gt;center [-0.285662, 0.762575, -0.580411] z-&gt;axis0 [-0.936452, -0.350797, 0]  z-&gt;axis1 [-0.203606, 0.543526, 0.814324] star_position_scale 0.381966 c0 [-0.5, 0.809017, -0.309017] c1 [0, 0.850651, -0.525731] c2 [-0.309017, 0.5, -0.809017]</p><p> 69  z-&gt;center [-0.580411, 0.285662, -0.762575] z-&gt;axis0 [-0.441587, -0.897219, 0]  z-&gt;axis1 [-0.684196, 0.336743, 0.6469] star_position_scale 0.381966 c0 [-0.809017, 0.309017, -0.5] c1 [-0.309017, 0.5, -0.809017] c2 [-0.525731, 0, -0.850651]</p><p> 70  z-&gt;center [-0.57735, 0.57735, -0.57735] z-&gt;axis0 [-0.707107, -0.707107, 0]  z-&gt;axis1 [-0.408248, 0.408248, 0.816497] star_position_scale 0.381966 c0 [-0.309017, 0.5, -0.809017] c1 [-0.809017, 0.309017, -0.5] c2 [-0.5, 0.809017, -0.309017]</p><p>checkAndLoadCatal  visitTriangles  15</p><p> 71  z-&gt;center [-0.356822, 0.934172, 0] z-&gt;axis0 [-0.934172, -0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.763932 c0 [0, 0.850651, 0.525731] c1 [0, 0.850651, -0.525731] c2 [-0.850651, 0.525731, 0]</p><p> 72  z-&gt;center [-0.176549, 0.939124, 0.294748] z-&gt;axis0 [-0.982784, -0.184757, 0]  z-&gt;axis1 [0.0544568, -0.289674, 0.955575] star_position_scale 0.381966 c0 [0, 0.850651, 0.525731] c1 [0, 1, 0] c2 [-0.5, 0.809017, 0.309017]</p><p> 73  z-&gt;center [-0.176549, 0.939124, -0.294748] z-&gt;axis0 [-0.982784, -0.184757, 0]  z-&gt;axis1 [-0.0544568, 0.289674, 0.955575] star_position_scale 0.381966 c0 [0, 1, 0] c1 [0, 0.850651, -0.525731] c2 [-0.5, 0.809017, -0.309017]</p><p> 74  z-&gt;center [-0.653462, 0.75696, 0] z-&gt;axis0 [-0.75696, -0.653462, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [-0.5, 0.809017, 0.309017] c1 [-0.5, 0.809017, -0.309017] c2 [-0.850651, 0.525731, 0]</p><p> 75  z-&gt;center [-0.356822, 0.934172, 0] z-&gt;axis0 [-0.934172, -0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [-0.5, 0.809017, -0.309017] c1 [-0.5, 0.809017, 0.309017] c2 [0, 1, 0]</p><p>checkAndLoadCatal  visitTriangles  16</p><p> 76  z-&gt;center [-0.57735, 0.57735, 0.57735] z-&gt;axis0 [-0.707107, -0.707107, 0]  z-&gt;axis1 [0.408248, -0.408248, 0.816497] star_position_scale 0.763932 c0 [-0.850651, 0.525731, 0] c1 [-0.525731, 0, 0.850651] c2 [0, 0.850651, 0.525731]</p><p> 77  z-&gt;center [-0.762575, 0.580411, 0.285662] z-&gt;axis0 [-0.605648, -0.795733, 0]  z-&gt;axis1 [0.227311, -0.173011, 0.95833] star_position_scale 0.381966 c0 [-0.850651, 0.525731, 0] c1 [-0.809017, 0.309017, 0.5] c2 [-0.5, 0.809017, 0.309017]</p><p> 78  z-&gt;center [-0.580411, 0.285662, 0.762575] z-&gt;axis0 [-0.441587, -0.897219, 0]  z-&gt;axis1 [0.684196, -0.336743, 0.6469] star_position_scale 0.381966 c0 [-0.809017, 0.309017, 0.5] c1 [-0.525731, 0, 0.850651] c2 [-0.309017, 0.5, 0.809017]</p><p> 79  z-&gt;center [-0.285662, 0.762575, 0.580411] z-&gt;axis0 [-0.936452, -0.350797, 0]  z-&gt;axis1 [0.203606, -0.543526, 0.814324] star_position_scale 0.381966 c0 [-0.5, 0.809017, 0.309017] c1 [-0.309017, 0.5, 0.809017] c2 [0, 0.850651, 0.525731]</p><p> 80  z-&gt;center [-0.57735, 0.57735, 0.57735] z-&gt;axis0 [-0.707107, -0.707107, 0]  z-&gt;axis1 [0.408248, -0.408248, 0.816497] star_position_scale 0.381966 c0 [-0.309017, 0.5, 0.809017] c1 [-0.5, 0.809017, 0.309017] c2 [-0.809017, 0.309017, 0.5]</p><p>checkAndLoadCatal  visitTriangles  17</p><p> 81  z-&gt;center [0.57735, 0.57735, -0.57735] z-&gt;axis0 [-0.707107, 0.707107, 0]  z-&gt;axis1 [0.408248, 0.408248, 0.816497] star_position_scale 0.763932 c0 [0, 0.850651, -0.525731] c1 [0.850651, 0.525731, 0] c2 [0.525731, 0, -0.850651]</p><p> 82  z-&gt;center [0.285662, 0.762575, -0.580411] z-&gt;axis0 [-0.936452, 0.350797, 0]  z-&gt;axis1 [0.203606, 0.543526, 0.814324] star_position_scale 0.381966 c0 [0, 0.850651, -0.525731] c1 [0.5, 0.809017, -0.309017] c2 [0.309017, 0.5, -0.809017]</p><p> 83  z-&gt;center [0.762575, 0.580411, -0.285662] z-&gt;axis0 [-0.605648, 0.795733, 0]  z-&gt;axis1 [0.227311, 0.173011, 0.95833] star_position_scale 0.381966 c0 [0.5, 0.809017, -0.309017] c1 [0.850651, 0.525731, 0] c2 [0.809017, 0.309017, -0.5]</p><p> 84  z-&gt;center [0.580411, 0.285662, -0.762575] z-&gt;axis0 [-0.441587, 0.897219, 0]  z-&gt;axis1 [0.684196, 0.336743, 0.6469] star_position_scale 0.381966 c0 [0.309017, 0.5, -0.809017] c1 [0.809017, 0.309017, -0.5] c2 [0.525731, 0, -0.850651]</p><p> 85  z-&gt;center [0.57735, 0.57735, -0.57735] z-&gt;axis0 [-0.707107, 0.707107, 0]  z-&gt;axis1 [0.408248, 0.408248, 0.816497] star_position_scale 0.381966 c0 [0.809017, 0.309017, -0.5] c1 [0.309017, 0.5, -0.809017] c2 [0.5, 0.809017, -0.309017]</p><p>checkAndLoadCatal  visitTriangles  18</p><p> 86  z-&gt;center [0.356822, 0.934172, 0] z-&gt;axis0 [-0.934172, 0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.763932 c0 [0, 0.850651, -0.525731] c1 [0, 0.850651, 0.525731] c2 [0.850651, 0.525731, 0]</p><p> 87  z-&gt;center [0.176549, 0.939124, -0.294748] z-&gt;axis0 [-0.982784, 0.184757, 0]  z-&gt;axis1 [0.0544568, 0.289674, 0.955575] star_position_scale 0.381966 c0 [0, 0.850651, -0.525731] c1 [0, 1, 0] c2 [0.5, 0.809017, -0.309017]</p><p> 88  z-&gt;center [0.176549, 0.939124, 0.294748] z-&gt;axis0 [-0.982784, 0.184757, 0]  z-&gt;axis1 [-0.0544568, -0.289674, 0.955575] star_position_scale 0.381966 c0 [0, 1, 0] c1 [0, 0.850651, 0.525731] c2 [0.5, 0.809017, 0.309017]</p><p> 89  z-&gt;center [0.653462, 0.75696, 0] z-&gt;axis0 [-0.75696, 0.653462, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [0.5, 0.809017, -0.309017] c1 [0.5, 0.809017, 0.309017] c2 [0.850651, 0.525731, 0]</p><p> 90  z-&gt;center [0.356822, 0.934172, 0] z-&gt;axis0 [-0.934172, 0.356822, 0]  z-&gt;axis1 [0, 0, 1] star_position_scale 0.381966 c0 [0.5, 0.809017, 0.309017] c1 [0.5, 0.809017, -0.309017] c2 [0, 1, 0]</p><p>checkAndLoadCatal  visitTriangles  19</p><p> 91  z-&gt;center [0.57735, 0.57735, 0.57735] z-&gt;axis0 [-0.707107, 0.707107, 0]  z-&gt;axis1 [-0.408248, -0.408248, 0.816497] star_position_scale 0.763932 c0 [0, 0.850651, 0.525731] c1 [0.525731, 0, 0.850651] c2 [0.850651, 0.525731, 0]</p><p> 92  z-&gt;center [0.285662, 0.762575, 0.580411] z-&gt;axis0 [-0.936452, 0.350797, 0]  z-&gt;axis1 [-0.203606, -0.543526, 0.814324] star_position_scale 0.381966 c0 [0, 0.850651, 0.525731] c1 [0.309017, 0.5, 0.809017] c2 [0.5, 0.809017, 0.309017]</p><p> 93  z-&gt;center [0.580411, 0.285662, 0.762575] z-&gt;axis0 [-0.441587, 0.897219, 0]  z-&gt;axis1 [-0.684196, -0.336743, 0.6469] star_position_scale 0.381966 c0 [0.309017, 0.5, 0.809017] c1 [0.525731, 0, 0.850651] c2 [0.809017, 0.309017, 0.5]</p><p> 94  z-&gt;center [0.762575, 0.580411, 0.285662] z-&gt;axis0 [-0.605648, 0.795733, 0]  z-&gt;axis1 [-0.227311, -0.173011, 0.95833] star_position_scale 0.381966 c0 [0.5, 0.809017, 0.309017] c1 [0.809017, 0.309017, 0.5] c2 [0.850651, 0.525731, 0]</p><p> 95  z-&gt;center [0.57735, 0.57735, 0.57735] z-&gt;axis0 [-0.707107, 0.707107, 0]  z-&gt;axis1 [-0.408248, -0.408248, 0.816497] star_position_scale 0.381966 c0 [0.809017, 0.309017, 0.5] c1 [0.5, 0.809017, 0.309017] c2 [0.309017, 0.5, 0.809017]</p><p>checkAndLoadCatal  visitTriangles  20</p><p> 96  z-&gt;center [0, 0.356822, 0.934172] z-&gt;axis0 [-1, 0, 0]  z-&gt;axis1 [0, -0.934172, 0.356822] star_position_scale 0.763932 c0 [-0.525731, 0, 0.850651] c1 [0.525731, 0, 0.850651] c2 [0, 0.850651, 0.525731]</p><p> 97  z-&gt;center [-0.294748, 0.176549, 0.939124] z-&gt;axis0 [-0.513854, -0.857878, 0]  z-&gt;axis1 [0.805654, -0.482573, 0.343578] star_position_scale 0.381966 c0 [-0.525731, 0, 0.850651] c1 [0, 0, 1] c2 [-0.309017, 0.5, 0.809017]</p><p> 98  z-&gt;center [0.294748, 0.176549, 0.939124] z-&gt;axis0 [-0.513854, 0.857878, 0]  z-&gt;axis1 [-0.805654, -0.482573, 0.343578] star_position_scale 0.381966 c0 [0, 0, 1] c1 [0.525731, 0, 0.850651] c2 [0.309017, 0.5, 0.809017]</p><p> 99  z-&gt;center [0, 0.653462, 0.75696] z-&gt;axis0 [-1, 0, 0]  z-&gt;axis1 [0, -0.75696, 0.653462] star_position_scale 0.381966 c0 [-0.309017, 0.5, 0.809017] c1 [0.309017, 0.5, 0.809017] c2 [0, 0.850651, 0.525731]</p><p> 100  z-&gt;center [0, 0.356822, 0.934172] z-&gt;axis0 [-1, 0, 0]  z-&gt;axis1 [0, -0.934172, 0.356822] star_position_scale 0.381966 c0 [0.309017, 0.5, 0.809017] c1 [-0.309017, 0.5, 0.809017] c2 [0, 0, 1]</p><p><strong>重点结论：star_position_scale = 0.763932</strong></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">mu0 = (A(<span class="number">11</span>,:) - center(<span class="number">1</span>,:)) * axis0.&#x27;;</span><br><span class="line">mu1 = (A(<span class="number">11</span>,:) - center(<span class="number">1</span>,:)) * axis1.&#x27;;</span><br><span class="line">f = <span class="number">1</span>/(<span class="built_in">sqrt</span>(<span class="number">1</span>-mu0^<span class="number">2</span> -mu1^<span class="number">2</span>));</span><br><span class="line">h = <span class="built_in">abs</span>(mu1)*f;</span><br></pre></td></tr></table></figure><hr><p>梳理好顺序之后，可以进入ZoneArray::initTriangle中进行查看，尝试第一个中点和轴的信息。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% plot_triangle.m </span></span><br><span class="line"><span class="comment">% 12个顶点，30条棱，20个面</span></span><br><span class="line">clear all; close all;</span><br><span class="line">m = <span class="built_in">sqrt</span>(<span class="number">50</span><span class="number">-10</span>*<span class="built_in">sqrt</span>(<span class="number">5</span>))/<span class="number">10</span>;</span><br><span class="line">n = <span class="built_in">sqrt</span>(<span class="number">50</span>+<span class="number">10</span>*<span class="built_in">sqrt</span>(<span class="number">5</span>))/<span class="number">10</span>;</span><br><span class="line">A = [ <span class="comment">% 12个顶点</span></span><br><span class="line">    n,-m,<span class="number">0</span>;</span><br><span class="line">    n,m,<span class="number">0</span>;</span><br><span class="line">    -n,m,<span class="number">0</span>;</span><br><span class="line">    -n,-m,<span class="number">0</span>;</span><br><span class="line">    <span class="number">0</span>,n,-m;</span><br><span class="line">    <span class="number">0</span>,n,m;</span><br><span class="line">    <span class="number">0</span>,-n,m;</span><br><span class="line">    <span class="number">0</span>,-n,-m;</span><br><span class="line">    -m,<span class="number">0</span>,n;</span><br><span class="line">    m,<span class="number">0</span>,n;</span><br><span class="line">    m,<span class="number">0</span>,-n;</span><br><span class="line">    -m,<span class="number">0</span>,-n;</span><br><span class="line">    ];</span><br><span class="line"><span class="built_in">scatter3</span>(A(:,<span class="number">1</span>),A(:,<span class="number">2</span>),A(:,<span class="number">3</span>));</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">center=[];c0=[];c1=[];c2=[];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">1</span>,<span class="number">0</span>,<span class="number">10</span>); <span class="comment">% 20个面</span></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">0</span>,<span class="number">1</span>,<span class="number">9</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">0</span>,<span class="number">9</span>,<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">0</span>,<span class="number">7</span>,<span class="number">10</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">6</span>,<span class="number">7</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">7</span>,<span class="number">6</span>,<span class="number">3</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">6</span>,<span class="number">8</span>,<span class="number">3</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">11</span>,<span class="number">10</span>,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">7</span>,<span class="number">3</span>,<span class="number">11</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">3</span>,<span class="number">2</span>,<span class="number">11</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">2</span>,<span class="number">3</span>,<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">10</span>,<span class="number">11</span>,<span class="number">4</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">2</span>,<span class="number">4</span>,<span class="number">11</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">2</span>,<span class="number">8</span>,<span class="number">5</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">4</span>,<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">5</span>,<span class="number">9</span>,<span class="number">1</span>);</span><br><span class="line">[center(<span class="keyword">end</span>+<span class="number">1</span>,:),c0(<span class="keyword">end</span>+<span class="number">1</span>,:),c1(<span class="keyword">end</span>+<span class="number">1</span>,:),c2(<span class="keyword">end</span>+<span class="number">1</span>,:)] = plot_triangle(A,<span class="number">8</span>,<span class="number">9</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">text(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line">text(A(<span class="number">2</span>,<span class="number">1</span>),A(<span class="number">2</span>,<span class="number">2</span>),A(<span class="number">2</span>,<span class="number">3</span>),<span class="string">&#x27;c0&#x27;</span>);</span><br><span class="line">text(A(<span class="number">1</span>,<span class="number">1</span>),A(<span class="number">1</span>,<span class="number">2</span>),A(<span class="number">1</span>,<span class="number">3</span>),<span class="string">&#x27;c1&#x27;</span>);</span><br><span class="line">text(A(<span class="number">11</span>,<span class="number">1</span>),A(<span class="number">11</span>,<span class="number">2</span>),A(<span class="number">11</span>,<span class="number">3</span>),<span class="string">&#x27;c2&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">d1=<span class="number">2</span>;d2=<span class="number">1</span>;d3=<span class="number">11</span>;</span><br><span class="line">line([A(d1,<span class="number">1</span>),A(d2,<span class="number">1</span>),A(d3,<span class="number">1</span>),A(d1,<span class="number">1</span>)],[A(d1,<span class="number">2</span>),A(d2,<span class="number">2</span>),A(d3,<span class="number">2</span>),A(d1,<span class="number">2</span>)],[A(d1,<span class="number">3</span>),A(d2,<span class="number">3</span>),A(d3,<span class="number">3</span>),A(d1,<span class="number">3</span>)],<span class="string">&#x27;color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scatter3</span>(center(<span class="number">1</span>,<span class="number">1</span>),center(<span class="number">1</span>,<span class="number">2</span>),center(<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">axis0 = <span class="built_in">cross</span>([<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],center(<span class="number">1</span>,:));</span><br><span class="line">axis0 = axis0./norm(axis0);</span><br><span class="line">axis1 = <span class="built_in">cross</span>(center(<span class="number">1</span>,:),axis0);</span><br><span class="line">axis1 = axis1./norm(axis1);</span><br><span class="line">quiver3(center(<span class="number">1</span>,<span class="number">1</span>),center(<span class="number">1</span>,<span class="number">2</span>),center(<span class="number">1</span>,<span class="number">3</span>),axis0(<span class="number">1</span>,<span class="number">1</span>),axis0(<span class="number">1</span>,<span class="number">2</span>),axis0(<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line">quiver3(center(<span class="number">1</span>,<span class="number">1</span>),center(<span class="number">1</span>,<span class="number">2</span>),center(<span class="number">1</span>,<span class="number">3</span>),axis1(<span class="number">1</span>,<span class="number">1</span>),axis1(<span class="number">1</span>,<span class="number">2</span>),axis1(<span class="number">1</span>,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">axis equal;</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220313100715334.png" alt="image-20220313100715334"></p><p>​    // Initialize star_position_scale. This scale is used to multiply stars position<br>​    // encoded as integers so that it optimize precision over the triangle.<br>​    // It has to be computed for each triangle because the relative orientation of the 2 axis is different for each triangle.</p><p>// 初始化star_position_scale。 此比例用于乘以星星位置 </p><p>// 编码为整数，以便优化三角形的精度。 </p><p>// 必须为每个三角形计算它，因为每个三角形的 2 轴的相对方向不同。 </p><hr><p>MaxPosVal 2147483647=0x7fff ffff</p><p>20个大三角形 star_position_scale = 0.763932 </p><p>80个小三角形 star_position_scale 0.381966</p><p>在ZoneArray.cpp中 查看变量 star_position_scale</p><p>mag_min 这一层中星等的下界。单位:millimag（10−3）。对最亮的恒星可能是负的。-2000 和 6000 </p><p>mag_range 这一层星等的范围，都为12.8星等。单位:millimags</p><p>mag_steps 用于描述mag_range中的值的步骤数都为256 。总是正的。单个恒星的mag条目从0..mag_steps开始 256 12800/256=50 .每次移动 一步0.05mags，可以看到软件中最低分辨率为0.05星等。最多256步。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">arg(level=<span class="number">0</span>和<span class="number">1</span>).arg(type=<span class="number">0</span>).arg(major=<span class="number">0</span>).arg(minor=<span class="number">8</span>)</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HipZoneArray</span> :</span> <span class="keyword">public</span> SpecialZoneArray&lt;Star1&gt;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpecialZoneArray</span> :</span> <span class="keyword">public</span> ZoneArray</span><br><span class="line">    </span><br><span class="line">rval = <span class="keyword">new</span> HipZoneArray(file, byte_swap, use_mmap, level, mag_min, mag_range, mag_steps);</span><br><span class="line">SpecialZoneArray&lt;Star&gt;::SpecialZoneArray();        </span><br></pre></td></tr></table></figure><p>在该函数中，可以得到star.hpp中的信息</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">          _______________</span><br><span class="line">0     x0 |               |</span><br><span class="line">1        |___________    |</span><br><span class="line">2     x1 |           |___|</span><br><span class="line">3        |_______        |</span><br><span class="line">4     bV |_______|_______|</span><br><span class="line">5    mag |_________|_____| bV</span><br><span class="line"></span><br><span class="line">int x0               :18</span><br><span class="line">int x1               :18</span><br><span class="line">unsigned int bV      :7</span><br><span class="line">unsigned int mag     :5</span><br></pre></td></tr></table></figure><hr><p>点鼠标一下，这是可以触发的函数。</p><p>StelObjectMgr::cleverFind<br>    StarMgr::searchAround 指向 放大倍率<br>        SpecialZoneArray&lt; Star&gt;::searchAround<br>            s-&gt;getJ2000Pos(z, static_cast&lt; float&gt;(movementFactor), tmp);</p><hr><p>注意到只有这里一次调用了星表里的26785=4979+21806个数据。</p><p>StarMgr::loadData<br>z-&gt;updateHipIndex(hipIndex);</p><p>​    HipZoneArray::updateHipIndex</p><p>因此在ZoneArray.cpp中仿写saveHipIndex函数为</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HipZoneArray::saveHipIndex</span><span class="params">(HipIndexStruct hipIndex[])</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">    StelCore* core = StelApp::getInstance().getCore();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">double</span> d2000 = <span class="number">2451545.0</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">double</span> movementFactor = (M_PI / <span class="number">180.</span>) * (<span class="number">0.0001</span> / <span class="number">3600.</span>) * ((core-&gt;getJDE() - d2000) / <span class="number">365.25</span>) / <span class="keyword">static_cast</span>&lt;<span class="keyword">double</span>&gt;(star_position_scale);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> SpecialZoneData&lt;Star1&gt; *z = getZones() + (nr_of_zones - <span class="number">1</span>); z &gt;= getZones(); z--) &#123; <span class="comment">// 100次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> Star1 *s = z-&gt;getStars() + z-&gt;size - <span class="number">1</span>; s &gt;= z-&gt;getStars(); s--) &#123;</span><br><span class="line">            Vec3f tmp;</span><br><span class="line">            s-&gt;getJ2000Pos(z, <span class="keyword">static_cast</span>&lt;<span class="keyword">float</span>&gt;(movementFactor), tmp);</span><br><span class="line">            qDebug() &lt;&lt; <span class="string">&quot;checkAndLoadCatalogcheckAndLoadCatalog&quot;</span>  &lt;&lt; ++aa &lt;&lt;  s-&gt;getHip()  &lt;&lt; s-&gt;getX0() &lt;&lt; s-&gt;getX1() &lt;&lt; s-&gt;getDx0() &lt;&lt; s-&gt;getDx1() &lt;&lt; s-&gt;getBV() &lt;&lt; s-&gt;getMag()  &lt;&lt; s-&gt;getPlx() &lt;&lt; s-&gt;getSpInt() &lt;&lt; s-&gt;getBVIndex() &lt;&lt; s-&gt;hasName() &lt;&lt; tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存文件的代码：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HipZoneArray::saveHipIndex</span><span class="params">(HipIndexStruct hipIndex[])</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">    <span class="function">QFile  <span class="title">myFile</span><span class="params">(<span class="string">&quot;C:/Users/hp/Desktop/catalog.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (myFile.open(QFile::WriteOnly | QFile::Append | QIODevice::Text)) &#123;</span><br><span class="line">        <span class="function">QTextStream <span class="title">out</span><span class="params">(&amp;myFile)</span></span>;</span><br><span class="line">        StelCore* core = StelApp::getInstance().getCore();</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">double</span> d2000 = <span class="number">2451545.0</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">double</span> movementFactor = (M_PI / <span class="number">180.</span>) * (<span class="number">0.0001</span> / <span class="number">3600.</span>) * ((core-&gt;getJDE() - d2000) / <span class="number">365.25</span>) / <span class="keyword">static_cast</span>&lt;<span class="keyword">double</span>&gt;(star_position_scale);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> SpecialZoneData&lt;Star1&gt; *z = getZones() + (nr_of_zones - <span class="number">1</span>); z &gt;= getZones(); z--) &#123; <span class="comment">// 100次</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> Star1 *s = z-&gt;getStars() + z-&gt;size - <span class="number">1</span>; s &gt;= z-&gt;getStars(); s--) &#123;</span><br><span class="line">                Vec3f tmp;</span><br><span class="line">                s-&gt;getJ2000Pos(z, <span class="keyword">static_cast</span>&lt;<span class="keyword">float</span>&gt;(movementFactor), tmp);</span><br><span class="line">                tmp.normalize();</span><br><span class="line">                Vec3d vel = core-&gt;getCurrentPlanet()-&gt;getHeliocentricEclipticVelocity();</span><br><span class="line">                vel       = StelCore::matVsop87ToJ2000 * vel * core-&gt;getAberrationFactor() * (AU / (<span class="number">86400.0</span> * SPEED_OF_LIGHT));</span><br><span class="line">                Vec3d pos = tmp.toVec3d() + vel;</span><br><span class="line">                pos.normalize();</span><br><span class="line">                qDebug() &lt;&lt; <span class="string">&quot;checkAndLoadCatalogcheckAndLoadCatalog&quot;</span>  &lt;&lt; ++aa &lt;&lt; s-&gt;getHip()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getX0() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getX1() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getDx0() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getDx1() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  s-&gt;getBV() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getMag()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getPlx() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getSpInt() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getBVIndex() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  s-&gt;hasName() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  tmp  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; level &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; z-&gt;getNrOfStars()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; star_position_scale &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                out  &lt;&lt;  aa &lt;&lt;  <span class="string">&quot;  &quot;</span> &lt;&lt;  s-&gt;getHip()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getX0() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getX1() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getDx0() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getDx1() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  s-&gt;getBV() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getMag()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getPlx() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getSpInt() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getBVIndex() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  s-&gt;hasName() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  pos[<span class="number">0</span>] &lt;&lt;  <span class="string">&quot;  &quot;</span> &lt;&lt; pos[<span class="number">1</span>] &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  pos[<span class="number">2</span>]  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; level &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; z-&gt;getNrOfStars()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; star_position_scale &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    myFile.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在StarMgr.cpp的StarMgr::searchAround中添加</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">qDebug() &lt;&lt; <span class="string">&quot;searchAround&quot;</span> &lt;&lt; ++bbbb &lt;&lt; vv &lt;&lt; limFov;</span><br><span class="line"><span class="keyword">if</span>(bbbb &gt;= <span class="number">23</span> )</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>* z : gridLevels)</span><br><span class="line">        z-&gt;saveHipIndex( hipIndex);</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220316101930812.png" alt="image-20220316101930812"></p><h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear all;close all;clc;</span><br><span class="line">tic</span><br><span class="line">A = importdata(<span class="string">&quot;catalog.txt&quot;</span>);</span><br><span class="line">hip = A(:,<span class="number">2</span>);</span><br><span class="line">x0 = A(:,<span class="number">3</span>);</span><br><span class="line">x1 = A(:,<span class="number">4</span>);</span><br><span class="line">dx0 =  A(:,<span class="number">5</span>);</span><br><span class="line">dx1 =  A(:,<span class="number">6</span>);</span><br><span class="line">bv = A(:,<span class="number">7</span>);</span><br><span class="line">mag = A(:,<span class="number">8</span>);</span><br><span class="line">plx = A(:,<span class="number">9</span>);</span><br><span class="line">spInt = A(:,<span class="number">10</span>);</span><br><span class="line">bvIndex = A(:,<span class="number">11</span>);</span><br><span class="line">hasName = A(:,<span class="number">12</span>);</span><br><span class="line">xyz = A(:,<span class="number">13</span>:<span class="number">15</span>);</span><br><span class="line">level = A(:,<span class="number">16</span>);</span><br><span class="line">getNrOfStars = A(:,<span class="number">17</span>);</span><br><span class="line">star_position_scale = A(:,<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">mag_<span class="built_in">true</span> = mag .* <span class="number">0.05</span> + <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">b = <span class="built_in">asind</span>(xyz(:,<span class="number">3</span>));</span><br><span class="line">a = <span class="built_in">acosd</span>(xyz(:,<span class="number">1</span>)./<span class="built_in">sqrt</span>(<span class="number">1</span>-xyz(:,<span class="number">3</span>).^<span class="number">2</span>));</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(b)</span><br><span class="line">    <span class="keyword">if</span>(xyz(<span class="built_in">i</span>,<span class="number">2</span>)&lt;<span class="number">0</span>)</span><br><span class="line">        a(<span class="built_in">i</span>,:)=<span class="number">360</span>-a(<span class="built_in">i</span>,:);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span>(level(<span class="built_in">i</span>)==<span class="number">0</span>)</span><br><span class="line">        mag_<span class="built_in">true</span>(<span class="built_in">i</span>) = <span class="number">-2</span> + mag(<span class="built_in">i</span>) * <span class="number">0.05</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">hh1 = (a./<span class="number">15</span>);</span><br><span class="line">hh = <span class="built_in">fix</span>(hh1);</span><br><span class="line">mm1 = (a./<span class="number">15</span> - hh)*<span class="number">60</span>;</span><br><span class="line">mm = <span class="built_in">fix</span>(mm1);</span><br><span class="line">ss = (mm1 - mm)*<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">al_hh = <span class="built_in">fix</span>(b);</span><br><span class="line">al_mm1 = (<span class="built_in">abs</span>(b)-<span class="built_in">abs</span>(al_hh))*<span class="number">60</span>;</span><br><span class="line">al_mm = <span class="built_in">fix</span>(al_mm1);</span><br><span class="line">al_ss = (al_mm1 - al_mm)*<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A=[A,a,b,hh,mm,ss,al_hh,al_mm,al_ss,mag_<span class="built_in">true</span>];</span><br><span class="line"></span><br><span class="line">xlswrite(<span class="string">&#x27;catal&#x27;</span>,A);</span><br><span class="line">toc</span><br></pre></td></tr></table></figure></h2><p>getJ2000Pos 函数</p><p>getJ2000EquatorialPos （StarWrapper.hpp）</p><p>只有StarWrapper.cpp 和 ZoneArray.cpp 包含 #include “StarWrapper.hpp”</p><p>ZoneArray.cpp<br>    StarMgr.hpp</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StelRegionObject</span> //抽象基类 </span></span><br><span class="line"><span class="class"><span class="title">virtual</span> <span class="title">Vec3d</span> <span class="title">getPointInRegion</span>() <span class="title">const</span>=</span><span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StelObject</span> :</span> <span class="keyword">public</span> StelRegionObject </span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> QString <span class="title">getInfoString</span><span class="params">(<span class="keyword">const</span> StelCore *, <span class="keyword">const</span> InfoStringGroup&amp; )</span> <span class="keyword">const</span> </span>= <span class="number">0</span>; <span class="comment">//抽象基类 </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Exoplanet</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MeteorShower</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Nova</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pulsar</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Quasar</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Satellite</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Supernova</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TelescopeClient</span> :</span> <span class="keyword">public</span> QObject, <span class="keyword">public</span> StelObject</span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">TelescopeClientASCOM</span> :</span> <span class="keyword">public</span> TelescopeClient</span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">TelescopeClientINDI</span> :</span> <span class="keyword">public</span> TelescopeClient</span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">TelescopeClientDirectLx200</span> :</span> <span class="keyword">public</span> TelescopeClient, <span class="keyword">public</span> Server</span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">TelescopeClientDirectNexStar</span> :</span> <span class="keyword">public</span> TelescopeClient, <span class="keyword">public</span> Server</span><br><span class="line">            <span class="class"><span class="keyword">class</span> <span class="title">TelescopeClientJsonRts2</span> :</span> <span class="keyword">public</span> TelescopeClient</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Asterism</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Constellation</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">CustomObject</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Nebula</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">NomenclatureItem</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Planet</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line">            </span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">StarWrapperBase</span> :</span> <span class="keyword">public</span> StelObject</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">StarWrapper</span> :</span> <span class="keyword">public</span> StarWrapperBase</span><br><span class="line">            <span class="function"><span class="keyword">virtual</span> Vec3d <span class="title">getJ2000EquatorialPos</span><span class="params">(<span class="keyword">const</span> StelCore * core)</span> <span class="keyword">const</span> Q_DECL_OVERRIDE</span></span><br><span class="line"><span class="function">           class StarWrapper1 : <span class="keyword">public</span> StarWrapper&lt;Star1&gt;</span></span><br><span class="line"><span class="function">                class StarWrapper2 : <span class="keyword">public</span> StarWrapper&lt;Star2&gt;</span></span><br><span class="line"><span class="function">                class StarWrapper3 : <span class="keyword">public</span> StarWrapper&lt;Star3&gt;</span></span><br></pre></td></tr></table></figure><hr><p>验证从二进制文件到赤经赤纬</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">qDebug() &lt;&lt; <span class="string">&quot;checkAndLoadCatalogcheckAndLoadCatalog&quot;</span>  &lt;&lt; ++aa &lt;&lt; s-&gt;getHip()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getX0() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getX1() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getDx0() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getDx1() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  s-&gt;getBV() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getMag()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getPlx() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getSpInt() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; s-&gt;getBVIndex() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  s-&gt;hasName() &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt;  tmp  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; level &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; z-&gt;getNrOfStars()  &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; star_position_scale &lt;&lt; movementFactor &lt;&lt; core-&gt;getJDE() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220317144732768.png" alt="image-20220317144732768"></p><p>验证最后一个星</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">s-&gt;getJ2000Pos(z, <span class="keyword">static_cast</span>&lt;<span class="keyword">float</span>&gt;(movementFactor), tmp);</span><br></pre></td></tr></table></figure><p>进入函数<br>        pos = (z-&gt;center) + (getX0())+movementFactor<em>getDx0()) </em> (z-&gt;axis0) + (getX1())+movementFactor<em>getDx1()) </em> (z-&gt;axis1);</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">(<span class="number">-623411838</span>+ans*(<span class="number">-37</span>) )* [<span class="number">-5.32625e-11</span>, <span class="number">1.69705e-10</span>, <span class="number">0</span>]+(<span class="number">-188238807</span>+ans*(<span class="number">-2097</span>))*[<span class="number">2.99612e-11</span>, <span class="number">9.40346e-12</span>, <span class="number">1.75073e-10</span>]+[<span class="number">0.939124</span>, <span class="number">0.294748</span>, <span class="number">-0.176549</span>]</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9667</span>    <span class="number">0.1872</span>   <span class="number">-0.2095</span></span><br><span class="line">ans./norm(ans)</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9603</span>    <span class="number">0.1859</span>   <span class="number">-0.2081</span></span><br><span class="line">    [<span class="number">0.960264</span>, <span class="number">0.185937</span>, <span class="number">-0.208135</span>]差不多</span><br><span class="line">    </span><br><span class="line">ans +[<span class="number">-7.89179e-06</span>, <span class="number">-9.1333e-05</span>, <span class="number">-3.95923e-05</span>] </span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9603</span>    <span class="number">0.1858</span>   <span class="number">-0.2082</span></span><br></pre></td></tr></table></figure><p> movementFactor = (M_PI / 180.) <em> (0.0001 / 3600.) </em> ((core-&gt;getJDE() - d2000) / 365.25) /(star_position_scale);</p><p>core-&gt;getJDE() = 2459656</p><p>d2000 = 2451545.0  截止2022.3.17 差距8111天</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="number">3.14159265358979323846</span> / <span class="number">180.0</span> * <span class="number">0.0001</span>/<span class="number">3600.0</span>*<span class="number">8111</span>/<span class="number">365.25</span>/<span class="number">60.5274</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">   <span class="number">1.7787e-10</span></span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220317145315365.png" alt="image-20220317145315365"></p><p>最终得到包含赤经赤纬星等的表</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220317161906242.png" alt="image-20220317161906242"></p>]]></content>
    
    
    <summary type="html">一直对Stellarium的星表文件充满好奇，在看了该二进制文件后不知该如何解析；在解析了从二进制文件到赤经赤纬表之后，推导从赤经赤纬前向到</summary>
    
    
    
    <category term="星表" scheme="https://tsuiwade.github.io/categories/%E6%98%9F%E8%A1%A8/"/>
    
    
    <category term="星表" scheme="https://tsuiwade.github.io/tags/%E6%98%9F%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>赤道坐标转为地平坐标</title>
    <link href="https://tsuiwade.github.io/2022/03/07/blog42-Equatorial2Horizontal/"/>
    <id>https://tsuiwade.github.io/2022/03/07/blog42-Equatorial2Horizontal/</id>
    <published>2022-03-07T20:14:46.000Z</published>
    <updated>2022-03-07T20:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>地平坐标系统是：<a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%B9%B3%E5%9D%90%E6%A8%99%E7%B3%BB">https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%B9%B3%E5%9D%90%E6%A8%99%E7%B3%BB</a></p><ul><li>高度角（Altitude, Alt）或仰角又称<a href="https://zh.wikipedia.org/wiki/天球坐标系统">地平纬度</a>，是天体和观测者所在地的地平线的夹角，有时就称为<a href="https://zh.wikipedia.org/wiki/相对高度">高度</a>或<a href="https://zh.wikipedia.org/wiki/海拔">海拔</a>标高（elevation, geometric height）。</li><li><a href="https://zh.wikipedia.org/wiki/方位角">方位角</a>（Azimuth, Az）又称地平经度，是沿着地平线测量的角度（由正北方为起点向东方测量）。</li></ul><p><strong>sin高度 = sin地球观察者纬度 <em> sin赤纬 + cos地球观察者纬度 </em> cos赤纬 * cos时角</strong></p><p><strong>cos方位 <em> cos高度 = - cos地球观察者纬度 </em> sin赤纬 + sin地球观察者纬度 <em> cos赤纬 </em> cos时角</strong></p><p><strong>sin方位 <em> cos高度 = cos赤纬 </em> sin 时角</strong></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307203646304.png" alt="image-20220307203646304"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307210913618.png" alt="image-20220307210913618"></p><p><a href="https://encyclopedia.thefreedictionary.com/Astronomical+coordinate+systems">https://encyclopedia.thefreedictionary.com/Astronomical+coordinate+systems</a></p><hr><p>《地平式望远镜轴系误差对指向精度和跟踪精度的影响》</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307201531562.png" alt="image-20220307201531562"></p><hr><p><a href="https://mooncaker816.github.io/2018/05/19/%E5%A4%A9%E6%96%87%E7%AE%97%E6%B3%9511/">https://mooncaker816.github.io/2018/05/19/%E5%A4%A9%E6%96%87%E7%AE%97%E6%B3%9511/</a></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307202417544.png" alt="image-20220307202417544"></p><p>//    A: azimuth方位角<br>//    h: elevation仰角<br>//    φ: latitude of observer on Earth观测纬度<br>//    ψ: longitude of observer on Earth观测经度<br>//    st: sidereal time at Greenwich at time of observation.恒星时</p><p>//    α: right ascension赤经（时角）<br>//    δ: declination赤纬</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307202425679.png" alt="image-20220307202425679"></p><p>//    α: right ascension coordinate to transform<br>//    δ: declination coordinate to transform<br>//    φ: latitude of observer on Earth 地球上观察者的纬度<br>//    ψ: longitude of observer on Earth 地球上观察者的经度<br>//    st: sidereal time at Greenwich at time of observation. 格林威治观测时的恒星时间。</p><p>//    A: azimuth of observed point, measured westward from the South.<br>//    h: elevation, or height of observed point above horizon.</p><hr><p>知乎 <a href="https://zhuanlan.zhihu.com/p/97325585">https://zhuanlan.zhihu.com/p/97325585</a></p><hr><p><em><code>UTC时间</code></em>(世界协调时间,UTC + 00:00)转北京(北京,UTC + 8:00)时间. 世界时钟, 时间转换, 计算与对照表.</p><p>一个地方的当地<code>恒星时</code>与<a href="https://baike.baidu.com/item/格林尼治天文台">格林尼治天文台</a>的恒星时之间的差就是这个地方的经度（参见天体导航）。因此通过观测恒星时可以确定当地的经度（假如格林尼治天文台的恒星时已知的话）或者可以确定时间（假如当地的经度已知的话）。</p><ul><li>一颗恒星的时角<em>t</em>、它的赤经<em>α</em>和当地的恒星时<em>θ</em>之间的关系为<em>t</em>=<em>θ</em>-<em>α</em></li><li>当地的恒星时等于位于<a href="https://baike.baidu.com/item/天顶">天顶</a>的恒星的赤经</li><li>当地的恒星时等于正位于<a href="https://baike.baidu.com/item/中天">中天</a>恒星的赤经</li></ul><p>通过确定恒星时可以简化天文学的计算，比如通过恒星时和当地的纬度可以很方便地计算出哪些星正好在地平线以上。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;地平坐标系统是：&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%B9%B3%E5%9D%90%E6%A8%99%E7%B3%BB&quot;&gt;https://zh.wikipedia.org/wiki/%E5%9C%B0%E5%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>指向精度的研究</title>
    <link href="https://tsuiwade.github.io/2022/03/05/blog41-point-1/"/>
    <id>https://tsuiwade.github.io/2022/03/05/blog41-point-1/</id>
    <published>2022-03-05T16:36:20.000Z</published>
    <updated>2022-03-05T16:36:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>虽然寥寥无几的引用量，但该文可能确实是我司使用的机架模型的源头。</p><p><strong>Luck J M. Mount model stability[C]//14th International Workshop on Laser Ranging Instrumentation. 2004.</strong></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220306221746844.png" alt="image-20220306221746844"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220306223205754.png" alt="image-20220306223205754"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220306221628712.png" alt="image-20220306221628712"></p><hr><p><strong>朱庆生, 陈伟民, 吴金虎. 卫星激光测距望远镜的指向改正[J]. 天文研究与技术: 国家天文台台刊, 2011, 8(3): 268-271.</strong></p><p>常用的指向误差模型有球谐函数模型、基本参数模型、机架模型等。球谐函数模型是对以球面为基准面的误差进行拟合，可以用于任何机架形式的望远镜，但其表达式的各项没有物理意义，模型不稳定，每次重测数据后，求得的模型参数变化极大。基本参数模型的模型参数有实际物理意义，参数之间相关性小，模型比较稳定，但需根据望远镜的机架形式，设计不同的模型，而且考虑的参数项比较少，有时会影响改正的精度。机架模型也有人称为转台模型，目前常用于地平式机架，通过对望远镜机架进行全面分析得出的模型，共有 23 项，每一项都有具体的物理意义。它是对基本参数模型的扩展，因此精度更高，模型的逼近能力强于基本参数模型，缺点是没有基本参数模型稳定。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220306103515401.png" alt="image-20220306103515401"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220306104049068.png" alt="image-20220306104049068"></p><p><img src="C:\Users\hp\AppData\Roaming\Typora\typora-user-images\image-20220306222049071.png" alt="image-20220306222049071"></p><hr><hr><p><strong>严灵杰. 光电望远镜视轴指向及预测技术研究[J]. 成都: 中国科学院光电技术研究所, 2019, 1.</strong></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220306110849188.png" alt="image-20220306110849188"></p><hr><p>张涯辉, 罗一涵, 徐伟峰, 等. 采用加权最小二乘法的恒星校正研究[J]. 光电工程, 2014, 41(5): 7-11. 用了该方法</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307213741142.png" alt="image-20220307213741142"></p><hr><p>张玉碟, 柳万胜, 罗一涵, 等. 一种三轴光电跟踪系统指向误差修正的方法[J]. 光电工程, 2014, 41(6): 51-55.</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307214621476.png" alt="image-20220307214621476"></p>]]></content>
    
    
    <summary type="html">一直想对我司使用的指向模型进行溯源研究</summary>
    
    
    
    <category term="指向模型" scheme="https://tsuiwade.github.io/categories/%E6%8C%87%E5%90%91%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="指向模型" scheme="https://tsuiwade.github.io/tags/%E6%8C%87%E5%90%91%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>视场与赤经范围的关系</title>
    <link href="https://tsuiwade.github.io/2022/03/03/blog40-guide-Sel-4-raROV/"/>
    <id>https://tsuiwade.github.io/2022/03/03/blog40-guide-Sel-4-raROV/</id>
    <published>2022-03-03T23:37:17.000Z</published>
    <updated>2022-03-03T23:37:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>球面三角学</p><p><a href="https://mathworld.wolfram.com/SphericalTrigonometry.html">https://mathworld.wolfram.com/SphericalTrigonometry.html</a></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220304202743522.png" alt="image-20220304202743522"></p><hr><p>《一种快速搜索导航星表的方法》</p><p><a href="https://patentimages.storage.googleapis.com/36/8b/67/874c0824e15854/CN101995248B.pdf">https://patentimages.storage.googleapis.com/36/8b/67/874c0824e15854/CN101995248B.pdf</a></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220303233833640.png" alt="image-20220303233833640"></p><p>还是不明白为什么是正切公式</p><hr><p><strong>王海涌, 徐皓. 一种星敏感器导航星筛选算法[J]. 激光与光电子学进展, 2021, 58(1): 0135001.</strong></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220304142358967.png" alt="image-20220304142358967"></p><p><a href="https://web.math.sinica.edu.tw/math_media/d281/28104.pdf">https://web.math.sinica.edu.tw/math_media/d281/28104.pdf</a></p><p><a href="https://mathworld.wolfram.com/SphericalTrigonometry.html">https://mathworld.wolfram.com/SphericalTrigonometry.html</a></p><p>中提到球面三角正弦公式</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220304151000732.png" alt="image-20220304151000732"></p><hr><p>《16mv精细导星星库构建与评价》</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301210751502.png" alt="image-20220301210751502"></p><hr><p>《<a href="http://geotech.chinaxiv.org/user/download.htm?id=6065">基于坐标系转换与QTM 编码的天球面探测覆盖栅格化分析方法研究</a>》</p><p>矩形锥视场</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220305100713620.png" alt="image-20220305100713620"></p><p>圆锥视场</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220305100740048.png" alt="image-20220305100740048"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;球面三角学&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://mathworld.wolfram.com/SphericalTrigonometry.html&quot;&gt;https://mathworld.wolfram.com/SphericalTrigonometry.html&lt;</summary>
      
    
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/categories/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/tags/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>K-vector算法</title>
    <link href="https://tsuiwade.github.io/2022/03/02/blog39-guideSel-3/"/>
    <id>https://tsuiwade.github.io/2022/03/02/blog39-guideSel-3/</id>
    <published>2022-03-02T21:21:40.000Z</published>
    <updated>2022-03-02T21:21:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文《Search-less algorithm for star pattern recognition》</p><p><a href="https://link.springer.com/content/pdf/10.1007/BF03546375.pdf">https://link.springer.com/content/pdf/10.1007/BF03546375.pdf</a> 引用数129</p><p>K矢量查找法</p><p>中文论文《基于导航星域和K矢量的快速星图识别算法》</p><p>《一种改进的基于Ｋ 矢量的星图识别算法》</p><hr><p>《基于导航星域和K矢量的快速星图识别算法》</p><p>假设待排序的值为0.01到0.99，共有83363个数值，数列平均递增。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear all ;close all;</span><br><span class="line">n = <span class="number">83363</span>;</span><br><span class="line">data=<span class="built_in">linspace</span>(<span class="number">0.01</span>,<span class="number">0.99</span>,<span class="number">83363</span>);</span><br><span class="line">D = (data(n)-data(<span class="number">1</span>))/(n<span class="number">-1</span>);</span><br><span class="line">a1 = n*D/(n<span class="number">-1</span>);</span><br><span class="line">a0 = data(<span class="number">1</span>) - a1 -D/<span class="number">2</span>;</span><br><span class="line">k = <span class="number">1</span>: n;</span><br><span class="line">costhe = a1 .* k + a0;</span><br><span class="line">K=[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scatter</span>(k,data,<span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">scatter</span>(k,costhe,<span class="string">&#x27;r&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220303085357833.png" alt="image-20220303085357833"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220303085450014.png" alt="image-20220303085450014"></p><p>搭建完毕，现在开始使用。</p><p>假定范围为（0.55,0.59），假设theta=0.57，delta=0.02</p><p>ib=45935</p><p>it=49338</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear all ;close all;</span><br><span class="line">tic</span><br><span class="line">n = <span class="number">83363</span>;</span><br><span class="line">data=<span class="built_in">linspace</span>(<span class="number">0.01</span>,<span class="number">0.99</span>,<span class="number">83363</span>);</span><br><span class="line">D = (data(n)-data(<span class="number">1</span>))/(n<span class="number">-1</span>);</span><br><span class="line">a1 = n*D/(n<span class="number">-1</span>);</span><br><span class="line">a0 = data(<span class="number">1</span>) - a1 -D/<span class="number">2</span>;</span><br><span class="line">k = <span class="number">1</span>: n;</span><br><span class="line">costhe = a1 .* k + a0;</span><br><span class="line">K(<span class="number">1</span>)=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">2</span>:n</span><br><span class="line">    K(<span class="built_in">j</span>) = sum(sum(data &lt; costhe(<span class="built_in">j</span>)));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">ib = <span class="built_in">fix</span>((<span class="number">0.59</span>-a0)/a1);</span><br><span class="line">it = <span class="built_in">fix</span>((<span class="number">0.55</span>-a0)/a1)+<span class="number">1</span>;</span><br><span class="line">kstart = K(ib) +<span class="number">1</span> ;</span><br><span class="line">kend = K(it) +<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">toc</span><br></pre></td></tr></table></figure><p>kstar=45936</p><p>kend=49339</p><p>历时 5.060949 秒。</p><hr><p>《一种改进的基于Ｋ 矢量的星图识别算法》</p><p>提到了该方法有问题</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220303171127111.png" alt="image-20220303171127111"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220303213921527.png" alt="image-20220303213921527"></p>]]></content>
    
    
    <summary type="html">本文研究K-vector搜索算法</summary>
    
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/categories/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/tags/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>均匀性-玻尔兹曼熵</title>
    <link href="https://tsuiwade.github.io/2022/02/28/blog38-guideSel-2/"/>
    <id>https://tsuiwade.github.io/2022/02/28/blog38-guideSel-2/</id>
    <published>2022-02-28T11:04:22.000Z</published>
    <updated>2022-02-28T11:04:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>在多篇文章中提到玻尔兹曼熵来表征评价均匀性（还有各分区内的星数标准差）。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220228111816120.png" alt="image-20220228111816120"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301160342968.png" alt="image-20220301160342968"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301211333236.png" alt="image-20220301211333236"></p><h2 id="多尺度像面分割《CN201510107562-0-用于星敏感器的筛选导航星的方法》"><a href="#多尺度像面分割《CN201510107562-0-用于星敏感器的筛选导航星的方法》" class="headerlink" title="多尺度像面分割《CN201510107562.0-用于星敏感器的筛选导航星的方法》"></a>多尺度像面分割《CN201510107562.0-用于星敏感器的筛选导航星的方法》</h2><h3 id="玻尔兹曼熵《Boltzmann-entropy-based-guide-star-selection-algorithm-for-star-tracker》2005"><a href="#玻尔兹曼熵《Boltzmann-entropy-based-guide-star-selection-algorithm-for-star-tracker》2005" class="headerlink" title="玻尔兹曼熵《Boltzmann entropy-based guide star selection algorithm for star tracker》2005"></a>玻尔兹曼熵《Boltzmann entropy-based guide star selection algorithm for star tracker》2005</h3><h2 id="正交网格法《A-general-method-of-the-automatical-selection-of-guide-star》"><a href="#正交网格法《A-general-method-of-the-automatical-selection-of-guide-star》" class="headerlink" title="正交网格法《A general method of the automatical selection of guide star》"></a>正交网格法《A general method of the automatical selection of guide star》</h2><p>用到uniformity的计算</p><h3 id="均匀性计算《Star-trackers-star-catalogs-and-attitude-determination-Probabilistic-aspects-of-system-design》1993"><a href="#均匀性计算《Star-trackers-star-catalogs-and-attitude-determination-Probabilistic-aspects-of-system-design》1993" class="headerlink" title="均匀性计算《Star trackers, star catalogs, and attitude determination-Probabilistic aspects of system design》1993"></a>均匀性计算《Star trackers, star catalogs, and attitude determination-Probabilistic aspects of system design》1993</h3><h4 id="《基于螺旋基准点的导航星选取方法》"><a href="#《基于螺旋基准点的导航星选取方法》" class="headerlink" title="《基于螺旋基准点的导航星选取方法》"></a>《基于螺旋基准点的导航星选取方法》</h4><p>均匀性很好</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220302143041244.png" alt="image-20220302143041244"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220302151757196.png" alt="image-20220302151757196"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear all ;close all;</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line">sphere(<span class="number">50</span>);</span><br><span class="line">alpha(<span class="number">0.1</span>);</span><br><span class="line"><span class="built_in">hold</span> on ;</span><br><span class="line"></span><br><span class="line">z=[];</span><br><span class="line">theta=[];</span><br><span class="line">fai=[];</span><br><span class="line"></span><br><span class="line">n = <span class="number">30</span>;</span><br><span class="line">k = <span class="number">0</span>:n<span class="number">-1</span>;</span><br><span class="line">z = <span class="number">1</span>-(<span class="number">2</span>*k+<span class="number">1</span>)/n;</span><br><span class="line">theta=<span class="built_in">acos</span>(z);</span><br><span class="line">fai=<span class="built_in">sqrt</span>(n*<span class="built_in">pi</span>).*theta;</span><br><span class="line">x = <span class="built_in">sin</span>(theta).*<span class="built_in">cos</span>(fai);</span><br><span class="line">y = <span class="built_in">sin</span>(theta).*<span class="built_in">sin</span>(fai);</span><br><span class="line">A = [x.&#x27;, y.&#x27; ,z.&#x27;];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(A)<span class="number">-1</span> </span><br><span class="line">    delta(<span class="built_in">i</span>,:) = <span class="built_in">acosd</span>(A(<span class="built_in">i</span>,:)*A(<span class="built_in">i</span>+<span class="number">1</span>,:).&#x27;);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">mean</span> = <span class="built_in">mean</span>(delta);</span><br><span class="line">newmatrix = <span class="number">1</span>/<span class="built_in">length</span>(A).*(A.&#x27;*A)</span><br><span class="line">eigen = eig(newmatrix)</span><br><span class="line">eigen(<span class="number">1</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">1</span>)) + eigen(<span class="number">2</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">2</span>)) + eigen(<span class="number">3</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">scatter3</span>(x,y,z,<span class="string">&#x27;filled&#x27;</span>);</span><br><span class="line"><span class="built_in">plot3</span>(x,y,z,<span class="string">&#x27;r-&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">text(<span class="number">1.1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;FontSize&#x27;</span>,<span class="number">14</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">1.1</span>,<span class="number">0</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;FontSize&#x27;</span>,<span class="number">14</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1.1</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;FontSize&#x27;</span>,<span class="number">14</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,A(<span class="number">2</span>,<span class="number">1</span>),A(<span class="number">2</span>,<span class="number">2</span>),A(<span class="number">2</span>,<span class="number">3</span>),<span class="number">1</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">s=<span class="number">20</span>;</span><br><span class="line">xmin = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">1</span>) - <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">1</span>)^<span class="number">2</span>);</span><br><span class="line">xmax = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">1</span>) + <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">1</span>)^<span class="number">2</span>);</span><br><span class="line">ymin = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">2</span>) - <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">2</span>)^<span class="number">2</span>);</span><br><span class="line">ymax = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">2</span>) + <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">2</span>)^<span class="number">2</span>);</span><br><span class="line">zmin = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">3</span>) - <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">3</span>)^<span class="number">2</span>);</span><br><span class="line">zmax = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">3</span>) + <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">3</span>)^<span class="number">2</span>);</span><br><span class="line">                     </span><br><span class="line">plotcube([xmax-xmin ymax-ymin zmax-zmin],[ xmin  ymin  zmin],<span class="number">.8</span>,[<span class="number">1</span> <span class="number">0</span> <span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">view(<span class="number">-30</span>,<span class="number">10</span>)</span><br><span class="line">axis equal</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220320155757356.png" alt="image-20220320155757356"></p><hr><p>后来我又看到 <a href="https://zhuanlan.zhihu.com/p/25988652?group_id=828963677192491008">https://zhuanlan.zhihu.com/p/25988652?group_id=828963677192491008</a> <strong>菲波那契网格</strong></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear all ;close all;</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line">sphere(<span class="number">50</span>);</span><br><span class="line">axis equal;</span><br><span class="line">alpha(<span class="number">0.1</span>);</span><br><span class="line"><span class="built_in">hold</span> on ;</span><br><span class="line"></span><br><span class="line">n = <span class="number">30</span>;</span><br><span class="line">k = <span class="number">1</span>:n;</span><br><span class="line">c = (<span class="built_in">sqrt</span>(<span class="number">5</span>)<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">z = (<span class="number">2</span>*k<span class="number">-1</span>)/n - <span class="number">1</span>;</span><br><span class="line">x = <span class="built_in">sqrt</span>(<span class="number">1</span>-z.^<span class="number">2</span>).*<span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">pi</span>.*k*c);</span><br><span class="line">y = <span class="built_in">sqrt</span>(<span class="number">1</span>-z.^<span class="number">2</span>).*<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>.*k*c);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scatter3</span>(x,y,z);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A = [x.&#x27;, y.&#x27; ,z.&#x27;];</span><br><span class="line"></span><br><span class="line">newmatrix = <span class="number">1</span>/<span class="built_in">length</span>(A).*(A.&#x27;*A)</span><br><span class="line">eigen = eig(newmatrix)</span><br><span class="line">eigen(<span class="number">1</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">1</span>)) + eigen(<span class="number">2</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">2</span>)) + eigen(<span class="number">3</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220320160017779.png" alt="image-20220320160017779"></p><p>效果并不好</p><hr><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220321101324772.png" alt="image-20220321101324772"></p><hr><p>阿基米德螺旋线</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220320105605922.png" alt="image-20220320105605922"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear all; close all;</span><br><span class="line">a=<span class="number">0</span>;<span class="comment">%起始位置</span></span><br><span class="line">b=<span class="number">3</span>;<span class="comment">%螺线间距参数</span></span><br><span class="line">theta = <span class="number">0</span>:<span class="number">0.05</span>*<span class="built_in">pi</span>:<span class="number">10</span>*<span class="built_in">pi</span>;<span class="comment">%θ的范围和步长，同时也可以控制螺线的旋转方向</span></span><br><span class="line">coe=a+b*theta;<span class="comment">%阿基米德螺线方程</span></span><br><span class="line">x = (coe.*<span class="built_in">cos</span>(theta));<span class="comment">%因使用需要，获取直角坐标系下x轴的坐标并进行四舍五入</span></span><br><span class="line">y = (coe.*<span class="built_in">sin</span>(theta));<span class="comment">%因使用需要，获取直角坐标系下y轴的坐标并进行四舍五入</span></span><br><span class="line">r = <span class="built_in">pi</span>*b;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> :<span class="built_in">length</span>(x)</span><br><span class="line">    <span class="built_in">hold</span> on;</span><br><span class="line">    rectangle(<span class="string">&#x27;Position&#x27;</span>,[x(<span class="built_in">i</span>)-r,y(<span class="built_in">i</span>)-r,<span class="number">2</span>*r,<span class="number">2</span>*r],<span class="string">&#x27;Curvature&#x27;</span>,[<span class="number">1</span>,<span class="number">1</span>],<span class="string">&#x27;linewidth&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;c&#x27;</span>);<span class="comment">%将获取的坐标打印在图纸上</span></span><br><span class="line">xt=x&#x27;;<span class="comment">%将x轴数据转置成列，便于导出使用</span></span><br><span class="line">yt=y&#x27;;<span class="comment">%将y周数据转置成列，便于导出使用</span></span><br><span class="line">axis equal</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220307114759208.png" alt="image-20220307114759208"></p><p>弧长公式 <a href="https://www.zhihu.com/question/27384632">https://www.zhihu.com/question/27384632</a></p><h4 id="《均匀快速的导航星选取方法》"><a href="#《均匀快速的导航星选取方法》" class="headerlink" title="《均匀快速的导航星选取方法》"></a>《均匀快速的导航星选取方法》</h4><p>在赤纬带平分点，矩形范围的代码见下。（两角和余弦公式）</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220302200145394.png" alt="image-20220302200145394"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220302211206988.png" alt="image-20220302211206988"></p><h4 id="《16mv精细导星星库构建与评价》"><a href="#《16mv精细导星星库构建与评价》" class="headerlink" title="《16mv精细导星星库构建与评价》"></a>《16mv精细导星星库构建与评价》</h4><p>分区后取最亮几个。</p><p>国内研究构建星库的方法主要分为两类:第一类从星表划分角度出发,通过不同的划分方式进行导星筛选,现有的星表划分方法主要有赤纬带法、圆锥法、球矩形法、内接正方体法等;第二类从局部天区出发,主要包括回归筛星法、星等加权算法等。</p><p>评价标准：完备性 、均匀性和冗余性。（均匀性、速度、多于3个星的分区数概率）</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301210751502.png" alt="image-20220301210751502"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301210838500.png" alt="image-20220301210838500"></p><h4 id="《适用于小视场星敏感器的导航星表构建方法》"><a href="#《适用于小视场星敏感器的导航星表构建方法》" class="headerlink" title="《适用于小视场星敏感器的导航星表构建方法》"></a>《适用于小视场星敏感器的导航星表构建方法》</h4><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220303214512056.png" alt="image-20220303214512056"></p><hr><p>在1993年的均匀性计算文章中提到这一计算方法</p><p>总体均匀性计算方法：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220228225805510.png" alt="image-20220228225805510"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220228225835383.png" alt="image-20220228225835383"></p><p>局部均匀性计算方法：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220304094711632.png" alt="image-20220304094711632"></p><hr><p>以上一篇《基于星座聚类的星敏感器导航星优选算法研究》为例，</p><p>所有4908个点的全局均匀性为</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% boltzmannEntropy.m</span></span><br><span class="line">clear</span><br><span class="line">clc</span><br><span class="line">profile on</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(:,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(:,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(:,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(:,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(:,<span class="number">3</span>))  ];</span><br><span class="line">newmatrix = <span class="number">1</span>/<span class="built_in">length</span>(A).*(A.&#x27;*A)</span><br><span class="line">eigen = eig(newmatrix)</span><br><span class="line"></span><br><span class="line">eigen(<span class="number">1</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">1</span>)) + eigen(<span class="number">2</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">2</span>)) + eigen(<span class="number">3</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>newmatrix =</p><p>​    0.2799   -0.0070    0.0483<br>   -0.0070    0.3631    0.0007<br>​    0.0483    0.0007    0.3570</p><p>eigen =</p><p>​    0.2562<br>​    0.3632<br>​    0.3805</p><p>ans =</p><p>​    0.0142</p><p>均匀化后 得到39个点 data=</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear</span><br><span class="line">clc</span><br><span class="line">profile on</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line">bandwidth = <span class="number">0</span>;</span><br><span class="line"><span class="comment">%% 加载数据</span></span><br><span class="line"><span class="comment">% : = 1:end;</span></span><br><span class="line">data =  [  <span class="built_in">cosd</span>(star_data(:,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(:,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(:,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(:,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(:,<span class="number">3</span>))  ];</span><br><span class="line"></span><br><span class="line">x=data&#x27;;</span><br><span class="line"></span><br><span class="line">tic</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">length</span>(data)&gt;<span class="number">150</span></span><br><span class="line">    bandwidth = bandwidth + <span class="number">0.1</span>;</span><br><span class="line">        [clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(data.&#x27;,bandwidth);</span><br><span class="line">        numClust = <span class="built_in">length</span>(clustMembsCell);</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">length</span>(<span class="built_in">find</span>(point2cluster==mode(point2cluster)))&gt;<span class="number">1</span>)</span><br><span class="line">            [val,idx]=<span class="built_in">min</span>(dist(clustCent(:,mode(point2cluster)).&#x27;,data.&#x27;))   ;</span><br><span class="line">            data(idx,:)=[];</span><br><span class="line">            x(:,idx)=[];</span><br><span class="line">            [clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(data.&#x27;,bandwidth);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        numClust = <span class="built_in">length</span>(clustMembsCell);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>),clf,<span class="built_in">hold</span> on;axis equal</span><br><span class="line">cVec = <span class="string">&#x27;bgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmyk&#x27;</span>;<span class="comment">%, cVec = [cVec cVec];</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">min</span>(numClust,<span class="built_in">length</span>(cVec))</span><br><span class="line">    myMembers = clustMembsCell&#123;k&#125;;</span><br><span class="line">    myClustCen = clustCent(:,k);</span><br><span class="line">    <span class="built_in">plot</span>(x(<span class="number">2</span>,myMembers),x(<span class="number">1</span>,myMembers),[cVec(k) <span class="string">&#x27;.&#x27;</span>]);</span><br><span class="line">    <span class="built_in">plot</span>(myClustCen(<span class="number">2</span>),myClustCen(<span class="number">1</span>),<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;MarkerEdgeColor&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;MarkerFaceColor&#x27;</span>,cVec(k), <span class="string">&#x27;MarkerSize&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">title([<span class="string">&#x27;no shifting, numClust:&#x27;</span> int2str(numClust)])</span><br><span class="line"><span class="built_in">hold</span> on </span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line">sphere(<span class="number">50</span>);</span><br><span class="line">alpha(<span class="number">0.1</span>);</span><br><span class="line"><span class="built_in">hold</span> on ;</span><br><span class="line"><span class="built_in">scatter3</span>(data(:,<span class="number">1</span>),data(:,<span class="number">2</span>),data(:,<span class="number">3</span>),<span class="string">&#x27;filled&#x27;</span>);</span><br><span class="line">view(<span class="number">-30</span>,<span class="number">10</span>)</span><br><span class="line">axis equal</span><br><span class="line"></span><br><span class="line">A  =  data;</span><br><span class="line">newmatrix = <span class="number">1</span>/<span class="built_in">length</span>(A).*(A.&#x27;*A)</span><br><span class="line">eigen = eig(newmatrix)</span><br><span class="line"></span><br><span class="line">eigen(<span class="number">1</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">1</span>)) + eigen(<span class="number">2</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">2</span>)) + eigen(<span class="number">3</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">3</span>))</span><br><span class="line">toc</span><br></pre></td></tr></table></figure><p>0.721096202739022    0.143274305623194    -0.677858937938827<br>0.968970810392417    0.208978537391637    0.131998255735122<br>0.569826352357379    0.276879108656515    0.773715637265177<br>0.228610689351435    0.164381998103028    -0.959539322494872<br>0.680467391588214    0.574452415904999    0.454937963733565<br>0.755501580234282    0.652710692710075    0.0564456719814448<br>0.504277122250002    0.768039960865827    -0.394739410863010<br>0.154912237007631    0.405692531666614    0.900786194707282<br>0.210384928706513    0.600544339596624    -0.771417317637872<br>0.143977198200687    0.816855223274374    0.558585813109905<br>-0.229099414143074    0.950795223816936    -0.208571092930452<br>-0.282616508078908    0.919125613504918    0.274474071563222<br>-0.273028245935124    0.599816587126275    0.752114112837791<br>-0.384654835774312    0.742153343311259    -0.548861614915233<br>-0.256254169146301    0.406094432070341    -0.877166525259945<br>-0.739931959521445    0.571829210408285    -0.354276797719793<br>-0.806338802865188    0.579353885367924    0.119024411374415<br>-0.760075452992603    0.337837739926240    0.555113472399671<br>-0.487550601625308    0.150466743789691    0.860031493532724<br>-0.987416677336434    0.156220148544471    0.0245676719820876<br>-0.898581139351745    -0.0465144783456416    0.436335122704501<br>-0.374139568095630    -0.0287413085026819    -0.926926923101692<br>-0.963578273457490    -0.260891712855464    -0.0587573406820316<br>-0.799916216534544    -0.556325600463240    0.225024160467884<br>-0.732478694296601    -0.536144597346316    -0.419552062487963<br>-0.478334336301847    -0.740621679799566    0.471885356973005<br>-0.194005559456996    -0.435699798511738    0.878935451826020<br>-0.314232785230549    -0.886073947077770    -0.340779572445699<br>-0.00720050076528926    -0.0591052787344646    0.998225785488659<br>-0.0490019433066575    -0.732931424546231    -0.678535434936750<br>0.0801942976395903    -0.872038194549829    0.482823220104800<br>0.368597406332163    -0.929570349282381    0.00590912685900466<br>0.323982389195822    -0.553545295684837    0.767217711680429<br>0.514345456211916    -0.579655346834382    -0.632019327679517<br>0.827337679920563    -0.510494571429276    -0.234323827053289<br>0.448212896485379    -0.212583754752496    -0.868281835949317<br>0.964675223452813    -0.215965114222275    0.150866771342216<br>0.724877321462857    -0.104703930494290    0.680874405281827<br>0.927771336185871    -0.108671846203537    -0.356974477511487</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301152248993.png" alt="image-20220301152248993"></p><p>newmatrix =</p><p>​    0.3527   -0.0057   -0.0221<br>   -0.0057    0.3007    0.0039<br>   -0.0221    0.0039    0.3466</p><p>eigen =</p><p>​    0.3001<br>​    0.3273<br>​    0.3726</p><p>ans =</p><p>​    0.0040</p><p>均匀性不错。</p><p>又做一次实验</p><p>newmatrix =<br>    0.3364   -0.0062   -0.0127<br>   -0.0062    0.3195    0.0007<br>   -0.0127    0.0007    0.3441</p><p>eigen =<br>    0.3169<br>    0.3290<br>    0.3541</p><p>ans =<br>    0.0011</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301165031830.png" alt="image-20220301165031830"></p><p>随机选取39个点</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc;clear;close all;</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line">star_data_xyz(:,<span class="number">1</span>) = <span class="built_in">cos</span>(star_data(:,<span class="number">2</span>) * <span class="built_in">pi</span> / <span class="number">180</span>) .* <span class="built_in">cos</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line">star_data_xyz(:,<span class="number">2</span>) = <span class="built_in">sin</span>(star_data(:,<span class="number">2</span>) * <span class="built_in">pi</span> / <span class="number">180</span>) .* <span class="built_in">cos</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line">star_data_xyz(:,<span class="number">3</span>) = <span class="built_in">sin</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line">A = star_data_xyz(randperm(<span class="built_in">length</span>(star_data_xyz), <span class="number">39</span>),:)</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">scatter3</span>(star_data_xyz(:,<span class="number">1</span>),star_data_xyz(:,<span class="number">2</span>),star_data_xyz(:,<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line">sphere(<span class="number">50</span>);</span><br><span class="line">alpha(<span class="number">0.1</span>);</span><br><span class="line"><span class="built_in">hold</span> on ;</span><br><span class="line"><span class="built_in">scatter3</span>(A(:,<span class="number">1</span>),A(:,<span class="number">2</span>),A(:,<span class="number">3</span>),<span class="string">&#x27;filled&#x27;</span>);</span><br><span class="line">view(<span class="number">-30</span>,<span class="number">10</span>)</span><br><span class="line">axis equal</span><br><span class="line">newmatrix = <span class="number">1</span>/<span class="built_in">length</span>(A).*(A.&#x27;*A)</span><br><span class="line">eigen = eig(newmatrix)</span><br><span class="line">eigen(<span class="number">1</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">1</span>)) + eigen(<span class="number">2</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">2</span>)) + eigen(<span class="number">3</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">3</span>))</span><br><span class="line">axis equal</span><br></pre></td></tr></table></figure><p>newmatrix =<br>    0.3068   -0.0422    0.0801<br>   -0.0422    0.3637   -0.0381<br>    0.0801   -0.0381    0.3295</p><p>eigen =<br>    0.2368<br>    0.3226<br>    0.4406</p><p>ans =<br>    0.0314</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301161540597.png" alt="image-20220301161540597"></p><hr><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 矩形范围</span></span><br><span class="line">clear all ;close all;</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line">sphere(<span class="number">50</span>);</span><br><span class="line">alpha(<span class="number">0.1</span>);</span><br><span class="line"><span class="built_in">hold</span> on ;</span><br><span class="line"></span><br><span class="line">z=[];</span><br><span class="line">theta=[];</span><br><span class="line">fai=[];</span><br><span class="line"></span><br><span class="line">n = <span class="number">30</span>;</span><br><span class="line">k = <span class="number">0</span>:n<span class="number">-1</span>;</span><br><span class="line">z = <span class="number">1</span>-(<span class="number">2</span>*k+<span class="number">1</span>)/n;</span><br><span class="line">theta=<span class="built_in">acos</span>(z);</span><br><span class="line">fai=<span class="built_in">sqrt</span>(n*<span class="built_in">pi</span>).*theta;</span><br><span class="line">x = <span class="built_in">sin</span>(theta).*<span class="built_in">cos</span>(fai);</span><br><span class="line">y = <span class="built_in">sin</span>(theta).*<span class="built_in">sin</span>(fai);</span><br><span class="line">A = [x.&#x27;, y.&#x27; ,z.&#x27;];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="built_in">length</span>(A)<span class="number">-1</span> </span><br><span class="line">    delta(<span class="built_in">i</span>,:) = <span class="built_in">acosd</span>(A(<span class="built_in">i</span>,:)*A(<span class="built_in">i</span>+<span class="number">1</span>,:).&#x27;);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">mean</span> = <span class="built_in">mean</span>(delta);</span><br><span class="line">newmatrix = <span class="number">1</span>/<span class="built_in">length</span>(A).*(A.&#x27;*A)</span><br><span class="line">eigen = eig(newmatrix)</span><br><span class="line">eigen(<span class="number">1</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">1</span>)) + eigen(<span class="number">2</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">2</span>)) + eigen(<span class="number">3</span>)*<span class="built_in">log</span>(<span class="number">3</span>*eigen(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">scatter3</span>(x,y,z,<span class="string">&#x27;filled&#x27;</span>);</span><br><span class="line"><span class="built_in">plot3</span>(x,y,z,<span class="string">&#x27;r-&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">text(<span class="number">1.1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;FontSize&#x27;</span>,<span class="number">14</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">1.1</span>,<span class="number">0</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;FontSize&#x27;</span>,<span class="number">14</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0</span>,<span class="number">1.1</span>,<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;FontSize&#x27;</span>,<span class="number">14</span>);</span><br><span class="line">quiver3(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,A(<span class="number">2</span>,<span class="number">1</span>),A(<span class="number">2</span>,<span class="number">2</span>),A(<span class="number">2</span>,<span class="number">3</span>),<span class="number">1</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line">s=<span class="number">20</span>;</span><br><span class="line">xmin = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">1</span>) - <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">1</span>)^<span class="number">2</span>);</span><br><span class="line">xmax = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">1</span>) + <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">1</span>)^<span class="number">2</span>);</span><br><span class="line">ymin = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">2</span>) - <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">2</span>)^<span class="number">2</span>);</span><br><span class="line">ymax = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">2</span>) + <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">2</span>)^<span class="number">2</span>);</span><br><span class="line">zmin = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">3</span>) - <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">3</span>)^<span class="number">2</span>);</span><br><span class="line">zmax = <span class="built_in">cosd</span>(s) * A(<span class="number">2</span>,<span class="number">3</span>) + <span class="built_in">sind</span>(s) * <span class="built_in">sqrt</span>(<span class="number">1</span>-A(<span class="number">2</span>,<span class="number">3</span>)^<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">plotcube([xmax-xmin ymax-ymin zmax-zmin],[ xmin  ymin  zmin],<span class="number">.8</span>,[<span class="number">1</span> <span class="number">0</span> <span class="number">0</span>]);</span><br><span class="line">view(<span class="number">-30</span>,<span class="number">10</span>)</span><br><span class="line">axis equal</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">接着上文求解球面上的均匀性</summary>
    
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/categories/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/tags/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>《基于星座聚类的星敏感器导航星优选算法研究》的复现</title>
    <link href="https://tsuiwade.github.io/2022/02/24/blog37-guideSel-1/"/>
    <id>https://tsuiwade.github.io/2022/02/24/blog37-guideSel-1/</id>
    <published>2022-02-24T17:20:11.000Z</published>
    <updated>2022-06-28T06:32:02.072Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>一直对公司采用的指向模型修正过程中的选星过程很感兴趣，想知道是否有相关的文献。</p><p>的确有找到相关文献，想就此进行复现。先对下文进行复现。</p><p><code>吴峰, 朱锡芳, 相入喜, 等. 基于星座聚类的星敏感器导航星优选算法研究[J]. 微电子学与计算机, 2018, 35(3): 140-144.</code></p><p>主要涉及<code>Mean Shift</code>（均值漂移）算法</p><hr><h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>一般对原始星表恒星数据做星等阈值处理， 即可得到导航星星库． <code>为提高星图识别稳定性， 增强星敏感器系统性能</code>， 通常要求导航星在天球上分布均匀． 为此， 国内外许多研究人员提出了进一步筛选导航星的算法．   </p><hr><h1 id="相关文献："><a href="#相关文献：" class="headerlink" title="相关文献："></a>相关文献：</h1><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220224211251099.png" alt="image-20220224211251099"></p><hr><h1 id="算法过程"><a href="#算法过程" class="headerlink" title="算法过程"></a>算法过程</h1><p>通常星座区域的恒星密度高， 星座和星座之间的区域星密度低． 为此， 本文首先借鉴Mean Shift（均值漂移）算法， 提出星座聚类算法， 将视场内的恒星划分到不同的星座． 然后， 提出基于星座聚类的导航星优选算法， 通过每次选择星数最多的一个星座， 并删除离该星座中心最近的一颗恒星， 最终实现导航星的均匀分布  </p><p>Mean Shift（均值漂移）是<strong>基于密度的非参数聚类算法</strong>，其算法思想是假设不同簇类的数据集符合不同的概率密度分布，找到任一样本点<strong>密度增大的最快方向</strong>（最快方向的含义就是Mean Shift），样本密度高的区域对应于该分布的最大值，这些样本点最终会在局部密度最大值收敛，且收敛到相同局部最大值的点被认为是同一簇类的成员。（<a href="https://cloud.tencent.com/developer/article/1459530）">https://cloud.tencent.com/developer/article/1459530）</a></p><p><strong>1.核密度估计</strong></p><p>Mean Shift算法用核函数估计样本的密度，最常用的核函数是高斯核。它的工作原理是在数据集上的<strong>每一个样本点</strong>都设置一个核函数，然后对所有的核函数相加，得到数据集的核密度估计（kernel density estimation）。</p><p>假设我们有大小为n的d维数据集</p><p>如下图，我们用高斯核估计一维数据集的密度，每个样本点都设置了以该样本点为中心的高斯分布，累加所有的高斯分布，得到该数据集的密度。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220224212833039.png" alt="image-20220224212833039"></p><p>其中虚线表示每个样本点的高斯核，实线表示累加所有样本高斯核后的数据集密度。因此，我们通过高斯核来得到数据集的密度。</p><p><strong>5.图像分割</strong>示例</p><p>mean shift通过对像素空间进行聚类，达到图像分割的目的。</p><p>我们对下图进行图像分割：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220224212938640.png" alt="image-20220224212938640"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220224212952595.png" alt="image-20220224212952595"></p><h2 id="Mean-Shift算法的优缺点"><a href="#Mean-Shift算法的优缺点" class="headerlink" title="Mean Shift算法的优缺点"></a><strong>Mean Shift算法的优缺点</strong></h2><p>优点：</p><p>不需要设置簇类的个数；</p><p>可以处理任意形状的簇类；</p><p>算法只需设置带宽这一个参数，带宽影响数据集的核密度估计</p><p>算法结果稳定，不需要进行类似K均值的样本初始化</p><p>缺点：</p><p>聚类结果取决于带宽的设置，带宽设置的太小，收敛太慢，簇类个数过多；带宽设置的太大，一些簇类可能会丢失。</p><p>对于较大的特征空间，计算量非常大。</p><h2 id="图解过程"><a href="#图解过程" class="headerlink" title="图解过程"></a>图解过程</h2><p><a href="https://blog.csdn.net/google19890102/article/details/51030884">https://blog.csdn.net/google19890102/article/details/51030884</a></p><h1 id="matlab代码"><a href="#matlab代码" class="headerlink" title="matlab代码"></a>matlab代码</h1><p><a href="https://blog.csdn.net/HJ199404182515/article/details/121694298">https://blog.csdn.net/HJ199404182515/article/details/121694298</a></p><p><strong><a href="https://www.cnblogs.com/kailugaji/p/11646167.html">https://www.cnblogs.com/kailugaji/p/11646167.html</a></strong></p><p>函数代码为MeanShiftCluster.m</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[clustCent,data2cluster,cluster2dataCell]</span> = <span class="title">MeanShiftCluster</span><span class="params">(dataPts,bandWidth,plotFlag)</span></span></span><br><span class="line"><span class="comment">%perform MeanShift Clustering of data using a flat kernel</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% ---INPUT---</span></span><br><span class="line"><span class="comment">% dataPts           - input data, (numDim x numPts)</span></span><br><span class="line"><span class="comment">% bandWidth         - is bandwidth parameter (scalar)</span></span><br><span class="line"><span class="comment">% plotFlag          - display output if 2 or 3 D    (logical)</span></span><br><span class="line"><span class="comment">% ---OUTPUT---</span></span><br><span class="line"><span class="comment">% clustCent         - is locations of cluster centers (numDim x numClust)</span></span><br><span class="line"><span class="comment">% data2cluster      - for every data point which cluster it belongs to (numPts)</span></span><br><span class="line"><span class="comment">% cluster2dataCell  - for every cluster which points are in it (numClust)</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Bryan Feldman 02/24/06</span></span><br><span class="line"><span class="comment">% MeanShift first appears in</span></span><br><span class="line"><span class="comment">% K. Funkunaga and L.D. Hosteler, &quot;The Estimation of the Gradient of a</span></span><br><span class="line"><span class="comment">% Density Function, with Applications in Pattern Recognition&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">%*** Check input ****</span></span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">2</span></span><br><span class="line">    error(<span class="string">&#x27;no bandwidth specified&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">3</span></span><br><span class="line">    plotFlag = <span class="built_in">true</span>;</span><br><span class="line">    plotFlag = <span class="built_in">false</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">%**** Initialize stuff ***</span></span><br><span class="line">[numDim,numPts] = <span class="built_in">size</span>(dataPts);</span><br><span class="line">numClust        = <span class="number">0</span>;</span><br><span class="line">bandSq          = bandWidth^<span class="number">2</span>;</span><br><span class="line">initPtInds      = <span class="number">1</span>:numPts;</span><br><span class="line">maxPos          = <span class="built_in">max</span>(dataPts,[],<span class="number">2</span>);                    <span class="comment">%biggest size in each dimension</span></span><br><span class="line">minPos          = <span class="built_in">min</span>(dataPts,[],<span class="number">2</span>);                    <span class="comment">%smallest size in each dimension</span></span><br><span class="line">boundBox        = maxPos-minPos;                        <span class="comment">%bounding box size</span></span><br><span class="line">sizeSpace       = norm(boundBox);                       <span class="comment">%indicator of size of data space</span></span><br><span class="line">stopThresh      = <span class="number">1e-3</span>*bandWidth;                       <span class="comment">%when mean has converged</span></span><br><span class="line">clustCent       = [];                                   <span class="comment">%center of clust</span></span><br><span class="line">beenVisitedFlag = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                      <span class="comment">%track if a points been seen already</span></span><br><span class="line">numInitPts      = numPts;                               <span class="comment">%number of points to posibaly use as initilization points</span></span><br><span class="line">clusterVotes    = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                      <span class="comment">%used to resolve conflicts on cluster membership</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> numInitPts</span><br><span class="line"> </span><br><span class="line">    tempInd         = <span class="built_in">ceil</span>( (numInitPts<span class="number">-1e-6</span>)*<span class="built_in">rand</span>);        <span class="comment">%pick a random seed point</span></span><br><span class="line">    stInd           = initPtInds(tempInd);                  <span class="comment">%use this point as start of mean</span></span><br><span class="line">    myMean          = dataPts(:,stInd);                     <span class="comment">% intilize mean to this points location</span></span><br><span class="line">    myMembers       = [];                                   <span class="comment">% points that will get added to this cluster                         </span></span><br><span class="line">    thisClusterVotes    = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                  <span class="comment">%used to resolve conflicts on cluster membership</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>     <span class="comment">%loop untill convergence</span></span><br><span class="line">         </span><br><span class="line">        sqDistToAll = sum((<span class="built_in">repmat</span>(myMean,<span class="number">1</span>,numPts) - dataPts).^<span class="number">2</span>);    <span class="comment">%dist squared from mean to all points still active</span></span><br><span class="line">        inInds      = <span class="built_in">find</span>(sqDistToAll &lt; bandSq);                     <span class="comment">%points within bandWidth</span></span><br><span class="line">        thisClusterVotes(inInds) = thisClusterVotes(inInds)+<span class="number">1</span>;        <span class="comment">%add a vote for all the in points belonging to this cluster</span></span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">        myOldMean   = myMean;                                   <span class="comment">%save the old mean</span></span><br><span class="line">        myMean      = <span class="built_in">mean</span>(dataPts(:,inInds),<span class="number">2</span>);                <span class="comment">%compute the new mean</span></span><br><span class="line">        myMembers   = [myMembers inInds];                       <span class="comment">%add any point within bandWidth to the cluster</span></span><br><span class="line">        beenVisitedFlag(myMembers) = <span class="number">1</span>;                         <span class="comment">%mark that these points have been visited</span></span><br><span class="line">         </span><br><span class="line">        <span class="comment">%*** plot stuff ****</span></span><br><span class="line">        <span class="keyword">if</span> plotFlag</span><br><span class="line">            <span class="built_in">figure</span>(<span class="number">1</span>),clf,<span class="built_in">hold</span> on</span><br><span class="line">            <span class="keyword">if</span> numDim == <span class="number">2</span></span><br><span class="line">                <span class="built_in">plot</span>(dataPts(<span class="number">1</span>,:),dataPts(<span class="number">2</span>,:),<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">                <span class="built_in">plot</span>(dataPts(<span class="number">1</span>,myMembers),dataPts(<span class="number">2</span>,myMembers),<span class="string">&#x27;ys&#x27;</span>)</span><br><span class="line">                <span class="built_in">plot</span>(myMean(<span class="number">1</span>),myMean(<span class="number">2</span>),<span class="string">&#x27;go&#x27;</span>)</span><br><span class="line">                <span class="built_in">plot</span>(myOldMean(<span class="number">1</span>),myOldMean(<span class="number">2</span>),<span class="string">&#x27;rd&#x27;</span>)</span><br><span class="line">                pause</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">%**** if mean doesn&#x27;t move much stop this cluster ***</span></span><br><span class="line">        <span class="keyword">if</span> norm(myMean-myOldMean) &lt; stopThresh</span><br><span class="line">             </span><br><span class="line">            <span class="comment">%check for merge posibilities</span></span><br><span class="line">            mergeWith = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> cN = <span class="number">1</span>:numClust</span><br><span class="line">                distToOther = norm(myMean-clustCent(:,cN));     <span class="comment">%distance from posible new clust max to old clust max</span></span><br><span class="line">                <span class="keyword">if</span> distToOther &lt; bandWidth/<span class="number">2</span>                    <span class="comment">%if its within bandwidth/2 merge new and old</span></span><br><span class="line">                    mergeWith = cN;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">             </span><br><span class="line">             </span><br><span class="line">            <span class="keyword">if</span> mergeWith &gt; <span class="number">0</span>    <span class="comment">% something to merge</span></span><br><span class="line">                clustCent(:,mergeWith)       = <span class="number">0.5</span>*(myMean+clustCent(:,mergeWith));              <span class="comment">%record the max as the mean of the two merged (I know biased twoards new ones)</span></span><br><span class="line">                <span class="comment">%clustMembsCell&#123;mergeWith&#125;    = unique([clustMembsCell&#123;mergeWith&#125; myMembers]);   %record which points inside</span></span><br><span class="line">                clusterVotes(mergeWith,:)    = clusterVotes(mergeWith,:) + thisClusterVotes;     <span class="comment">%add these votes to the merged cluster</span></span><br><span class="line">            <span class="keyword">else</span>    <span class="comment">%its a new cluster</span></span><br><span class="line">                numClust                    = numClust+<span class="number">1</span>;                    <span class="comment">%increment clusters</span></span><br><span class="line">                clustCent(:,numClust)       = myMean;                        <span class="comment">%record the mean </span></span><br><span class="line">                <span class="comment">%clustMembsCell&#123;numClust&#125;    = myMembers;                    %store my members</span></span><br><span class="line">                clusterVotes(numClust,:)    = thisClusterVotes;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">    initPtInds      = <span class="built_in">find</span>(beenVisitedFlag == <span class="number">0</span>);           <span class="comment">%we can initialize with any of the points not yet visited</span></span><br><span class="line">    numInitPts      = <span class="built_in">length</span>(initPtInds);                   <span class="comment">%number of active points in set</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">[val,data2cluster] = <span class="built_in">max</span>(clusterVotes,[],<span class="number">1</span>);                <span class="comment">%a point belongs to the cluster with the most votes</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">%*** If they want the cluster2data cell find it for them</span></span><br><span class="line"><span class="keyword">if</span> nargout &gt; <span class="number">2</span></span><br><span class="line">    cluster2dataCell = cell(numClust,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> cN = <span class="number">1</span>:numClust</span><br><span class="line">        myMembers = <span class="built_in">find</span>(data2cluster == cN);</span><br><span class="line">        cluster2dataCell&#123;cN&#125; = myMembers;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="number">9.32</span>   <span class="number">8.16</span>  </span><br><span class="line"><span class="number">8.45</span>    <span class="number">-4.4</span></span><br><span class="line"><span class="number">7.67</span>    <span class="number">0.73</span></span><br><span class="line"><span class="number">7.3</span>    <span class="number">-3.38</span></span><br><span class="line"><span class="number">5.72</span>  <span class="number">2.38</span></span><br><span class="line"><span class="number">5.5</span>  <span class="number">-3.7</span></span><br><span class="line"><span class="number">5.31</span>  <span class="number">-9.36</span></span><br><span class="line"><span class="number">4.31</span>  <span class="number">-5.68</span></span><br><span class="line"><span class="number">4.08</span>  <span class="number">-6.6</span></span><br><span class="line"><span class="number">2.52</span>  <span class="number">3.26</span></span><br><span class="line"><span class="number">1.24</span> <span class="number">-3.63</span></span><br><span class="line"><span class="number">0.24</span> <span class="number">7.19</span></span><br><span class="line"><span class="number">-0.45</span>  <span class="number">4.09</span></span><br><span class="line"><span class="number">-0.76</span>  <span class="number">-2.59</span></span><br><span class="line"><span class="number">-3.54</span>  <span class="number">8.17</span></span><br><span class="line"><span class="number">-4.49</span>  <span class="number">0.34</span></span><br><span class="line"><span class="number">-4.61</span>  <span class="number">9.58</span></span><br><span class="line"><span class="number">-5.76</span>  <span class="number">-6.98</span></span><br><span class="line"><span class="number">-6.55</span>  <span class="number">7.11</span></span><br><span class="line"><span class="number">-7.79</span>  <span class="number">8.99</span></span><br><span class="line"><span class="number">-9.40</span>  <span class="number">-3.37</span></span><br></pre></td></tr></table></figure><p>测试代码testMeanShift.m为</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear</span><br><span class="line">clc</span><br><span class="line">profile on</span><br><span class="line"> </span><br><span class="line">bandwidth = <span class="number">2</span>;</span><br><span class="line"><span class="comment">%% 加载数据</span></span><br><span class="line">data_load=dlmread(<span class="string">&#x27;Copy_of_gauss_data.txt&#x27;</span>);</span><br><span class="line">[~,dim]=<span class="built_in">size</span>(data_load);</span><br><span class="line">data=data_load;</span><br><span class="line">x=data&#x27;;</span><br><span class="line"><span class="comment">%% 聚类</span></span><br><span class="line">tic</span><br><span class="line">[clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(x,bandwidth);</span><br><span class="line"><span class="comment">% clustCent：聚类中心 D*K, point2cluster：聚类结果 类标签, 1*N</span></span><br><span class="line">toc</span><br><span class="line"><span class="comment">%% 作图</span></span><br><span class="line">numClust = <span class="built_in">length</span>(clustMembsCell);</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>),clf,<span class="built_in">hold</span> on</span><br><span class="line">cVec = <span class="string">&#x27;bgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmyk&#x27;</span>;<span class="comment">%, cVec = [cVec cVec];</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">min</span>(numClust,<span class="built_in">length</span>(cVec))</span><br><span class="line">    myMembers = clustMembsCell&#123;k&#125;;</span><br><span class="line">    myClustCen = clustCent(:,k);</span><br><span class="line"><span class="comment">%     plot(x(1,myMembers),x(2,myMembers),[cVec(k) &#x27;.&#x27;]);</span></span><br><span class="line">    <span class="built_in">plot</span>(x(<span class="number">2</span>,myMembers),x(<span class="number">1</span>,myMembers),[cVec(k) <span class="string">&#x27;.&#x27;</span>]);</span><br><span class="line">    <span class="built_in">plot</span>(myClustCen(<span class="number">2</span>),myClustCen(<span class="number">1</span>),<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;MarkerEdgeColor&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;MarkerFaceColor&#x27;</span>,cVec(k), <span class="string">&#x27;MarkerSize&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">%     plot(myClustCen(1),myClustCen(2),&#x27;o&#x27;,&#x27;MarkerEdgeColor&#x27;,&#x27;k&#x27;,&#x27;MarkerFaceColor&#x27;,cVec(k), &#x27;MarkerSize&#x27;,10)</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span>=<span class="number">1</span>:<span class="built_in">size</span>(data,<span class="number">1</span>)</span><br><span class="line">    text(data(<span class="built_in">j</span>,<span class="number">2</span>)+<span class="number">0.2</span>,data(<span class="built_in">j</span>,<span class="number">1</span>)<span class="number">-0.2</span>,num2str(<span class="built_in">j</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">title([<span class="string">&#x27;no shifting, numClust:&#x27;</span> int2str(numClust)])</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220225104512976.png" alt="image-20220225104512976"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220225104550867.png" alt="image-20220225104550867"></p><p>结果不唯一，有时为18类。</p><p>clustCent 2*18 为中心坐标</p><p>point2cluster 1*21 为类别</p><p>clustMembsCell =</p><p>  18×1 cell 数组</p><p>{[   19]}<br>{[   11]}<br>{[15 17]}<br>{[    3]}<br>{[   21]}<br>{[   10]}<br>{[   13]}<br>{[    1]}<br>{[   16]}<br>{[   14]}<br>{[2 4 6]}<br>{[  8 9]}<br>{[    7]}<br>{[   18]}<br>{[   12]}<br>{[    5]}<br>{[   20]}</p><p>根据文章算法修改后MeanShiftCluster.m</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220226160621431.png" alt="image-20220226160621431"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[clustCent,data2cluster,cluster2dataCell]</span> = <span class="title">MeanShiftCluster</span><span class="params">(dataPts,bandWidth,plotFlag)</span></span></span><br><span class="line"><span class="comment">%perform MeanShift Clustering of data using a flat kernel</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% ---INPUT---</span></span><br><span class="line"><span class="comment">% dataPts           - input data, (numDim x numPts)</span></span><br><span class="line"><span class="comment">% bandWidth         - is bandwidth parameter (scalar)</span></span><br><span class="line"><span class="comment">% plotFlag          - display output if 2 or 3 D    (logical)</span></span><br><span class="line"><span class="comment">% ---OUTPUT---</span></span><br><span class="line"><span class="comment">% clustCent         - is locations of cluster centers (numDim x numClust)</span></span><br><span class="line"><span class="comment">% data2cluster      - for every data point which cluster it belongs to (numPts)</span></span><br><span class="line"><span class="comment">% cluster2dataCell  - for every cluster which points are in it (numClust)</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Bryan Feldman 02/24/06</span></span><br><span class="line"><span class="comment">% MeanShift first appears in</span></span><br><span class="line"><span class="comment">% K. Funkunaga and L.D. Hosteler, &quot;The Estimation of the Gradient of a</span></span><br><span class="line"><span class="comment">% Density Function, with Applications in Pattern Recognition&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">%*** Check input ****</span></span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">2</span></span><br><span class="line">    error(<span class="string">&#x27;no bandwidth specified&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">3</span></span><br><span class="line">    plotFlag = <span class="built_in">true</span>;</span><br><span class="line">    plotFlag = <span class="built_in">false</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%**** Initialize stuff ***</span></span><br><span class="line">[numDim,numPts] = <span class="built_in">size</span>(dataPts);</span><br><span class="line">numClust        = <span class="number">0</span>;</span><br><span class="line">bandSq          = bandWidth^<span class="number">2</span>;</span><br><span class="line">initPtInds      = <span class="number">1</span>:numPts;</span><br><span class="line">maxPos          = <span class="built_in">max</span>(dataPts,[],<span class="number">2</span>);                    <span class="comment">%biggest size in each dimension</span></span><br><span class="line">minPos          = <span class="built_in">min</span>(dataPts,[],<span class="number">2</span>);                    <span class="comment">%smallest size in each dimension</span></span><br><span class="line">boundBox        = maxPos-minPos;                        <span class="comment">%bounding box size</span></span><br><span class="line">sizeSpace       = norm(boundBox);                       <span class="comment">%indicator of size of data space</span></span><br><span class="line">stopThresh      = <span class="number">1e-3</span>*bandWidth;                       <span class="comment">%when mean has converged</span></span><br><span class="line">clustCent       = [];                                   <span class="comment">%center of clust</span></span><br><span class="line">beenVisitedFlag = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                      <span class="comment">%track if a points been seen already</span></span><br><span class="line">numInitPts      = numPts;                               <span class="comment">%number of points to posibaly use as initilization points</span></span><br><span class="line">clusterVotes    = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                      <span class="comment">%used to resolve conflicts on cluster membership</span></span><br><span class="line">nowNum = <span class="number">1</span>;</span><br><span class="line">outCom = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> numInitPts</span><br><span class="line"></span><br><span class="line">    tempInd         = <span class="built_in">ceil</span>( (numInitPts<span class="number">-1e-6</span>)*<span class="built_in">rand</span>);        <span class="comment">%pick a random seed point</span></span><br><span class="line"><span class="comment">%     stInd           = initPtInds(tempInd);                  %use this point as start of mean</span></span><br><span class="line">    stInd           = <span class="built_in">min</span>(initPtInds);                  <span class="comment">%use this point as start of mean</span></span><br><span class="line">    myMean          = dataPts(:,stInd);                     <span class="comment">% intilize mean to this points location</span></span><br><span class="line">    myMembers       = [];                                   <span class="comment">% points that will get added to this cluster                         </span></span><br><span class="line">    thisClusterVotes    = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                  <span class="comment">%used to resolve conflicts on cluster membership</span></span><br><span class="line"><span class="comment">%     beyondMe=[];</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>     <span class="comment">%loop untill convergence</span></span><br><span class="line">         </span><br><span class="line">        sqDistToAll = sum((<span class="built_in">repmat</span>(myMean,<span class="number">1</span>,numPts) - dataPts).^<span class="number">2</span>);    <span class="comment">%dist squared from mean to all points still active</span></span><br><span class="line">        inInds      = <span class="built_in">find</span>(sqDistToAll &lt; bandSq);                     <span class="comment">%points within bandWidth</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">length</span>(inInds)&gt;<span class="number">1</span> &amp;&amp; <span class="built_in">min</span>(outCom(inInds))==<span class="number">0</span>)<span class="comment">% 2，6</span></span><br><span class="line">            beyondMe = inInds;</span><br><span class="line">            beyondMe(beyondMe == initPtInds(<span class="number">1</span>)) = [];</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">find</span>(outCom(beyondMe) &gt;<span class="number">0</span>))</span><br><span class="line">                thisCluster = <span class="built_in">min</span>(outCom(<span class="built_in">find</span>(outCom(beyondMe) &gt;<span class="number">0</span>)));</span><br><span class="line">                outCom(stInd)=outCom(beyondMe(<span class="built_in">find</span>(outCom(beyondMe) &gt;<span class="number">0</span>)));</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">else</span> <span class="comment">% 4</span></span><br><span class="line">                outCom(stInd)=nowNum;</span><br><span class="line">                outCom(beyondMe)=nowNum;</span><br><span class="line">                nowNum = nowNum + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> <span class="built_in">length</span>(inInds)==<span class="number">1</span> <span class="comment">% 1、3、5</span></span><br><span class="line">            outCom(stInd)=nowNum;</span><br><span class="line">            nowNum = nowNum + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        thisClusterVotes(inInds) = thisClusterVotes(inInds)+<span class="number">1</span>;        <span class="comment">%add a vote for all the in points belonging to this cluster</span></span><br><span class="line">        myOldMean   = myMean;                                   <span class="comment">%save the old mean</span></span><br><span class="line">        myMean      = <span class="built_in">mean</span>(dataPts(:,inInds),<span class="number">2</span>);                <span class="comment">%compute the new mean</span></span><br><span class="line">        myMembers   = [myMembers inInds];                       <span class="comment">%add any point within bandWidth to the cluster</span></span><br><span class="line">        beenVisitedFlag(myMembers) = <span class="number">1</span>;                         <span class="comment">%mark that these points have been visited</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">%**** if mean doesn&#x27;t move much stop this cluster ***</span></span><br><span class="line">        <span class="keyword">if</span> norm(myMean-myOldMean) &lt; stopThresh</span><br><span class="line">             </span><br><span class="line">            <span class="comment">%check for merge posibilities</span></span><br><span class="line">            mergeWith = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> cN = <span class="number">1</span>:numClust</span><br><span class="line">                distToOther = norm(myMean-clustCent(:,cN));     <span class="comment">%distance from posible new clust max to old clust max</span></span><br><span class="line">                <span class="keyword">if</span> distToOther &lt; bandWidth/<span class="number">2</span>                    <span class="comment">%if its within bandwidth/2 merge new and old</span></span><br><span class="line">                    mergeWith = cN;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">             </span><br><span class="line">             </span><br><span class="line">            <span class="keyword">if</span> mergeWith &gt; <span class="number">0</span>    <span class="comment">% something to merge</span></span><br><span class="line">                clustCent(:,mergeWith)       = <span class="number">0.5</span>*(myMean+clustCent(:,mergeWith));              <span class="comment">%record the max as the mean of the two merged (I know biased twoards new ones)</span></span><br><span class="line">                <span class="comment">%clustMembsCell&#123;mergeWith&#125;    = unique([clustMembsCell&#123;mergeWith&#125; myMembers]);   %record which points inside</span></span><br><span class="line">                clusterVotes(mergeWith,:)    = clusterVotes(mergeWith,:) + thisClusterVotes;     <span class="comment">%add these votes to the merged cluster</span></span><br><span class="line">            <span class="keyword">else</span>    <span class="comment">%its a new cluster</span></span><br><span class="line">                numClust                    = outCom(stInd);                    <span class="comment">%increment clusters</span></span><br><span class="line">                clustCent(:,numClust)       = myMean;                        <span class="comment">%record the mean </span></span><br><span class="line">                <span class="comment">%clustMembsCell&#123;numClust&#125;    = myMembers;                    %store my members</span></span><br><span class="line">                clusterVotes(numClust,:)    = thisClusterVotes;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">    initPtInds      = <span class="built_in">find</span>(beenVisitedFlag == <span class="number">0</span>);           <span class="comment">%we can initialize with any of the points not yet visited</span></span><br><span class="line">    numInitPts      = <span class="built_in">length</span>(initPtInds);                   <span class="comment">%number of active points in set</span></span><br><span class="line">    [val,data2cluster] = <span class="built_in">max</span>(clusterVotes,[],<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">data2cluster = outCom;</span><br><span class="line"></span><br><span class="line"><span class="comment">%*** If they want the cluster2data cell find it for them</span></span><br><span class="line"><span class="keyword">if</span> nargout &gt; <span class="number">2</span></span><br><span class="line">    cluster2dataCell = cell(numClust,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> cN = <span class="number">1</span>:numClust</span><br><span class="line">        myMembers = <span class="built_in">find</span>(data2cluster == cN);</span><br><span class="line">        cluster2dataCell&#123;cN&#125; = myMembers;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>outCom =</p><pre><code> 1     2     3     2     4     2     5     6     6     7     8     9    10    11    12    13    12    14    15    16    17</code></pre><p>clustCent 2*17 为中心坐标</p><p>point2cluster 1*21 为类别 1     1     3     2     4     2     5     6     6     7     8     9    10    11    12    13    12    14    15    16    17</p><p>根据文章算法修改后MeanShiftCluster.m</p><p>clustMembsCell =</p><p>  18×1 cell 数组</p><p>{[   19]}<br>{[   11]}<br>{[15 17]}<br>{[    3]}<br>{[   21]}<br>{[   10]}<br>{[   13]}<br>{[    1]}<br>{[   16]}<br>{[   14]}<br>{[2 4 6]}<br>{[  8 9]}<br>{[    7]}<br>{[   18]}<br>{[   12]}<br>{[    5]}<br>{[   20]}</p><p>经过第一轮循环，删除了第4/8/15个星。</p><p>再正式修改为MeanShiftCluster.m</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[clustCent,data2cluster,cluster2dataCell]</span> = <span class="title">MeanShiftCluster</span><span class="params">(dataPts,bandWidth,plotFlag)</span></span></span><br><span class="line"><span class="comment">%perform MeanShift Clustering of data using a flat kernel</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% ---INPUT---</span></span><br><span class="line"><span class="comment">% dataPts           - input data, (numDim x numPts)</span></span><br><span class="line"><span class="comment">% bandWidth         - is bandwidth parameter (scalar)</span></span><br><span class="line"><span class="comment">% plotFlag          - display output if 2 or 3 D    (logical)</span></span><br><span class="line"><span class="comment">% ---OUTPUT---</span></span><br><span class="line"><span class="comment">% clustCent         - is locations of cluster centers (numDim x numClust)</span></span><br><span class="line"><span class="comment">% data2cluster      - for every data point which cluster it belongs to (numPts)</span></span><br><span class="line"><span class="comment">% cluster2dataCell  - for every cluster which points are in it (numClust)</span></span><br><span class="line"><span class="comment">%</span></span><br><span class="line"><span class="comment">% Bryan Feldman 02/24/06</span></span><br><span class="line"><span class="comment">% MeanShift first appears in</span></span><br><span class="line"><span class="comment">% K. Funkunaga and L.D. Hosteler, &quot;The Estimation of the Gradient of a</span></span><br><span class="line"><span class="comment">% Density Function, with Applications in Pattern Recognition&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">%*** Check input ****</span></span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">2</span></span><br><span class="line">    error(<span class="string">&#x27;no bandwidth specified&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> nargin &lt; <span class="number">3</span></span><br><span class="line">    plotFlag = <span class="built_in">true</span>;</span><br><span class="line">    plotFlag = <span class="built_in">false</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%**** Initialize stuff ***</span></span><br><span class="line">[numDim,numPts] = <span class="built_in">size</span>(dataPts);</span><br><span class="line">numClust        = <span class="number">0</span>;</span><br><span class="line">bandSq          = bandWidth^<span class="number">2</span>;</span><br><span class="line">initPtInds      = <span class="number">1</span>:numPts;</span><br><span class="line">maxPos          = <span class="built_in">max</span>(dataPts,[],<span class="number">2</span>);                    <span class="comment">%biggest size in each dimension</span></span><br><span class="line">minPos          = <span class="built_in">min</span>(dataPts,[],<span class="number">2</span>);                    <span class="comment">%smallest size in each dimension</span></span><br><span class="line">boundBox        = maxPos-minPos;                        <span class="comment">%bounding box size</span></span><br><span class="line">sizeSpace       = norm(boundBox);                       <span class="comment">%indicator of size of data space</span></span><br><span class="line">stopThresh      = <span class="number">1e-3</span>*bandWidth;                       <span class="comment">%when mean has converged</span></span><br><span class="line">clustCent       = [];                                   <span class="comment">%center of clust</span></span><br><span class="line">beenVisitedFlag = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                      <span class="comment">%track if a points been seen already</span></span><br><span class="line">numInitPts      = numPts;                               <span class="comment">%number of points to posibaly use as initilization points</span></span><br><span class="line">clusterVotes    = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                      <span class="comment">%used to resolve conflicts on cluster membership</span></span><br><span class="line">nowNum = <span class="number">1</span>;</span><br><span class="line">outCom = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> numInitPts</span><br><span class="line"></span><br><span class="line">    tempInd         = <span class="built_in">ceil</span>( (numInitPts<span class="number">-1e-6</span>)*<span class="built_in">rand</span>);        <span class="comment">%pick a random seed point</span></span><br><span class="line">    stInd           = initPtInds(tempInd);                  <span class="comment">%use this point as start of mean</span></span><br><span class="line">    myMean          = dataPts(:,stInd);                     <span class="comment">% intilize mean to this points location</span></span><br><span class="line">    myMembers       = [];                                   <span class="comment">% points that will get added to this cluster                         </span></span><br><span class="line">    thisClusterVotes    = <span class="built_in">zeros</span>(<span class="number">1</span>,numPts);                  <span class="comment">%used to resolve conflicts on cluster membership</span></span><br><span class="line"><span class="comment">%     beyondMe=[];</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>     <span class="comment">%loop untill convergence</span></span><br><span class="line">         </span><br><span class="line">        sqDistToAll = sum((<span class="built_in">repmat</span>(myMean,<span class="number">1</span>,numPts) - dataPts).^<span class="number">2</span>);    <span class="comment">%dist squared from mean to all points still active</span></span><br><span class="line">        inInds      = <span class="built_in">find</span>(sqDistToAll &lt; bandSq);                     <span class="comment">%points within bandWidth</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">length</span>(inInds)&gt;<span class="number">1</span> &amp;&amp; <span class="built_in">min</span>(outCom(inInds))==<span class="number">0</span>)<span class="comment">% 2，6</span></span><br><span class="line">            beyondMe = inInds;</span><br><span class="line">            beyondMe(beyondMe == stInd) = [];</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">find</span>(outCom(beyondMe) &gt;<span class="number">0</span>))</span><br><span class="line">                thisCluster = <span class="built_in">min</span>(outCom(<span class="built_in">find</span>(outCom(beyondMe) &gt;<span class="number">0</span>)));</span><br><span class="line">                outCom(stInd)=<span class="built_in">min</span>(outCom(beyondMe(<span class="built_in">find</span>(outCom(beyondMe) &gt;<span class="number">0</span>))));</span><br><span class="line">                outCom(beyondMe)=<span class="built_in">min</span>(outCom(beyondMe(<span class="built_in">find</span>(outCom(beyondMe) &gt;<span class="number">0</span>))));</span><br><span class="line">            <span class="keyword">else</span> <span class="comment">% 4</span></span><br><span class="line">                outCom(stInd)=nowNum;</span><br><span class="line">                outCom(beyondMe)=nowNum;</span><br><span class="line">                nowNum = nowNum + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> <span class="built_in">length</span>(inInds)==<span class="number">1</span> <span class="comment">% 1、3、5</span></span><br><span class="line">            outCom(stInd)=nowNum;</span><br><span class="line">            nowNum = nowNum + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        thisClusterVotes(inInds) = thisClusterVotes(inInds)+<span class="number">1</span>;        <span class="comment">%add a vote for all the in points belonging to this cluster</span></span><br><span class="line">        myOldMean   = myMean;                                   <span class="comment">%save the old mean</span></span><br><span class="line">        myMean      = <span class="built_in">mean</span>(dataPts(:,inInds),<span class="number">2</span>);                <span class="comment">%compute the new mean</span></span><br><span class="line">        myMembers   = [myMembers inInds];                       <span class="comment">%add any point within bandWidth to the cluster</span></span><br><span class="line">        beenVisitedFlag(myMembers) = <span class="number">1</span>;                         <span class="comment">%mark that these points have been visited</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">%**** if mean doesn&#x27;t move much stop this cluster ***</span></span><br><span class="line">        <span class="keyword">if</span> norm(myMean-myOldMean) &lt; stopThresh</span><br><span class="line">             </span><br><span class="line">            <span class="comment">%check for merge posibilities</span></span><br><span class="line">            mergeWith = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> cN = <span class="number">1</span>:numClust</span><br><span class="line">                distToOther = norm(myMean-clustCent(:,cN));     <span class="comment">%distance from posible new clust max to old clust max</span></span><br><span class="line">                <span class="keyword">if</span> distToOther &lt; bandWidth/<span class="number">2</span>                    <span class="comment">%if its within bandwidth/2 merge new and old</span></span><br><span class="line">                    mergeWith = cN;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">             </span><br><span class="line">             </span><br><span class="line">            <span class="keyword">if</span> mergeWith &gt; <span class="number">0</span>    <span class="comment">% something to merge</span></span><br><span class="line">                clustCent(:,mergeWith)       = <span class="number">0.5</span>*(myMean+clustCent(:,mergeWith));              <span class="comment">%record the max as the mean of the two merged (I know biased twoards new ones)</span></span><br><span class="line">                <span class="comment">%clustMembsCell&#123;mergeWith&#125;    = unique([clustMembsCell&#123;mergeWith&#125; myMembers]);   %record which points inside</span></span><br><span class="line">                clusterVotes(mergeWith,:)    = clusterVotes(mergeWith,:) + thisClusterVotes;     <span class="comment">%add these votes to the merged cluster</span></span><br><span class="line">            <span class="keyword">else</span>    <span class="comment">%its a new cluster</span></span><br><span class="line">                numClust                    = outCom(stInd);                    <span class="comment">%increment clusters</span></span><br><span class="line">                clustCent(:,numClust)       = myMean;                        <span class="comment">%record the mean </span></span><br><span class="line">                <span class="comment">%clustMembsCell&#123;numClust&#125;    = myMembers;                    %store my members</span></span><br><span class="line">                clusterVotes(numClust,:)    = thisClusterVotes;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">     </span><br><span class="line">    </span><br><span class="line">    initPtInds      = <span class="built_in">find</span>(beenVisitedFlag == <span class="number">0</span>);           <span class="comment">%we can initialize with any of the points not yet visited</span></span><br><span class="line">    numInitPts      = <span class="built_in">length</span>(initPtInds);                   <span class="comment">%number of active points in set</span></span><br><span class="line">    [val,data2cluster] = <span class="built_in">max</span>(clusterVotes,[],<span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">data2cluster = outCom;</span><br><span class="line"></span><br><span class="line"><span class="comment">%*** If they want the cluster2data cell find it for them</span></span><br><span class="line"><span class="keyword">if</span> nargout &gt; <span class="number">2</span></span><br><span class="line">    cluster2dataCell = cell(numClust,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> cN = <span class="number">1</span>:numClust</span><br><span class="line">        myMembers = <span class="built_in">find</span>(data2cluster == cN);</span><br><span class="line">        cluster2dataCell&#123;cN&#125; = myMembers;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>testMeanShift.m为</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear</span><br><span class="line">clc</span><br><span class="line">profile on</span><br><span class="line"> </span><br><span class="line">bandwidth = <span class="number">2</span>;</span><br><span class="line"><span class="comment">%% 加载数据</span></span><br><span class="line">data_load=dlmread(<span class="string">&#x27;Copy_of_gauss_data.txt&#x27;</span>);</span><br><span class="line">[~,dim]=<span class="built_in">size</span>(data_load);</span><br><span class="line">data=data_load;</span><br><span class="line">x=data&#x27;;</span><br><span class="line"><span class="comment">%% 聚类</span></span><br><span class="line">tic</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">length</span>(data)&gt;<span class="number">6</span></span><br><span class="line">        [clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(data.&#x27;,bandwidth);</span><br><span class="line">        numClust = <span class="built_in">length</span>(clustMembsCell);</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">length</span>(<span class="built_in">find</span>(point2cluster==mode(point2cluster)))&gt;<span class="number">1</span>)</span><br><span class="line">            [val,idx]=<span class="built_in">min</span>(dist(clustCent(:,mode(point2cluster)).&#x27;,data.&#x27;))   ;</span><br><span class="line">            data(idx,:)=[];</span><br><span class="line">            x(:,idx)=[];</span><br><span class="line">            [clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(data.&#x27;,bandwidth);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        bandwidth = bandwidth + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>),clf,<span class="built_in">hold</span> on;axis equal</span><br><span class="line">cVec = <span class="string">&#x27;bgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmyk&#x27;</span>;<span class="comment">%, cVec = [cVec cVec];</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">min</span>(numClust,<span class="built_in">length</span>(cVec))</span><br><span class="line">    myMembers = clustMembsCell&#123;k&#125;;</span><br><span class="line">    myClustCen = clustCent(:,k);</span><br><span class="line">    <span class="built_in">plot</span>(x(<span class="number">2</span>,myMembers),x(<span class="number">1</span>,myMembers),[cVec(k) <span class="string">&#x27;.&#x27;</span>]);</span><br><span class="line">    <span class="built_in">plot</span>(myClustCen(<span class="number">2</span>),myClustCen(<span class="number">1</span>),<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;MarkerEdgeColor&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;MarkerFaceColor&#x27;</span>,cVec(k), <span class="string">&#x27;MarkerSize&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">title([<span class="string">&#x27;no shifting, numClust:&#x27;</span> int2str(numClust)])</span><br><span class="line"><span class="built_in">hold</span> on </span><br><span class="line">toc</span><br></pre></td></tr></table></figure><p>得到不多于6个点的几个测试结果为：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220227002446282.png" alt="image-20220227002446282"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220227002502414.png" alt="image-20220227002502414"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220227002520760.png" alt="image-20220227002520760"></p><p>通常以玻尔兹曼熵评价导航星的全天球分布均匀性， 以视场内捕获恒星数的最大值、 最小值、 均值和标准差等评价局部天球分布均匀。</p><p>但我还不知道如何求解玻尔兹曼熵。（下文求解）</p><hr><p>带入星图数据（下代码有误，请看后一篇博客）</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clear</span><br><span class="line">clc</span><br><span class="line">profile on</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line">bandwidth = <span class="number">5</span>;</span><br><span class="line"><span class="comment">%% 加载数据</span></span><br><span class="line">data_load=dlmread(<span class="string">&#x27;Copy_of_gauss_data.txt&#x27;</span>);</span><br><span class="line">[~,dim]=<span class="built_in">size</span>(data_load);</span><br><span class="line">data = star_data(:,<span class="number">2</span>:<span class="number">3</span>);</span><br><span class="line"><span class="comment">% data = data_load(:,1:2);</span></span><br><span class="line">x=data&#x27;;</span><br><span class="line"><span class="comment">%% 聚类</span></span><br><span class="line">tic</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">length</span>(data)&gt;<span class="number">150</span></span><br><span class="line">        [clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(data.&#x27;,bandwidth);</span><br><span class="line">        numClust = <span class="built_in">length</span>(clustMembsCell);</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">length</span>(<span class="built_in">find</span>(point2cluster==mode(point2cluster)))&gt;<span class="number">1</span>)</span><br><span class="line">            [val,idx]=<span class="built_in">min</span>(dist(clustCent(:,mode(point2cluster)).&#x27;,data.&#x27;))   ;</span><br><span class="line">            data(idx,:)=[];</span><br><span class="line">            x(:,idx)=[];</span><br><span class="line">            [clustCent,point2cluster,clustMembsCell] = MeanShiftCluster(data.&#x27;,bandwidth);</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        numClust = <span class="built_in">length</span>(clustMembsCell);</span><br><span class="line">        bandwidth = bandwidth + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>),clf,<span class="built_in">hold</span> on;axis equal</span><br><span class="line">cVec = <span class="string">&#x27;bgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmykbgrcmyk&#x27;</span>;<span class="comment">%, cVec = [cVec cVec];</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">min</span>(numClust,<span class="built_in">length</span>(cVec))</span><br><span class="line">    myMembers = clustMembsCell&#123;k&#125;;</span><br><span class="line">    myClustCen = clustCent(:,k);</span><br><span class="line">    <span class="built_in">plot</span>(x(<span class="number">2</span>,myMembers),x(<span class="number">1</span>,myMembers),[cVec(k) <span class="string">&#x27;.&#x27;</span>]);</span><br><span class="line">    <span class="built_in">plot</span>(myClustCen(<span class="number">2</span>),myClustCen(<span class="number">1</span>),<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;MarkerEdgeColor&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;MarkerFaceColor&#x27;</span>,cVec(k), <span class="string">&#x27;MarkerSize&#x27;</span>,<span class="number">10</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">title([<span class="string">&#x27;no shifting, numClust:&#x27;</span> int2str(numClust)])</span><br><span class="line"><span class="built_in">hold</span> on </span><br><span class="line">toc</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220301103413554.png" alt="image-20220301103413554"></p><p>历时 3101.811945 秒。</p>]]></content>
    
    
    <summary type="html">从本文起将开启研究导航星的筛选问题，本文首先研究 《基于星座聚类的星敏感器导航星优选算法研究》。</summary>
    
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/categories/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
    
    <category term="导航星筛选" scheme="https://tsuiwade.github.io/tags/%E5%AF%BC%E8%88%AA%E6%98%9F%E7%AD%9B%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>星图识别5-小结验证识别、求指向、求滚转角</title>
    <link href="https://tsuiwade.github.io/2022/02/18/blog36-starId-5/"/>
    <id>https://tsuiwade.github.io/2022/02/18/blog36-starId-5/</id>
    <published>2022-02-18T16:15:53.000Z</published>
    <updated>2022-02-18T16:15:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>总结前面几个博客，首先main4.m计算出是哪些星，再带入main10.m求出滚转角。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%  main10.m</span></span><br><span class="line"></span><br><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">518</span></span><br><span class="line"><span class="number">472</span></span><br><span class="line"><span class="number">537</span></span><br><span class="line"><span class="number">428</span></span><br><span class="line"><span class="number">491</span></span><br><span class="line"><span class="number">469</span></span><br><span class="line"><span class="number">482</span></span><br><span class="line"><span class="number">503</span></span><br><span class="line"><span class="number">478</span></span><br><span class="line"><span class="number">499</span></span><br><span class="line"><span class="number">547</span></span><br><span class="line"><span class="number">460</span></span><br><span class="line"><span class="number">507</span></span><br><span class="line"><span class="number">556</span></span><br><span class="line"><span class="number">447</span></span><br><span class="line"><span class="number">479</span></span><br><span class="line">];</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A1 = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu02.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">xingtu1=[-A1(:,<span class="number">1</span>), A1(:,<span class="number">2</span>) ];</span><br><span class="line"></span><br><span class="line">newMatrix= [A1,<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A1,<span class="number">1</span>),<span class="number">1</span>)];</span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line">Y = [   (f  ./  (<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="built_in">size</span>(index,<span class="number">1</span>),<span class="number">1</span>).^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="built_in">size</span>(index,<span class="number">1</span>),<span class="number">2</span>).^<span class="number">2</span>))  )];</span><br><span class="line">zhixiang = inv(A&#x27;*A)*A&#x27;*Y;</span><br><span class="line">E = (A*zhixiang - Y);</span><br><span class="line">RMS = <span class="built_in">sqrt</span>(mse(E));</span><br><span class="line"><span class="keyword">if</span>   zhixiang(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-zhixiang(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    alpha=<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    alpha = <span class="number">360</span>-<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">beta</span>=<span class="built_in">asind</span>( zhixiang(<span class="number">3</span>) );</span><br><span class="line">corWorld =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">syms a b fai;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">x_ba = f .* ( R(<span class="number">1</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">1</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">1</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line">y_ba = f .* ( R(<span class="number">2</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">2</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">2</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A = [diff(x_ba,a) , diff(x_ba,b) , diff(x_ba,fai)];</span><br><span class="line">B = [diff(y_ba,a) , diff(y_ba,b) , diff(y_ba,fai)];</span><br><span class="line"></span><br><span class="line">iter=[alpha;<span class="built_in">beta</span>;<span class="number">0</span>];</span><br><span class="line">times = <span class="number">10</span>;</span><br><span class="line">iterRecord = <span class="built_in">zeros</span>(<span class="number">3</span>, times);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : times</span><br><span class="line">    </span><br><span class="line">    p = [double(subs(x_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;))-xingtu1(:,<span class="number">1</span>); double(subs(y_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;)) - xingtu1(:,<span class="number">2</span>)];</span><br><span class="line">    M = [double(subs(A , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;)); double(subs(B , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;))];</span><br><span class="line">    wow = inv((M.&#x27;) * M) * (M.&#x27;)*p;</span><br><span class="line">    iter = iter - wow</span><br><span class="line">    iterRecord(:,<span class="built_in">i</span>) = iter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x=<span class="number">1</span>:<span class="number">1</span>:times;</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,iterRecord(<span class="number">3</span>,:),<span class="string">&#x27;-or&#x27;</span> , x,iterRecord(<span class="number">1</span>,:),<span class="string">&#x27;-*b&#x27;</span> , x,iterRecord(<span class="number">2</span>,:),<span class="string">&#x27;-*b&#x27;</span> ); <span class="comment">%线性，颜色，标记</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;maxp=&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="built_in">max</span>(p));</span><br><span class="line">RMS</span><br><span class="line"><span class="comment">%  最后看各点的差值p即可</span></span><br><span class="line"></span><br><span class="line">x_real = double(subs(x_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;));</span><br><span class="line">y_real = double(subs(y_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;));</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">scatter</span>(x_real,y_real,<span class="number">140</span>,<span class="string">&#x27;dk&#x27;</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">scatter</span>(xingtu1(:,<span class="number">1</span>), xingtu1(:,<span class="number">2</span>), <span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>);</span><br></pre></td></tr></table></figure><p>发现星图4和星图6有所偏差。</p><hr><p>针对星图1的点</p><p>1670<br>1477<br>1502<br>1631<br>1603<br>1453<br>1432<br>1492<br>1488<br>1648<br>1646<br>1566<br>1688<br>1655<br>1505</p><p>iter =</p><p>  109.6000<br>   34.5000<br>  -89.9997</p><p>maxp=<br>    0.0048  表征最大的x、y值的变差绝对值。</p><p>RMS =</p><p>   1.1755e-07</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218183202596.png" alt="image-20220218183202596"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218170719748.png" alt="image-20220218170719748"></p><hr><p>星图2</p><p>518<br>472<br>537<br>428<br>491<br>469<br>482<br>503<br>478<br>499<br>547<br>460<br>507<br>556<br>447<br>479</p><p>iter =</p><p>   43.0000<br>   18.0000<br>  -29.9994</p><p>maxp=<br>    0.0054</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218181712233.png" alt="image-20220218170548186"></p><p>修改main6.m得到上图</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218183005140.png" alt="image-20220218183005140"></p><hr><p>星图3</p><p>1864<br>1942<br>1825<br>1941<br>1943<br>1900<br>1722</p><p>iter =</p><p>  124.9771<br>   43.9942<br>  -90.0708</p><p>maxp=<br>    2.3836</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218183333607.png" alt="image-20220218183333607"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218170255850.png" alt="image-20220218170255850"></p><hr><p>星图4（指向117，-28 (后查看应该为243，-28)</p><p>3249<br>3346<br>3364<br>3275<br>3421<br>3319<br>3283<br>3370<br>3265<br>3261<br>3321<br>3309</p><p>iter =</p><p>   61.7471<br>   28.6652<br>   28.7760</p><p>maxp=<br>  441.2296</p><p>由main6看上去是旋转270得到的结果。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218225852784.png" alt="image-20220218225852784"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218171253121.png" alt="image-20220218171253121"></p><p>main8得到</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220220221305644.png" alt="image-20220220221305644"></p><p>很奇怪，明明一致。</p><p>经过 360-赤经 修改后</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222193234089.png" alt="image-20220222193234089"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222193416059.png" alt="image-20220222193416059"></p><p>iter =</p><p>  243.0000<br>  -28.0000<br>  -90.0002</p><p>RMS =</p><p>   5.8798e-08</p><hr><p>星图5</p><p>1230<br>1150<br>1017<br>1033<br>1014<br>1223<br>1008<br>1208<br>1201</p><p>iter =</p><p>   86.5836<br>   44.4766<br>  270.0121</p><p>maxp=<br>    0.0058</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218223127789.png" alt="image-20220218223127789"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218171428172.png" alt="image-20220218171428172"></p><hr><p>星图6</p><p>1670<br>1675<br>1502<br>1631<br>1655<br>1692<br>1492<br>1576<br>1646<br>1566<br>1655<br>1505</p><p>iter =</p><p>  113.7861<br>   35.4645<br>  280.3664</p><p>maxp=<br>  258.0423</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218223440442.png" alt="image-20220218223440442"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218171627300.png" alt="image-20220218171627300"></p><p>查看问题</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220220212053946.png" alt="image-20220220212053946"></p><p>逆时针旋转90度，并且参考053.pdf的F02/F05/F08无解，则圈红，猜测大致是如此。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220220181726568.png" alt="image-20220220181726568"></p><p>main6中用到了错误的点，去除错误点得到赤经赤纬为112.6，34.5</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220220192757928.png" alt="image-20220220192757928"></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%  main10.m</span></span><br><span class="line"></span><br><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">1670</span></span><br><span class="line"><span class="number">1675</span></span><br><span class="line"><span class="number">1502</span></span><br><span class="line"><span class="number">1631</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1692</span></span><br><span class="line"><span class="number">1492</span></span><br><span class="line"><span class="number">1576</span></span><br><span class="line"><span class="number">1646</span></span><br><span class="line"><span class="number">1566</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1505</span></span><br><span class="line">];</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A1 = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu06.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">xingtu1=[-A1(:,<span class="number">1</span>), A1(:,<span class="number">2</span>) ];</span><br><span class="line"></span><br><span class="line">newMatrix= [A1,<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A1,<span class="number">1</span>),<span class="number">1</span>)];</span><br><span class="line"><span class="comment">% A  =  [  cosd(star_data(index,3)).*cosd(star_data(index,2))   ,   cosd(star_data(index,3)).*sind(star_data(index,2))  ,  sind(star_data(index,3))  ];</span></span><br><span class="line"><span class="comment">% Y = [   (f  ./  (sqrt(f^2 + newMatrix(1:size(index,1),1).^2 + newMatrix(1:size(index,1),2).^2))  )];</span></span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">3</span>))  ];</span><br><span class="line">Y = [   (f  ./  (<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],<span class="number">1</span>).^<span class="number">2</span> + newMatrix([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],<span class="number">2</span>).^<span class="number">2</span>))  )];</span><br><span class="line"></span><br><span class="line">zhixiang = inv(A&#x27;*A)*A&#x27;*Y;</span><br><span class="line">E = (A*zhixiang - Y);</span><br><span class="line">RMS = <span class="built_in">sqrt</span>(mse(E));</span><br><span class="line"><span class="keyword">if</span>   zhixiang(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-zhixiang(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    alpha=<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    alpha = <span class="number">360</span>-<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">beta</span>=<span class="built_in">asind</span>( zhixiang(<span class="number">3</span>) );</span><br><span class="line"><span class="comment">% corWorld =  [  cosd(star_data(index,3)).*cosd(star_data(index,2))   ,   cosd(star_data(index,3)).*sind(star_data(index,2))  ,  sind(star_data(index,3))  ];</span></span><br><span class="line">corWorld =  [  <span class="built_in">cosd</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]),<span class="number">3</span>))  ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">syms a b fai;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">x_ba = f .* ( R(<span class="number">1</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">1</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">1</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line">y_ba = f .* ( R(<span class="number">2</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">2</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">2</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">AA = [diff(x_ba,a) , diff(x_ba,b) , diff(x_ba,fai)];</span><br><span class="line">B = [diff(y_ba,a) , diff(y_ba,b) , diff(y_ba,fai)];</span><br><span class="line"></span><br><span class="line">iter=[alpha;<span class="built_in">beta</span>;<span class="number">0</span>];</span><br><span class="line">times = <span class="number">10</span>;</span><br><span class="line">iterRecord = <span class="built_in">zeros</span>(<span class="number">3</span>, times);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : times</span><br><span class="line">    </span><br><span class="line">    p = [double(subs(x_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;))-xingtu1([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],<span class="number">1</span>); double(subs(y_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;)) - xingtu1([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],<span class="number">2</span>)];</span><br><span class="line">    <span class="built_in">disp</span>(<span class="built_in">max</span>(p));</span><br><span class="line">    M = [double(subs(AA , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;)); double(subs(B , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;))];</span><br><span class="line">    wow = inv((M.&#x27;) * M) * (M.&#x27;)*p;</span><br><span class="line">    iter = iter - wow</span><br><span class="line">    iterRecord(:,<span class="built_in">i</span>) = iter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">x=<span class="number">1</span>:<span class="number">1</span>:times;</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,iterRecord(<span class="number">3</span>,:),<span class="string">&#x27;-or&#x27;</span> , x,iterRecord(<span class="number">1</span>,:),<span class="string">&#x27;-*b&#x27;</span> , x,iterRecord(<span class="number">2</span>,:),<span class="string">&#x27;-*b&#x27;</span> ); <span class="comment">%线性，颜色，标记</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;maxp=&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="built_in">max</span>(p));</span><br><span class="line">RMS</span><br><span class="line"><span class="comment">%  最后看各点的差值p即可</span></span><br><span class="line"></span><br><span class="line">x_real = double(subs(x_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;));</span><br><span class="line">y_real = double(subs(y_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;));</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">scatter</span>(x_real,y_real,<span class="number">140</span>,<span class="string">&#x27;dk&#x27;</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">scatter</span>(xingtu1([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],<span class="number">1</span>), xingtu1([<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>],<span class="number">2</span>), <span class="string">&#x27;red&#x27;</span>,<span class="string">&#x27;filled&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220220192830453.png" alt="image-20220220192830453"></p><p>iter =</p><p>  112.6000<br>   34.5000<br>  -89.9997</p><p>maxp=<br>    0.0048</p><p>RMS =</p><p>   4.6872e-08</p><hr><p>星图7</p><p>1525<br>1572<br>1443<br>1748<br>1780<br>1675<br>1720<br>1503<br>1634<br>1577<br>1757<br>1586<br>1536<br>1610<br>1681<br>1606<br>1670<br>1477<br>1790<br>1502<br>1631<br>1603<br>1415<br>1692<br>1453<br>1432<br>1492<br>1488<br>1648<br>1646<br>1566<br>1688<br>1655<br>1505<br>1373<br>1576<br>1545<br>1424<br>1375<br>1825<br>1401</p><p>iter =</p><p>  112.6000<br>   34.5000<br>  269.9999</p><p>maxp=<br>    0.0060</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218223545858.png" alt="image-20220218223545858"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218172202760.png" alt="image-20220218172202760"></p><hr><p>星图8</p><p>1572<br>1387<br>1675<br>1634<br>1586<br>1610<br>1354<br>1681<br>1606<br>1670<br>1390<br>1502<br>1631<br>1603<br>1692<br>1432<br>1488<br>1648<br>1646<br>1566<br>1688<br>1359<br>1505<br>1373<br>1576<br>1424<br>1375<br>1401<br>1385</p><p>iter =</p><p>  106.0000<br>   35.0000<br>  270.0000</p><p>maxp=<br>    0.0081</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218223640303.png" alt="image-20220218223640303"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218172345094.png" alt="image-20220218172345094"></p><hr><p>针对星图4，需要考察一下问题。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222185204497.png" alt="image-20220222185204497"></p><p>正向验证</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%  main11.m</span></span><br><span class="line"><span class="comment">%  正向求解指向区域内的星图和题图的对比。</span></span><br><span class="line"></span><br><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">1670</span></span><br><span class="line"><span class="number">1477</span></span><br><span class="line"><span class="number">1502</span></span><br><span class="line"><span class="number">1631</span></span><br><span class="line"><span class="number">1603</span></span><br><span class="line"><span class="number">1453</span></span><br><span class="line"><span class="number">1432</span></span><br><span class="line"><span class="number">1492</span></span><br><span class="line"><span class="number">1488</span></span><br><span class="line"><span class="number">1648</span></span><br><span class="line"><span class="number">1646</span></span><br><span class="line"><span class="number">1566</span></span><br><span class="line"><span class="number">1688</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1505</span></span><br><span class="line">];</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A1 = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu01.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">xingtu1=[-A1(:,<span class="number">1</span>), A1(:,<span class="number">2</span>) ];</span><br><span class="line"></span><br><span class="line">newMatrix= [A1,<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A1,<span class="number">1</span>),<span class="number">1</span>)];</span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line">Y = [   (f  ./  (<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="built_in">size</span>(index,<span class="number">1</span>),<span class="number">1</span>).^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="built_in">size</span>(index,<span class="number">1</span>),<span class="number">2</span>).^<span class="number">2</span>))  )];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zhixiang = inv(A&#x27;*A)*A&#x27;*Y;</span><br><span class="line">E = (A*zhixiang - Y);</span><br><span class="line">RMS = <span class="built_in">sqrt</span>(mse(E));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>   zhixiang(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-zhixiang(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    alpha=<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    alpha = <span class="number">360</span>-<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">beta</span>=<span class="built_in">asind</span>( zhixiang(<span class="number">3</span>) );</span><br><span class="line">corWorld =  [  <span class="built_in">cosd</span>(star_data(:,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(:,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(:,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(:,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(:,<span class="number">3</span>))  ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% syms a b fai;</span></span><br><span class="line">a = alpha;</span><br><span class="line">b = <span class="built_in">beta</span>;</span><br><span class="line">fai = <span class="number">270</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">x_ba = f .* ( R(<span class="number">1</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">1</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">1</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line">y_ba = f .* ( R(<span class="number">2</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">2</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">2</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">indexIn = <span class="built_in">find</span>(x_ba(:,<span class="number">1</span>)&lt;<span class="number">256</span> &amp; x_ba(:,<span class="number">1</span>)&gt;<span class="number">-256</span> &amp; y_ba(:,<span class="number">1</span>)&lt;<span class="number">256</span> &amp; y_ba(:,<span class="number">1</span>)&gt;<span class="number">-256</span>);</span><br><span class="line">idx = kmeans(indexIn,<span class="number">2</span>);</span><br><span class="line">idx1 = <span class="built_in">find</span>(idx == <span class="number">1</span>);</span><br><span class="line">idx2 = <span class="built_in">find</span>(idx == <span class="number">2</span>);</span><br><span class="line">all(<span class="built_in">ismember</span>(index,indexIn))</span><br><span class="line"></span><br><span class="line">CorIn = [x_ba(indexIn(idx2)) , y_ba(indexIn(idx2))];</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);  </span><br><span class="line"><span class="built_in">plot</span>(CorIn(:,<span class="number">1</span>),CorIn(:,<span class="number">2</span>),<span class="string">&#x27;ok&#x27;</span>  ); <span class="comment">%线性，颜色，标记</span></span><br><span class="line"><span class="comment">% plot(x,iterRecord(3,:),&#x27;-or&#x27; , x,iterRecord(1,:),&#x27;-*b&#x27; , x,iterRecord(2,:),&#x27;-*b&#x27; ); %线性，颜色，标记</span></span><br><span class="line">text(CorIn(:,<span class="number">1</span>)<span class="number">-20</span>,CorIn(:,<span class="number">2</span>)<span class="number">-17</span>,string(indexIn(idx2)));</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">scatter</span>(xingtu1(:,<span class="number">1</span>),xingtu1(:,<span class="number">2</span>),<span class="number">140</span>,<span class="string">&#x27;or&#x27;</span>  ); <span class="comment">%线性，颜色，标记</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(star_data(:,<span class="number">2</span>),star_data(:,<span class="number">3</span>),<span class="string">&#x27;ok&#x27;</span>  ); <span class="comment">%线性，颜色，标记</span></span><br><span class="line"></span><br><span class="line">xlim([<span class="number">109.6</span><span class="number">-6</span>  <span class="number">109.6</span>+<span class="number">6</span>]);</span><br><span class="line">ylim([<span class="number">34.5</span><span class="number">-6</span>  <span class="number">34.5</span>+<span class="number">6</span>]);</span><br><span class="line">text(star_data(:,<span class="number">2</span>),star_data(:,<span class="number">3</span>),string(star_data(:,<span class="number">1</span>)) );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">scatter3</span>(corWorld(indexIn,<span class="number">1</span>),corWorld(indexIn,<span class="number">2</span>),corWorld(indexIn,<span class="number">3</span>));</span><br></pre></td></tr></table></figure><p>星图1：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222184550530.png" alt="image-20220222184550530"></p><p>星图2：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222184816184.png" alt="image-20220222184816184"></p><p>星图3</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222185427074.png" alt="image-20220222185427074"></p><p>星图4：</p><p>3249<br>3346<br>3364<br>3275<br>3421<br>3319<br>3283<br>3370<br>3265<br>3261<br>3321<br>3309</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222191924445.png" alt="image-20220222191924445"></p><p>对照003.pdf的答案才知道，指向并非117，-28，而是243，-28</p><p>星图5：</p><p>未被圈出的是缺失星：如1210为5.97等星，</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222185753031.png" alt="image-20220222185753031"></p><p>星图6：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222190321348.png" alt="image-20220222190321348"></p><p>1670<br>1675 无解 ：应该为1477<br>1502<br>1631<br>1655 ：应该为1603 位置偏移<br>1692<br>1492<br>1576 应该无解<br>1646<br>1566<br>1655<br>1505</p><p> 星图7</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222191043412.png" alt="image-20220222191043412"></p><p>星图8 缺失挺多星</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222191119023.png" alt="image-20220222191119023"></p>]]></content>
    
    
    <summary type="html">终于求出滚转角，之前的求解过程已忘了差不多，在此总结一下各星图的指向滚转角。并且验证各图的实际星图与数据星图的叠加对比和分析。</summary>
    
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/categories/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/tags/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>抽奖程序</title>
    <link href="https://tsuiwade.github.io/2022/01/24/blog35-luckydraw/"/>
    <id>https://tsuiwade.github.io/2022/01/24/blog35-luckydraw/</id>
    <published>2022-01-24T21:19:26.000Z</published>
    <updated>2022-01-24T21:19:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>这次给公司搞了抽奖程序，使用了js语言，vue框架，electron进行打包。</p><p>首先安装nodejs，最新版出现许多问题，因此推荐使用v14.16版本。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220124212221950.png" alt="image-20220124212221950"></p><p>本项目fork自 <a href="https://github.com/vitozyf/lucky-draw">https://github.com/vitozyf/lucky-draw</a> </p><p>修改了背景图片。</p><p>发现了 <code>先抽三等奖就三等奖出现在抽奖结果上分</code>的bug，无奈只得写死特等、一等、二等、三等。</p><p>修改了抽奖结果显示号码，而显示<code>姓名</code>。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220124165803965.png" alt="image-20220124165803965"></p><p>再通过<a href="https://www.cxyzjd.com/article/qq_41579104/107340431">https://www.cxyzjd.com/article/qq_41579104/107340431</a> 用electron进行打包成exe文件。</p><p>第一步   将自己的vue项目进行打包，可以看到打包后的dist文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>第二步（选）安装electron</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install electron</span><br></pre></td></tr></table></figure><p>第三步  在dist文件夹中 创建主程序的入口文件main.js和相关配置package.json文件</p><p>其中，main程序为</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123;app, BrowserWindow&#125; =<span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);<span class="comment">//引入electron</span></span><br><span class="line"><span class="keyword">let</span> win;</span><br><span class="line"><span class="keyword">let</span> windowConfig = &#123;</span><br><span class="line">  width:<span class="number">800</span>,</span><br><span class="line">  height:<span class="number">600</span></span><br><span class="line">&#125;;<span class="comment">//窗口配置程序运行窗口的大小，可自行设置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createWindow</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  win = <span class="keyword">new</span> BrowserWindow(windowConfig);<span class="comment">//创建一个窗口</span></span><br><span class="line">  win.loadURL(<span class="string">`file://<span class="subst">$&#123;__dirname&#125;</span>/index.html`</span>);<span class="comment">//在窗口内要展示的内容index.html 就是打包生成的index.html</span></span><br><span class="line"><span class="comment">//   win.webContents.openDevTools();  //开启调试工具</span></span><br><span class="line">  win.on(<span class="string">&#x27;close&#x27;</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//回收BrowserWindow对象</span></span><br><span class="line">    win = <span class="literal">null</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  win.on(<span class="string">&#x27;resize&#x27;</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    win.reload();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">app.on(<span class="string">&#x27;ready&#x27;</span>,createWindow);</span><br><span class="line">app.on(<span class="string">&#x27;window-all-closed&#x27;</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  app.quit();</span><br><span class="line">&#125;);</span><br><span class="line">app.on(<span class="string">&#x27;activate&#x27;</span>,<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span>(win == <span class="literal">null</span>)&#123;</span><br><span class="line">    createWindow();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p> package.json为</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;productName&quot;</span>: <span class="string">&quot;天仪公司2022抽奖程序&quot;</span>, </span><br><span class="line">    <span class="attr">&quot;author&quot;</span>: <span class="string">&quot;author&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;main.js&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;天仪公司2022抽奖程序&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;pack&quot;</span>: <span class="string">&quot;electron-builder --dir&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;dist&quot;</span>: <span class="string">&quot;electron-builder&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;postinstall&quot;</span>: <span class="string">&quot;electron-builder install-app-deps&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;build&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;electronVersion&quot;</span>: <span class="string">&quot;1.8.4&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;win&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;requestedExecutionLevel&quot;</span>: <span class="string">&quot;highestAvailable&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;target&quot;</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">&quot;target&quot;</span>: <span class="string">&quot;nsis&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;arch&quot;</span>: [</span><br><span class="line">              <span class="string">&quot;x64&quot;</span></span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;appId&quot;</span>: <span class="string">&quot;demo&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;artifactName&quot;</span>: <span class="string">&quot;demo-$&#123;version&#125;-$&#123;arch&#125;.$&#123;ext&#125;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;nsis&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;artifactName&quot;</span>: <span class="string">&quot;demo-$&#123;version&#125;-$&#123;arch&#125;.$&#123;ext&#125;&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;extraResources&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;from&quot;</span>: <span class="string">&quot;./static/xxxx/&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;to&quot;</span>: <span class="string">&quot;app-server&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;filter&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;**/*&quot;</span></span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;publish&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;provider&quot;</span>: <span class="string">&quot;generic&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://xxxxx/download/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;core-js&quot;</span>: <span class="string">&quot;^2.4.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;electron-packager&quot;</span>: <span class="string">&quot;^12.1.0&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;electron-updater&quot;</span>: <span class="string">&quot;^4.0.0&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>第四步 在dist文件夹中运行electron</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> dist</span><br><span class="line">elctron .</span><br></pre></td></tr></table></figure><p>最后一步 打包为exe程序了</p><p>先<strong>安装electron-builder</strong>，直接在dist目录下安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install electron-builder --save-dev</span><br></pre></td></tr></table></figure><p>执行<strong>npm run dist</strong> ,执行<strong>npm run dist</strong>进行打包，由于我们package.json中将打包命令electron-builder，定义为了dist，因此我们只需执行npm run dist即可打包</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run dist</span><br></pre></td></tr></table></figure><p>在我们原本vue项目打包后的dist文件夹下，又出现一个dist,进去之后，就发现了这个exe程序。</p><hr><h1 id="天仪公司2022年会抽奖软件说明"><a href="#天仪公司2022年会抽奖软件说明" class="headerlink" title="天仪公司2022年会抽奖软件说明"></a>天仪公司2022年会抽奖软件说明</h1><h3 id="一、-快速指南"><a href="#一、-快速指南" class="headerlink" title="一、 快速指南"></a>一、 快速指南</h3><p>进入软件后，如果您之前已经设置过该程序，请根据需要，点击右边<em>重置</em>进行记录重置。</p><p>接着需要点击右边<em>导入名单</em>，名单则从<em>附件中的名单</em>中复制带有序号和姓名的两列，呈现为下图的格式。（如果后续打开软件不修改名单，可省略该步）</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220124182658614.png" alt="image-20220124182658614"></p><p>还需要点击右上角<em>抽奖配置</em>，检查总人数及奖项人数（如果后续打开软件不修改，可省略）。接着点击右边<em>开始</em>就可以开始抽奖、点击<em>停止</em>结束抽奖。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220124182928507.png" alt="image-20220124182928507"></p><p>​    最后点击右上角<em>抽奖结果</em>可以查看当前各项抽奖结果。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220124185905221.png" alt="image-20220124185905221"></p><h3 id="二、安装说明"><a href="#二、安装说明" class="headerlink" title="二、安装说明"></a>二、安装说明</h3><p>​    软件需要安装，安装包为<em>天仪公司<strong>2022</strong>抽奖程序安装包**.exe</em>。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220124190127040.png" alt="image-20220124190127040"></p><p>安装生成<em>天仪公司<strong>2022</strong>抽奖程序**.exe</em>。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220124190147521.png" alt="image-20220124190147521"></p><p>打开<em>天仪公司<strong>2022</strong>抽奖程序**.exe</em>，出现以下界面。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220124190218686.png" alt="image-20220124190218686"></p><p>​     若要删除该程序别忘了在<em>程序和功能</em>内删除。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220124190302295.png" alt="image-20220124190302295"></p><h3 id="三、功能介绍"><a href="#三、功能介绍" class="headerlink" title="三、功能介绍"></a>三、功能介绍</h3><p>​    总体上，该程序将呈现现代化的抽奖效果，采用炫酷的动效，喜庆的背景音乐；可以实现自定义奖项及人数、重置部分设置及结果、单独取消中奖人员；幕布滚动播放中奖结果；软件关闭后仍可保存当前设置情况和抽奖结果。</p><p>​    下面进行分功能介绍。</p><div class="table-container"><table><thead><tr><th>功能</th><th>介绍</th></tr></thead><tbody><tr><td>主界面中心展示</td><td>自动三维旋转抽奖人员姓名</td></tr><tr><td>鼠标滚轮名单球</td><td>名单球放大缩小</td></tr><tr><td>抽奖设置</td><td>设置抽奖标题、总人数、各奖项人数，可新增奖项</td></tr><tr><td>抽奖结果</td><td>显示各奖项中奖人员，可单独删除中奖人员</td></tr><tr><td>主界面上方幕布</td><td>展示标题、各奖项中奖人员</td></tr><tr><td>重置</td><td>重置设置或结果</td></tr><tr><td>导入名单</td><td>导入备选人员的序号和名单，注意格式</td></tr><tr><td>抽取方式</td><td>设置抽取奖项和抽取人数</td></tr><tr><td>背景音乐</td><td>可播放暂停背景音乐</td></tr></tbody></table></div>]]></content>
    
    
    <summary type="html">这次给公司搞了抽奖程序，使用了js语言，vue框架，electron进行打包。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>树莓派外接显示屏</title>
    <link href="https://tsuiwade.github.io/2022/01/16/blog34-raspScreen/"/>
    <id>https://tsuiwade.github.io/2022/01/16/blog34-raspScreen/</id>
    <published>2022-01-16T10:32:37.000Z</published>
    <updated>2022-01-16T10:32:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220116112051112.png" alt="image-20220116112051112"></p><p>最近在研究树莓派的屏幕，当看到这样一个参数复杂的屏幕截图时，我有些难以理解。今天就来查一查里面的参数含义。</p><h2 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h2><p><code>分辨率</code>又称解析度、解像度，可以从显示分辨率与图像分辨率两个方向来分类。 </p><p>通常，“分辨率”被表示成每一个方向上的像素数量，比如640X480等。某些情况下也可以同时表示成“每英寸像素”（ppi）以及图形的长度和宽度。比如72ppi，和8X6英寸。</p><p>15英寸LCD的最佳分辨率为1024×768，17～19英寸的最佳分辨率通常为1280×1024，更大尺寸拥有更大的最佳分辨率。</p><p><strong>屏幕分辨率</strong></p><p>屏幕分辨率（显示分辨率）是屏幕<a href="https://baike.baidu.com/item/图像/773234">图像</a>的<a href="https://baike.baidu.com/item/精密度/7902819">精密度</a>，是指<a href="https://baike.baidu.com/item/显示器/362722">显示器</a>所能显示的<a href="https://baike.baidu.com/item/像素/95084">像素</a>有多少。由于屏幕上的点、线和面都是由像素组成的，显示器可显示的像素越多，画面就越<a href="https://baike.baidu.com/item/精细/1312083">精细</a>，同样的屏幕区域内能显示的信息也越多，所以分辨率是个非常重要的性能指标。可以把整个图像想象成是一个大型的棋盘，而分辨率的表示方式就是所有经线和纬线交叉点的数目。显示分辨率一定的情况下，显示屏越小图像越清晰，反之，显示屏大小固定时，显示分辨率越高图像越清晰。</p><p><a href="https://baike.baidu.com/item/屏幕分辨率/2193029">屏幕分辨率</a>是指实际显示图像时计算机所采用的分辨率，用户可在“控制面板”的“显示”属性的“设置”下根据需要设置“<a href="https://baike.baidu.com/item/屏幕分辨率/2193029">屏幕分辨率</a>”，或右击桌面，在快捷菜单中选择“<a href="https://baike.baidu.com/item/屏幕分辨率/2193029">屏幕分辨率</a>”命令，也可根据需要设置“屏幕分辨率”。 </p><p><a href="https://baike.baidu.com/item/屏幕分辨率/2193029">屏幕分辨率</a>必须小于或等于显示器分辨率，而显示器分辨率描述的是显示器自身的像素点数量，是固有的、不可改变的。</p><p><strong>图像分辨率</strong></p><p><a href="https://baike.baidu.com/item/图像分辨率/872374">图像分辨率</a>是指在计算机中保存和显示一幅<a href="https://baike.baidu.com/item/数字图像/5199238">数字图像</a>所具有的分辨率，它和图像的像素有直接的关系。例如，一张分辨率为640×480像素的图片，其分辨率就达到了307200像素，也就是常说的30万像素；而一张分辨率为1600×1200的图片，它的像素就是200万这样，<a href="https://baike.baidu.com/item/图像分辨率/872374">图像分辨率</a>表示的是图片在长和宽上占的点数的单位。一张数码图片的长宽比通常是4:3。 </p><p><a href="https://baike.baidu.com/item/图像分辨率/872374">图像分辨率</a>决定图像的质量。对于同样尺寸的一幅图，如果图像分辨率越高，则组成该图的图像像素数目越多，像素点也越小，图像越清晰、逼真。如：72dpi分辨率的1英寸×1英寸图像包含5184像素，而300dpi分辨率的1英寸×1英寸图像包含90000像素。</p><p>图像分辨率与<a href="https://baike.baidu.com/item/显示器分辨率/8575053">显示器分辨率</a>是两个不同的概念：<a href="https://baike.baidu.com/item/显示器分辨率/8575053">显示器分辨率</a>用于确定显示图像的区域大小，而图像分辨率用于确定组成一幅图像的像素数目。如在显示器分辨率为1024×768的显示屏上，一幅图像分辨率为320×240的图像约占显示屏的1/12，而一幅图像分辨率为2400×3000的图像在这个显示屏上是不能完全显示的。</p><p>对于具有相同图像分辨率的图像，<a href="https://baike.baidu.com/item/屏幕分辨率/2193029">屏幕分辨率</a>越低(如800×600)，则图像看起来较大，但屏幕上显示的项目少；屏幕分辨率越高(如1024×768)，则图像看起来就越小。 </p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220116114123143.png" alt="image-20220116114123143"></p><p>亮度</p><h2 id="色域"><a href="#色域" class="headerlink" title="色域"></a>色域</h2><p>色域其实也可以叫做色彩空间（Color Space），而域有是一个数学概念，可以更好的说明色彩是有一定的范围。色域是对一种颜色进行编码的方法，也指一个技术系统能够产生颜色的总和。在计算机图形处理中色域是颜色的某个完全的子集。颜色子集最常见的应用是用来精确地代表一种给定的情况，例如一个给定的空间或是某个输出装置的呈色范围。色域是显示器屏幕所能够表达的颜色数量所构成的范围区域，在现实世界中自然界中可见光谱的颜色组成了最大的色域空间，该色域空间中包含了人眼所能见到的所有颜色。</p><p>CIE国际照明协会为了更好的让用户轻易的理解色域，制定了一个用于描述色域的方法，那就是CIE-xy色度图。在这个坐标系中，各种显示设备能表现的色域范围用RGB（红、绿、蓝）三点连线组成的三角形区域来表示，三角形的面积越大，就表示这种显示设备的色域范围越大。 </p><p><strong>常见的屏幕色域三种标准：</strong></p><p>目前常见的屏幕色域标准有三种，分别是sRGB、NTSC、Adobe RGB。</p><p><strong>1、sRGB</strong></p><p>最早期的色域标准之一，至今仍有重要的影响力。</p><p>由微软和惠普在1996年制定，当时主流显示器为CRT显示器，这种显示器对颜色还原能力比较差。其中一个<strong>严重的问题</strong>就是对<strong>绿色部分</strong>色域覆盖非常少。</p><p>从它的特点可以得出结论，sRGB 属于一种比较宽松的标准，很多显示器都能达到100%。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220116115727055.png" alt="image-20220116115727055"></p><p><strong>2、NTSC</strong></p><p>NTSC色域是NTSC电视标准下的色彩空间，NTSC是美国国家电视标准委员会，他们所推出的NTSC电视标准是一套广播电视传输协议，被运用在美国、日本等国家的广播电视系统中。当然这也就意味着，NTSC色彩空间更多被运用在电视行业。</p><p>由 Adobe Systems于1998年制定，为了解决 sRGB 色域不能覆盖印刷系统中的 CMYK 色域的问题而制定的新标准。</p><p>一般针对色彩专业的显示器都会以 Adobe sRGB 的色域进行标示。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220116115757500.png" alt="image-20220116115757500"></p><p><strong>3、Adobe RGB</strong></p><p>Adobe RGB是专业软件生产商Adobe在1998年推出的色彩空间，初衷是为了同时囊括sRGB（电脑常用的色彩空间）和CMYK（印刷常用的色彩空间），这样拍出的数码照片不仅能在电脑上正常显示和编辑，也能印刷出颜色无损而正确的相片。Adobe RGB相比sRGB囊括的色彩范围更广，受到设计师的青睐，因此在专业的摄影和后期领域被广泛使用。</p><p>通过下图可以得知，Adobe RGB的色域几乎和NTSC1953年标准比较相近一些，而sRGB所能表示的色彩最少，sRGB色彩空间范围要小于前两者，近似相当于 sRGB ≈ 72% NTSC，Adobe RGB≈95% NTSC，不过sRGB是世界上最为广泛使用的色彩空间，大多数的显示器，都只支持sRGB的色域范围。AdobeRGB相比sRGB，能表示出更加细腻的青色和绿色，而NTSC的色域范围是最广的。 </p><p><strong>100%sRGB = 72%NTSC</strong></p><p><strong>100%AdobeRGB = 95%NTSC</strong>﻿</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/1-191024150551G3.jpg" alt="色域是什么？显示器屏幕色域sRGB、NTSC、Adobe RGB区别对比科普"></p><h2 id="对比度"><a href="#对比度" class="headerlink" title="对比度"></a>对比度</h2><p>对比度是屏幕上同一点最亮时(白色)与最暗时(黑色)的亮度的比值,高的对比度意味着相对较高的亮度和呈现颜色的艳丽程度;</p><h2 id="亮度"><a href="#亮度" class="headerlink" title="亮度"></a>亮度</h2><p>液晶是一种介于液体和晶体之间的物质，本身并不能发光，因此背光的亮度决定了它的亮度。一般来说，液晶显示器的亮度越高，显示的色彩就越鲜艳，现实效果也就越好。液晶显示器中表示亮度的单位为cd/m2（流明），普通液晶显示器的亮度为250cd/m2。如果亮度过低，显示出来的颜色会偏暗，看久了就会觉得非常疲劳。对比度是亮度的比值，也就是在暗室中，白色画面下的亮度除以黑色画面下的亮度。因此白色越亮、黑色越暗，对比度就越高，显示的画面就越清晰亮丽，色彩的层次感就越强。一般液晶显示器的对比度为300:1，一些较好的可达到400:1，而传统的CRT显示器可达到500:1。如果对比度小于250:1，我们在看屏幕时就会产生模糊感。</p><h2 id="面板类型"><a href="#面板类型" class="headerlink" title="面板类型"></a>面板类型</h2><p>面板类型关系着液晶显示器的响应时间、色彩、可视角度、对比度这些重要因素。液晶显示器的常用面板有TN（Twisted Nematic扭曲向列型）、IPS（In-Plane-Switching平面转换型）、VA（Vertical Alignment多象限垂直配向型）三种类型，前两种相对常见。</p><p><strong>TN屏：响应时间快是优势</strong></p><p>TN屏就是较早前常见的软屏，用手能按出水波纹，这是最早使用的LCD面板之一，目前也在大量使用，因为它的技术最成熟，成本最低。TN屏响应速度快，最快可以达到1ms的响应时间，不会出现残影。使用这种材质的屏幕通常用来作为职业电竞屏，通过快速响应，TN屏可无损呈现高速变化的场景细节。</p><p>相对地，TN面板的缺陷也很明显，输出灰阶少，原生只有6bit色彩，画面色彩偏白、可视角度小，显示效果一般，通过不同角度观看会出现偏色和亮度差别。因此，如果你从事设计、影视后期相关工作或在观影娱乐时对屏幕色彩有较高要求，不建议使用这种屏幕。</p><p><strong>IPS屏：广视角、色彩好</strong></p><p>IPS屏面板较硬，用手指轻触屏幕，画面不会变形。IPS屏在色彩显示、可视角度等方面比TN面板好上不少，对于色彩的呈现范围与准确性也都有亮眼的表现，广视角是IPS面板的原生优势，不论哪个角度观看都不会产生色偏。目前跟影像处理有关的专业屏幕大多采用IPS面板。苹果也一直与IPS屏捆绑宣传，对于偏爱Mac的用户，IPS屏是一个不错的选择。</p><p>此外，尽管在响应时间上IPS屏比TN屏稍逊一筹，但得益于IPS屏出色的色彩表现，对于兼有办公娱乐多功能需求的普通游戏玩家，IPS屏仍然值得考虑。</p><p>受制于IPS屏需要更多背光灯来提高亮度，功耗偏高的局限性，控制不好就会漏光是IPS屏的通病。不过专业的屏幕生产厂商在应对这个问题时通常有更规范的把控机制，更值得信赖。</p><p><strong>VA屏：对比度高</strong></p><p>VA类面板也属于软屏，只要用手指轻触面板，显现梅花纹的是VA面板，出现水波纹的则是TN面板。VA面板是在中高端液晶显示器应用比较多的面板类型，富士通、三星、奇美电子、友达光电等面板企业均采用了这项面板技术。VA屏的特点是宽容度和对比度都更高，可达到3000:1的高对比度，画面中黑色和白色都更加纯净，且不会出现漏光等问题。</p><p>VA面板的缺陷主要体现在响应时间方面，好在现在VA面板的响应时间已经大幅改善，可以低至6ms内，足够正常使用。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/5d5f5c4c6718d4523.png_e1080.jpg" alt="一文讲解LCD显示器：TN/IPS/VA面板的好与坏，我究竟该选哪一种？"></p><h2 id="屏幕色彩"><a href="#屏幕色彩" class="headerlink" title="屏幕色彩"></a>屏幕色彩</h2><p>彩屏的色阶指数从低到高可分三个层次，最低单色，其次是256色、4096色、 65536色； 最高的为1677万色。</p><p>256=2的8次方，即8位彩色，依次律推，65536色=2的16次方，即通常所说 的16位真彩色，26万=2的18次方，也就是18位<a href="https://baike.baidu.com/item/真彩">真彩</a>。其实65536色已基本可满足我们肉眼的识别 需求。</p><h2 id="HDR"><a href="#HDR" class="headerlink" title="HDR"></a>HDR</h2><p>普通显示器采用的是标准动态范围（Standard Dynamic Range），简称 SDR，与之相比，HDR 显示器采用的是高动态范围（High Dynamic Range），简称 HDR。</p><p>HDR 显示器能明显改善屏幕明暗区域的对比度，提供更好的色彩，使画面更加细腻逼真，也更接近现实中的样子。其中最重要的是增加亮度，足够的亮度才能增强对比感，图像才能更接近现实中的样子。</p><p>所以，在挑选 HDR 显示器时，<strong>对比度</strong>和<strong>颜色</strong>是两个非常关键的因素，下文会详细阐述。</p><h3 id="HDR-显示器如何影响显示效果？"><a href="#HDR-显示器如何影响显示效果？" class="headerlink" title="HDR 显示器如何影响显示效果？"></a>HDR 显示器如何影响显示效果？</h3><p>1、亮度<br>亮度对 HDR 非常重要，一般显示器都能达到 300cd / m²，而 HDR 显示器的亮度为 600cd / m² – 1000cd / m² 之间，更高的亮度必然带来更好的显示效果。</p><p>2、位深<br>8位面板可以显示1678万种颜色，而10位面板则可以显示10.7亿种颜色。理论上来说，HDR 显示器要具有 10bit 的面板，但实际情况可能没有那么理想，比如华硕 ROG Swift PG27UQ 和 Acer Predator X27 虽然只是8位面板，通过2位抖动来模拟 10 位面板的质量，从显示上来说，要优于真 8位 面板。</p><p>3、色域<br>sRGB 色域大家比较熟悉，这种标准是人类肉眼可以感知到的颜色的33%，DCI-P3 标准则是人类肉眼可以感知到的颜色的 45% ，而 HDR 显示器至少要达到 90% 的 DCI-P3，才能保证良好的显示效果</p><h3 id="对硬件和软件有什么要求？"><a href="#对硬件和软件有什么要求？" class="headerlink" title="对硬件和软件有什么要求？"></a>对硬件和软件有什么要求？</h3><p>游戏需要更高性能的 GPU，而 HDR 并不需要非常强大的 GPU，Nvidia 的 GTX 950、AMD 的 R9 380 及以后的显卡均能支持；<br>接口方面，需要 HDMI 2.0 和 DisplayPort 1.4；<br>面板方面，TN 面板不支持 HDR；<br>Win10、PS4、Xbox one 都支持 HDR。</p><hr><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220116163159.png" alt=""></p><h3 id="白色的线："><a href="#白色的线：" class="headerlink" title="白色的线："></a>白色的线：</h3><p>FPC（Flexible printed circuit）排线，FPC排线就是可在一定程度内弯曲的连接线组。</p><h3 id="屏幕输出线："><a href="#屏幕输出线：" class="headerlink" title="屏幕输出线："></a>屏幕输出线：</h3><p><strong>EDP接口屏线</strong>常年技术领先VGA，HDMI是因为十几年前高清需求被电影电视垄断，PC显示器高清不是主流需求，由电视/DVD 厂商主推的HDMI才得以快速普及。<br>目前计算机公司 AMD/Intel/NVIDIA 的显示芯片都是原生输出<strong><a href="https://link.zhihu.com/?target=http%3A//www.kem-ffc.com/">高清EDP屏线</a></strong>信号，HDMI芯片也是由EDP-HDMI转换芯片转接出来的。<br>目前趋势上来讲，高规格显示器普遍都采用EDP接口。USB4 的内置显示协议也是EDP1.4。由于 HDMI 的市场惯性优势，低规格显示器 HDMI 会多一些。但是长远看HDMI被EDP接口排线取代是发展趋势。</p><p>而树莓派上有个dsi接口，</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220116164007140.png" alt="image-20220116164007140"></p><p>树莓派的DSI显示器接口</p><p>可以将LCD显示器连接到树莓派上，一般用于嵌入式产品开发。通常情况下，HDMI接口已经能满足需求。<img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220116164219580.png" alt="image-20220116164219580"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20160614171106516" alt="img"></p><h2 id="绿色板子："><a href="#绿色板子：" class="headerlink" title="绿色板子："></a>绿色板子：</h2><p>液晶屏驱动板，eDP转hdmi<a href="https://www.taobao.com/list/item/573596992161.htm?spm=a21wu.10013406.taglist-content.1.586310ffaQ3QGI">https://www.taobao.com/list/item/573596992161.htm?spm=a21wu.10013406.taglist-content.1.586310ffaQ3QGI</a></p><p>近年来随着电子产业的高速发展，智能显示设备也取得了辉煌的成就，高清显示得到了消费者的青睐。目前高清显示协议接口有RGB、LVDS、MIPI、eDP、HDMI、miniLVDS、V-by-One等</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220116165446262.png" alt="image-20220116165446262"></p><h2 id="蓝色板子"><a href="#蓝色板子" class="headerlink" title="蓝色板子"></a>蓝色板子</h2><p>触摸屏驱动，电容屏触摸 IIC转USB，免驱动。</p>]]></content>
    
    
    <summary type="html">重温曾在福晴做的这套树莓派外接显示器的解决方案。</summary>
    
    
    
    <category term="raspberrypi" scheme="https://tsuiwade.github.io/categories/raspberrypi/"/>
    
    
    <category term="raspberrypi" scheme="https://tsuiwade.github.io/tags/raspberrypi/"/>
    
  </entry>
  
  <entry>
    <title>星图识别4-共线方程与非线性最小二乘法求滚转角</title>
    <link href="https://tsuiwade.github.io/2022/01/10/blog33-starId-4/"/>
    <id>https://tsuiwade.github.io/2022/01/10/blog33-starId-4/</id>
    <published>2022-01-10T22:42:12.000Z</published>
    <updated>2022-02-18T22:42:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>大概拖了一个月都没有进度，今天才找到正确的切入点。</p><p>即是这篇 <code>CN100348460C - 一种基于星场的星敏感器校准方法</code> 专利，这篇专利因最开始的一张非右手坐标系的图，被我打入冷宫，但经过自己的琢磨发现自己原先的想法应该是错的，于是顺着该专利仔细研究，尤其对下述式子尤其好奇，于是想在此介绍一下<code>共线方程</code>和<code>高斯牛顿非线性最小二乘法</code>。</p><p><code>共线方程</code>参考 <a href="https://baike.baidu.com/item/%E5%85%B1%E7%BA%BF%E6%96%B9%E7%A8%8B/2055962">https://baike.baidu.com/item/%E5%85%B1%E7%BA%BF%E6%96%B9%E7%A8%8B/2055962</a> 和 <a href="https://zhuanlan.zhihu.com/p/101549821">https://zhuanlan.zhihu.com/p/101549821</a> 。</p><p>其实很好理解，其实我原本的计算过程也近似如此，只不过下式更为精简。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220210233834515.png" alt="image-20220210233834515"></p><hr><p>在专利中有此公式，053.pdf中也有此公式。我一直挂念于心，确实以自己的想法无法解出滚转角。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220210233649809.png" alt="image-20220210233649809"></p><p>本以为像线性最小二乘法能解决，但仔细看该专利，结合查资料，用的是<code>高斯牛顿非线性最小二乘法</code>。</p><p><a href="https://zhuanlan.zhihu.com/p/42383070">https://zhuanlan.zhihu.com/p/42383070</a></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220218003540.png" alt=""></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220218003619.png" alt=""></p><p>以星图1为例</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%  main9.m</span></span><br><span class="line"><span class="comment">%  采用共线公式正向验证星图1从世界坐标到星敏坐标到像素坐标并画图</span></span><br><span class="line"><span class="comment">%  高斯牛顿非线性最小二乘算法求解滚转角</span></span><br><span class="line"></span><br><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">1670</span></span><br><span class="line"><span class="number">1477</span></span><br><span class="line"><span class="number">1502</span></span><br><span class="line"><span class="number">1631</span></span><br><span class="line"><span class="number">1603</span></span><br><span class="line"><span class="number">1453</span></span><br><span class="line"><span class="number">1432</span></span><br><span class="line"><span class="number">1492</span></span><br><span class="line"><span class="number">1488</span></span><br><span class="line"><span class="number">1648</span></span><br><span class="line"><span class="number">1646</span></span><br><span class="line"><span class="number">1566</span></span><br><span class="line"><span class="number">1688</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1505</span></span><br><span class="line">];</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A1 = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu01.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">xingtu1=[-A1(:,<span class="number">1</span>), A1(:,<span class="number">2</span>) ];</span><br><span class="line"></span><br><span class="line"><span class="comment">% newMatrix= [A1,repmat(f,size(A1,1),1)];</span></span><br><span class="line"><span class="comment">% A  =  [  cosd(star_data(index,3)).*cosd(star_data(index,2))   ,   cosd(star_data(index,3)).*sind(star_data(index,2))  ,  sind(star_data(index,3))  ];</span></span><br><span class="line"><span class="comment">% Y = [   (f  ./  (sqrt(f^2 + newMatrix(1:15,1).^2 + newMatrix(1:15,2).^2))  )];</span></span><br><span class="line"><span class="comment">% zhixiang = inv(A&#x27;*A)*A&#x27;*Y;</span></span><br><span class="line"><span class="comment">% E = (A*zhixiang - Y);</span></span><br><span class="line"><span class="comment">% RMS = sqrt(mse(E));</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% if   zhixiang(2)/sqrt(1-zhixiang(3)^2) &gt; 0 </span></span><br><span class="line"><span class="comment">%   a=acosd( zhixiang(1)  /  sqrt(1-((zhixiang(3))^2) )   );</span></span><br><span class="line"><span class="comment">% else </span></span><br><span class="line"><span class="comment">%    a = 360-acosd( zhixiang(1)  /  sqrt(1-((zhixiang(3))^2) )   );</span></span><br><span class="line"><span class="comment">% end</span></span><br><span class="line"><span class="comment">% b=asind( zhixiang(3) );</span></span><br><span class="line">corWorld =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">syms a b fai;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">x_ba = f .* ( R(<span class="number">1</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">1</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">1</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line">y_ba = f .* ( R(<span class="number">2</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">2</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">2</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>)) ./ (R(<span class="number">3</span>,<span class="number">1</span>).*corWorld(:,<span class="number">1</span>) +  R(<span class="number">3</span>,<span class="number">2</span>).*corWorld(:,<span class="number">2</span>)  +  R(<span class="number">3</span>,<span class="number">3</span>).*corWorld(:,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A = [diff(x_ba,a) , diff(x_ba,b) , diff(x_ba,fai)];</span><br><span class="line">B = [diff(y_ba,a) , diff(y_ba,b) , diff(y_ba,fai)];</span><br><span class="line"><span class="comment">% iter=[0;0;0];</span></span><br><span class="line">iter=[<span class="number">109</span>;<span class="number">34</span>;<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : <span class="number">10</span></span><br><span class="line">    </span><br><span class="line">    p = [double(subs(x_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;))-xingtu1(:,<span class="number">1</span>); double(subs(y_ba , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;)) - xingtu1(:,<span class="number">2</span>)];</span><br><span class="line">    M = [double(subs(A , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;)); double(subs(B , &#123;a,b,fai&#125;,&#123;iter(<span class="number">1</span>),iter(<span class="number">2</span>),iter(<span class="number">3</span>)&#125;))];</span><br><span class="line">    wow = inv((M.&#x27;) * M) * (M.&#x27;)*p;</span><br><span class="line">    iter = iter - wow</span><br><span class="line"><span class="comment">%     plot(i,iter(1));</span></span><br><span class="line">    <span class="built_in">plot</span>(<span class="built_in">i</span>,iter(<span class="number">3</span>),<span class="string">&#x27;-or&#x27;</span>); <span class="comment">%线性，颜色，标记</span></span><br><span class="line">    <span class="built_in">hold</span> on</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;maxp=&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>(<span class="built_in">max</span>(p));</span><br><span class="line"><span class="comment">%  最后看各点的差值p即可</span></span><br></pre></td></tr></table></figure><p>iter =</p><p>  109.6000<br>   34.5000<br>  -89.9997</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220218003849367.png" alt="image-20220218003849367"></p><p>得出星图1的滚转角为270°。</p><p>若不用之前计算的指向的赤经赤纬，则可能出现不收敛的情况。出现错误的指向</p><p>iter =</p><p>  -69.9166<br>  -33.2403<br> -124.7489</p><hr><p>总结前面几个博客，首先main4.m计算出是哪些星，main6.m计算出赤经赤纬，再带入main.9求出滚转角。</p><p>验证星图2：iter =</p><p>   43.0000<br>   18.0000<br>  -29.9994</p><p>maxp=<br>    0.0054</p>]]></content>
    
    
    <summary type="html">求解滚转角花费很长时间。</summary>
    
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/categories/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/tags/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>星图识别3-旋转矩阵与坐标转换</title>
    <link href="https://tsuiwade.github.io/2022/01/10/blog32-starId-3/"/>
    <id>https://tsuiwade.github.io/2022/01/10/blog32-starId-3/</id>
    <published>2022-01-10T11:45:41.000Z</published>
    <updated>2022-01-10T11:45:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章将介绍<code>世界坐标</code>转为<code>星敏坐标</code>的过程。</p><p>根据专利 <a href="https://patentimages.storage.googleapis.com/da/9a/a0/6568cfa38683e7/CN1923621A.pdf">https://patentimages.storage.googleapis.com/da/9a/a0/6568cfa38683e7/CN1923621A.pdf</a> 的矩阵转换描述，再结合003.pdf文中的图 来理解 矩阵变换的算法过程。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110114902059.png" alt="image-20220110114902059"></p><p>（请注意，这里的R已是可以直接乘的姿态变换矩阵，为旋转矩阵的逆。）</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110114639546.png" alt="image-20220110114639546"></p><p>搜索旋转矩阵的基本原理，</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110115328203.png" alt="image-20220110115328203"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110140128402.png" alt="image-20220110140128402"></p><p>对本文的旋转应是左乘还是右乘？上文是绕固定轴旋转，为左乘。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110145543708.png" alt="image-20220110145543708"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110145557178.png" alt="image-20220110145557178"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110145619011.png" alt="image-20220110145619011"></p><p>再看一个定理 <code>绕固定坐标轴旋转与绕自身坐标轴旋转一致性证明</code> <a href="https://blog.csdn.net/jiongjiongxia123/article/details/90236737">https://blog.csdn.net/jiongjiongxia123/article/details/90236737</a></p><p>绕固定轴 左乘的公式为</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110162648283.png" alt="image-20220110162648283"></p><p>而绕自身轴 右乘的公式为</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220110162858815.png" alt="image-20220110162858815"></p><p>和专利的对应，但差了个转置。</p><hr><p><strong>想了很久这个转置的问题，其实是旋转矩阵与坐标变换的关系问题。从原坐标系到新坐标系的旋转矩阵为M。原坐标系下的坐标a，新坐标系下的坐标b，若a为行向量，则aM=b，若a为列向量，则m’a=b，公式应为b=m’a，举例可知。</strong></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110201912015.png" alt="image-20220110201912015"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110191105431.png" alt="image-20220110191105431"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110191237196.png" alt="image-20220110191237196"></p><hr><p>在这需要重述一下坐标系的定义</p><p>  （1）天球坐标系。以天赤道为基圈，过春分点的时圈为主圈，春分点为主点。天球坐标系采用赤经、赤纬作为坐标量。参见附件1相关叙述。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110114639546.png" alt="image-20220110114639546"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/clip_image002.jpg" alt="img"></p><p><em>图1 星敏感器坐标系、图像坐标系及前视投影成像示意图</em></p><p> （2）星敏感器坐标系xyz。以投影中心O（光轴上与感光面距离为f的点，即光心，参见图1）为坐标原点，以光轴为z轴（后面的讨论中，光轴OO’与天球面的交点记为D点），过O点平行于感光面两边的直线作为x轴和y轴。图1为星敏感器坐标系、图像坐标系及前视投影成像示意图。</p><p> （3）图像坐标系XY。以感光面的中心O’（O点在该平面上的投影点）为坐标原点，平行于感光面两边的直线为X轴和Y轴的平面坐标系，参见图1。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">1670</span></span><br><span class="line"><span class="number">1477</span></span><br><span class="line"><span class="number">1502</span></span><br><span class="line"><span class="number">1631</span></span><br><span class="line"><span class="number">1603</span></span><br><span class="line"><span class="number">1453</span></span><br><span class="line"><span class="number">1432</span></span><br><span class="line"><span class="number">1492</span></span><br><span class="line"><span class="number">1488</span></span><br><span class="line"><span class="number">1648</span></span><br><span class="line"><span class="number">1646</span></span><br><span class="line"><span class="number">1566</span></span><br><span class="line"><span class="number">1688</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1505</span></span><br><span class="line">];</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A1 = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu01.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">newMatrix= [A1,<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A1,<span class="number">1</span>),<span class="number">1</span>)];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(newMatrix,<span class="number">1</span>)</span><br><span class="line">    ll(<span class="built_in">j</span>,<span class="number">1</span>) = norm(newMatrix(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">newNewMatrix = newMatrix./ll;</span><br><span class="line"></span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line">Y = [   (f  ./  (<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">1</span>).^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">2</span>).^<span class="number">2</span>))  )];</span><br><span class="line">zhixiang = inv(A&#x27;*A)*A&#x27;*Y;</span><br><span class="line">E = (A*zhixiang - Y);</span><br><span class="line">RMS = <span class="built_in">sqrt</span>(mse(E));</span><br><span class="line"><span class="keyword">if</span>   zhixiang(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-zhixiang(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    a=<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    a = <span class="number">360</span>-<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b=<span class="built_in">asind</span>( zhixiang(<span class="number">3</span>) );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% syms fai x;</span></span><br><span class="line"><span class="comment">% assume(fai&gt;=0 &amp; fai&lt;=2*pi);</span></span><br><span class="line"></span><br><span class="line">fai = <span class="number">0</span>;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">inn = <span class="number">1670</span>;</span><br><span class="line">star1 =  [  <span class="built_in">cosd</span>(star_data(inn,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(inn,<span class="number">2</span>))   ;   <span class="built_in">cosd</span>(star_data(inn,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(inn,<span class="number">2</span>))  ;  <span class="built_in">sind</span>(star_data(inn,<span class="number">3</span>))  ];</span><br><span class="line">R * star1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">title(<span class="string">&#x27;天球坐标系，从外向内看&#x27;</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>); </span><br><span class="line"><span class="built_in">scatter</span>(A1(:,<span class="number">1</span>),A1(:,<span class="number">2</span>))</span><br><span class="line">title(<span class="string">&#x27;星图1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">set(gca,<span class="string">&#x27;XDir&#x27;</span>,<span class="string">&#x27;reverse&#x27;</span>)<span class="comment">%对X方向反转</span></span><br><span class="line">title(<span class="string">&#x27;星敏坐标系，从内往外看&#x27;</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>); </span><br><span class="line"><span class="built_in">scatter</span>(A1(:,<span class="number">1</span>),A1(:,<span class="number">2</span>))</span><br><span class="line">view(<span class="number">-90</span>,<span class="number">90</span>);  <span class="comment">% view(az,el) 为当前坐标区设置相机视线的方位角(顺时针为正)和仰角。</span></span><br><span class="line">title(<span class="string">&#x27;星图1逆时针旋转90&#x27;</span>)</span><br></pre></td></tr></table></figure><p>针对星图1的第一个点，即第1670个点，它的赤经赤纬为 115.828 , 28.8835，用旋转矩阵乘得到星敏坐标（0.0950，-0.0949， 0.9909）与左下图对应， 第二个点，即第1477个点，赤经赤纬为105.88,29.33 ， 星敏坐标为（-0.0566，-0.0889，0.9944）</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220118160235525.png" alt="image-20220118160235525"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220118161031114.png" alt="image-20220118161031114"></p><p><strong><code>这个感光面，究竟对于图像坐标系来说，是哪一面呢？不管哪一面，都不影响已经确定了的XY轴和点坐标。但我画星图1的意义就不大，不好直接比对。</code></strong></p><p><strong><code>但在这里，经过很长时间的考虑，如题所述的（图像坐标系与星敏坐标系的XY对应）经过验证后是错误的（倘若如上上上图的XY轴示意图和上图的文字描述，第二列和第三列没有负坐标）。</code></strong></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%  星图1各个坐标</span></span><br><span class="line"></span><br><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">1670</span></span><br><span class="line"><span class="number">1477</span></span><br><span class="line"><span class="number">1502</span></span><br><span class="line"><span class="number">1631</span></span><br><span class="line"><span class="number">1603</span></span><br><span class="line"><span class="number">1453</span></span><br><span class="line"><span class="number">1432</span></span><br><span class="line"><span class="number">1492</span></span><br><span class="line"><span class="number">1488</span></span><br><span class="line"><span class="number">1648</span></span><br><span class="line"><span class="number">1646</span></span><br><span class="line"><span class="number">1566</span></span><br><span class="line"><span class="number">1688</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1505</span></span><br><span class="line">];</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">Attribute_Set = &#123;<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">1.5</span>&#125;; </span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A1 = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu01.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">newMatrix= [A1,<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A1,<span class="number">1</span>),<span class="number">1</span>)];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(newMatrix,<span class="number">1</span>)</span><br><span class="line">    ll(<span class="built_in">j</span>,<span class="number">1</span>) = norm(newMatrix(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">newNewMatrix = newMatrix./ll;</span><br><span class="line"></span><br><span class="line">corWorld =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">title(<span class="string">&#x27;天球坐标系，从外向内看&#x27;</span>)</span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>+<span class="number">6</span>,<span class="number">34.5</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>,<span class="number">34.5</span>+<span class="number">6</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">115.828</span>,<span class="number">28.8835</span>,<span class="string">&#x27;第一点（正负）&#x27;</span>);</span><br><span class="line">text(<span class="number">105.88</span>,<span class="number">29.33</span>,<span class="string">&#x27;第二点（负负）&#x27;</span>);</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">xlim([<span class="number">109.6</span><span class="number">-8</span> <span class="number">109.6</span>+<span class="number">8</span>]);</span><br><span class="line">ylim([<span class="number">34.5</span><span class="number">-8</span> <span class="number">34.5</span>+<span class="number">8</span>]);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">set(gca,<span class="string">&#x27;XDir&#x27;</span>,<span class="string">&#x27;reverse&#x27;</span>)<span class="comment">%对X方向反转</span></span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">title(<span class="string">&#x27;星敏坐标系，从内往外看&#x27;</span>)</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>+<span class="number">6</span>,<span class="number">34.5</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>,<span class="number">34.5</span>+<span class="number">6</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">115.828</span>,<span class="number">28.8835</span>,<span class="string">&#x27;第一点（正负）&#x27;</span>);</span><br><span class="line">text(<span class="number">105.88</span>,<span class="number">29.33</span>,<span class="string">&#x27;第二点（负负）&#x27;</span>);</span><br><span class="line">xlim([<span class="number">109.6</span><span class="number">-8</span> <span class="number">109.6</span>+<span class="number">8</span>]);</span><br><span class="line">ylim([<span class="number">34.5</span><span class="number">-8</span> <span class="number">34.5</span>+<span class="number">8</span>]);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">set(gca,<span class="string">&#x27;XDir&#x27;</span>,<span class="string">&#x27;reverse&#x27;</span>)<span class="comment">%对X方向反转</span></span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">title(<span class="string">&#x27;上图旋转&#x27;</span>)</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>+<span class="number">6</span>,<span class="number">34.5</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>,<span class="number">34.5</span>+<span class="number">6</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">115.828</span>,<span class="number">28.8835</span>,<span class="string">&#x27;第一点（正负）&#x27;</span>);</span><br><span class="line">text(<span class="number">105.88</span>,<span class="number">29.33</span>,<span class="string">&#x27;第二点（负负）&#x27;</span>);</span><br><span class="line">xlim([<span class="number">109.6</span><span class="number">-8</span> <span class="number">109.6</span>+<span class="number">8</span>]);</span><br><span class="line">ylim([<span class="number">34.5</span><span class="number">-8</span> <span class="number">34.5</span>+<span class="number">8</span>]);</span><br><span class="line">view(<span class="number">180</span>,<span class="number">90</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">set(gca,<span class="string">&#x27;XDir&#x27;</span>,<span class="string">&#x27;reverse&#x27;</span>)<span class="comment">%对X方向反转</span></span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">title(<span class="string">&#x27;星敏坐标系，旋转90&#x27;</span>)</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">-6</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span><span class="number">-6</span>,<span class="number">34.5</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>,<span class="number">34.5</span>+<span class="number">6</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">115.828</span>,<span class="number">28.8835</span>,<span class="string">&#x27;第一点（负负）&#x27;</span>);</span><br><span class="line">text(<span class="number">105.88</span>,<span class="number">29.33</span>,<span class="string">&#x27;第二点（负正）&#x27;</span>);</span><br><span class="line">xlim([<span class="number">109.6</span><span class="number">-8</span> <span class="number">109.6</span>+<span class="number">8</span>]);</span><br><span class="line">ylim([<span class="number">34.5</span><span class="number">-8</span> <span class="number">34.5</span>+<span class="number">8</span>]); </span><br><span class="line">view(<span class="number">-90</span>,<span class="number">90</span>); </span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">7</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">set(gca,<span class="string">&#x27;XDir&#x27;</span>,<span class="string">&#x27;reverse&#x27;</span>)<span class="comment">%对X方向反转</span></span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">title(<span class="string">&#x27;星敏坐标系，旋转180&#x27;</span>)</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">-6</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">0</span>,<span class="number">-6</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span><span class="number">-6</span>,<span class="number">34.5</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>,<span class="number">34.5</span><span class="number">-6</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">115.828</span>,<span class="number">28.8835</span>,<span class="string">&#x27;第一点（负正）&#x27;</span>);</span><br><span class="line">text(<span class="number">105.88</span>,<span class="number">29.33</span>,<span class="string">&#x27;第二点（正正）&#x27;</span>);</span><br><span class="line">xlim([<span class="number">109.6</span><span class="number">-8</span> <span class="number">109.6</span>+<span class="number">8</span>]);</span><br><span class="line">ylim([<span class="number">34.5</span><span class="number">-8</span> <span class="number">34.5</span>+<span class="number">8</span>]);</span><br><span class="line">view(<span class="number">180</span>,<span class="number">90</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">8</span>); </span><br><span class="line"><span class="built_in">scatter</span>(star_data(index,<span class="number">2</span>),star_data(index,<span class="number">3</span>))</span><br><span class="line">set(gca,<span class="string">&#x27;XDir&#x27;</span>,<span class="string">&#x27;reverse&#x27;</span>)<span class="comment">%对X方向反转</span></span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">title(<span class="string">&#x27;星敏坐标系，旋转270&#x27;</span>)</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">0</span>,<span class="number">-6</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">109.6</span>,<span class="number">34.5</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>+<span class="number">6</span>,<span class="number">34.5</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">109.6</span>,<span class="number">34.5</span><span class="number">-6</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">115.828</span>,<span class="number">28.8835</span>,<span class="string">&#x27;第一点（正正）&#x27;</span>);</span><br><span class="line">text(<span class="number">105.88</span>,<span class="number">29.33</span>,<span class="string">&#x27;第二点（正负）&#x27;</span>);</span><br><span class="line">xlim([<span class="number">109.6</span><span class="number">-8</span> <span class="number">109.6</span>+<span class="number">8</span>]);</span><br><span class="line">ylim([<span class="number">34.5</span><span class="number">-8</span> <span class="number">34.5</span>+<span class="number">8</span>]);</span><br><span class="line">view(<span class="number">90</span>,<span class="number">90</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line">Y = [   (f  ./  (<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">1</span>).^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">2</span>).^<span class="number">2</span>))  )];</span><br><span class="line">zhixiang = inv(A&#x27;*A)*A&#x27;*Y;</span><br><span class="line">E = (A*zhixiang - Y);</span><br><span class="line">RMS = <span class="built_in">sqrt</span>(mse(E));</span><br><span class="line"><span class="keyword">if</span>   zhixiang(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-zhixiang(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    a=<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    a = <span class="number">360</span>-<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b=<span class="built_in">asind</span>( zhixiang(<span class="number">3</span>) );</span><br><span class="line"></span><br><span class="line"><span class="comment">% syms fai x;</span></span><br><span class="line"><span class="comment">% assume(fai&gt;=0 &amp; fai&lt;=2*pi);</span></span><br><span class="line"></span><br><span class="line">fai = <span class="number">90</span>;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line">corSensor =  corWorld * R&#x27;;</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>); </span><br><span class="line"><span class="built_in">scatter</span>(corSensor(:,<span class="number">1</span>),corSensor(:,<span class="number">2</span>))</span><br><span class="line"><span class="comment">% set(gca,&#x27;XDir&#x27;,&#x27;reverse&#x27;)%对X方向反转</span></span><br><span class="line">title(<span class="string">&#x27;右旋90度&#x27;</span>)</span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">xlim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">ylim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">1</span>,<span class="number">1</span>),corSensor(<span class="number">1</span>,<span class="number">2</span>),<span class="string">&#x27;第一点（负负）&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">2</span>,<span class="number">1</span>),corSensor(<span class="number">2</span>,<span class="number">2</span>),<span class="string">&#x27;第二点（负正）&#x27;</span>);</span><br><span class="line"><span class="comment">% view(0,90);</span></span><br><span class="line"></span><br><span class="line">fai = <span class="number">180</span>;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line">corSensor =  corWorld * R&#x27;;</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">3</span>); </span><br><span class="line"><span class="built_in">scatter</span>(corSensor(:,<span class="number">1</span>),corSensor(:,<span class="number">2</span>))</span><br><span class="line"><span class="comment">% set(gca,&#x27;XDir&#x27;,&#x27;reverse&#x27;)%对X方向反转</span></span><br><span class="line">title(<span class="string">&#x27;右旋180度&#x27;</span>)</span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">xlim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">ylim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">1</span>,<span class="number">1</span>),corSensor(<span class="number">1</span>,<span class="number">2</span>),<span class="string">&#x27;第一点（负正）&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">2</span>,<span class="number">1</span>),corSensor(<span class="number">2</span>,<span class="number">2</span>),<span class="string">&#x27;第二点（正正）&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fai = <span class="number">270</span>;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line">corSensor =  corWorld * R&#x27;;</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>); </span><br><span class="line"><span class="built_in">scatter</span>(corSensor(:,<span class="number">1</span>),corSensor(:,<span class="number">2</span>))</span><br><span class="line"><span class="comment">% set(gca,&#x27;XDir&#x27;,&#x27;reverse&#x27;)%对X方向反转</span></span><br><span class="line">title(<span class="string">&#x27;右旋270度&#x27;</span>)</span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">xlim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">ylim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">1</span>,<span class="number">1</span>),corSensor(<span class="number">1</span>,<span class="number">2</span>),<span class="string">&#x27;第一点（正正）&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">2</span>,<span class="number">1</span>),corSensor(<span class="number">2</span>,<span class="number">2</span>),<span class="string">&#x27;第二点（正负）&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,[<span class="number">9</span>,<span class="number">10</span>]); </span><br><span class="line"><span class="built_in">scatter</span>(A1(:,<span class="number">1</span>),A1(:,<span class="number">2</span>))</span><br><span class="line"><span class="comment">% set(gca,&#x27;YDir&#x27;,&#x27;reverse&#x27;)%对y方向反转</span></span><br><span class="line">title(<span class="string">&#x27;星图1&#x27;</span>)</span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">quiver(<span class="number">-256</span>,<span class="number">-256</span>,<span class="number">0</span>,<span class="number">512</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">-256</span>,<span class="number">-256</span>,<span class="number">512</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">text(<span class="number">200</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">200</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">-233</span>,<span class="number">233</span>,<span class="string">&#x27;第一点（负正）&#x27;</span>);</span><br><span class="line">text(<span class="number">-217</span>,<span class="number">-138</span>,<span class="string">&#x27;第二点（负负）&#x27;</span>);</span><br><span class="line">xlim([<span class="number">-260</span> <span class="number">260</span>]);</span><br><span class="line">ylim([<span class="number">-260</span> <span class="number">260</span>]);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">3</span>,<span class="number">4</span>,[<span class="number">11</span>,<span class="number">12</span>]); </span><br><span class="line"><span class="built_in">scatter</span>(A1(:,<span class="number">1</span>),A1(:,<span class="number">2</span>))</span><br><span class="line">set(gca,<span class="string">&#x27;YDir&#x27;</span>,<span class="string">&#x27;reverse&#x27;</span>)<span class="comment">%对y方向反转</span></span><br><span class="line">title(<span class="string">&#x27;星图1&#x27;</span>)</span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">quiver(<span class="number">-256</span>,<span class="number">-256</span>,<span class="number">0</span>,<span class="number">512</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">200</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">-256</span>,<span class="number">-256</span>,<span class="number">512</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">text(<span class="number">200</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">200</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">-233</span>,<span class="number">233</span>,<span class="string">&#x27;第一点（负正）&#x27;</span>);</span><br><span class="line">text(<span class="number">-217</span>,<span class="number">-138</span>,<span class="string">&#x27;第二点（负负）&#x27;</span>);</span><br><span class="line">xlim([<span class="number">-260</span> <span class="number">260</span>]);</span><br><span class="line">ylim([<span class="number">-260</span> <span class="number">260</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220119112958202.png" alt="image-20220119112958202"></p><p>我又细细画了一幅图，图2是 <code>将</code> 图1的xyz轴 滚转角fai = 90（图为从外往内看，xy轴逆时针旋转90°，相当于图 顺时针旋转了90度），绕着朝向自己的拇指方向，右旋90°，相当于将图1顺时针旋转90°。依次画其他图。</p><p><strong>根据第一点、第二点的正负可见，没有一幅图上的星点坐标值是符合星图1的描述，而图8和星图1是一致的，可以猜测出结论。</strong></p><p><strong>因此正确的理解应该是将天球坐标转为星敏坐标，然后将x轴反向 x’ = -x </strong>。</p><p>星图1就是由星敏坐标经过滚转角270度旋转后得到图4，再将x轴反向 x’ = -x得到图像坐标。</p><p>如何得到图像坐标呢？</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/4c570ee2f679076f4d16e05c3eca29fa.png" alt="img"></p><p>（注意 ， 本题与上文所描述不同，连相机坐标系都不是右手坐标系）</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220119111033783.png" alt="image-20220119111033783"></p><p>（<a href="https://qiy.net/2020/06/09/IAP-Cam-calibration/）">https://qiy.net/2020/06/09/IAP-Cam-calibration/）</a></p><p>f = 256/(tand(6));  % f = 2435.677300280981像素</p><p>x = f * Xc / Zc ; </p><p>该公式一步到像素坐标。</p><p>下面进行验证。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">%  正向验证星图1从世界坐标到星敏坐标到像素坐标并画图</span></span><br><span class="line"></span><br><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">1670</span></span><br><span class="line"><span class="number">1477</span></span><br><span class="line"><span class="number">1502</span></span><br><span class="line"><span class="number">1631</span></span><br><span class="line"><span class="number">1603</span></span><br><span class="line"><span class="number">1453</span></span><br><span class="line"><span class="number">1432</span></span><br><span class="line"><span class="number">1492</span></span><br><span class="line"><span class="number">1488</span></span><br><span class="line"><span class="number">1648</span></span><br><span class="line"><span class="number">1646</span></span><br><span class="line"><span class="number">1566</span></span><br><span class="line"><span class="number">1688</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1505</span></span><br><span class="line">];</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A1 = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu01.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">newMatrix= [A1,<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A1,<span class="number">1</span>),<span class="number">1</span>)];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(newMatrix,<span class="number">1</span>)</span><br><span class="line">    ll(<span class="built_in">j</span>,<span class="number">1</span>) = norm(newMatrix(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">newNewMatrix = newMatrix./ll;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line">Y = [   (f  ./  (<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">1</span>).^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">2</span>).^<span class="number">2</span>))  )];</span><br><span class="line">zhixiang = inv(A&#x27;*A)*A&#x27;*Y;</span><br><span class="line">E = (A*zhixiang - Y);</span><br><span class="line">RMS = <span class="built_in">sqrt</span>(mse(E));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>   zhixiang(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-zhixiang(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    a=<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    a = <span class="number">360</span>-<span class="built_in">acosd</span>( zhixiang(<span class="number">1</span>)  /  <span class="built_in">sqrt</span>(<span class="number">1</span>-((zhixiang(<span class="number">3</span>))^<span class="number">2</span>) )   );</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">b=<span class="built_in">asind</span>( zhixiang(<span class="number">3</span>) );</span><br><span class="line"></span><br><span class="line">corWorld =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fai = <span class="number">270</span>;</span><br><span class="line">R = [</span><br><span class="line">-<span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">sind</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">sind</span>(fai)</span><br><span class="line"> <span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)     -<span class="built_in">cosd</span>(a)*<span class="built_in">sind</span>(fai)-<span class="built_in">sind</span>(a)*<span class="built_in">sind</span>(b)*<span class="built_in">cosd</span>(fai)      <span class="built_in">cosd</span>(b)*<span class="built_in">cosd</span>(fai)</span><br><span class="line"> <span class="built_in">cosd</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(a)*<span class="built_in">cosd</span>(b)                                  <span class="built_in">sind</span>(b)</span><br><span class="line">];</span><br><span class="line">corSensor =  corWorld * R&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scatter</span>(corSensor(:,<span class="number">1</span>),corSensor(:,<span class="number">2</span>))</span><br><span class="line"><span class="comment">% set(gca,&#x27;XDir&#x27;,&#x27;reverse&#x27;)%对X方向反转</span></span><br><span class="line">title(<span class="string">&#x27;右旋270度&#x27;</span>)</span><br><span class="line">axis equal;<span class="built_in">hold</span> on;</span><br><span class="line">xlim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">ylim([<span class="number">-0.1</span> <span class="number">0.1</span>]);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">quiver(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;Color&#x27;</span>,<span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">text(<span class="number">0</span>,<span class="number">0.1</span>,<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">text(<span class="number">0.1</span>,<span class="number">0</span>,<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">1</span>,<span class="number">1</span>),corSensor(<span class="number">1</span>,<span class="number">2</span>),<span class="string">&#x27;第一点（正正）&#x27;</span>);</span><br><span class="line">text(corSensor(<span class="number">2</span>,<span class="number">1</span>),corSensor(<span class="number">2</span>,<span class="number">2</span>),<span class="string">&#x27;第二点（正负）&#x27;</span>);</span><br><span class="line"></span><br><span class="line">corSensor1=[-corSensor(:,<span class="number">1</span>), corSensor(:,<span class="number">2</span>:<span class="number">3</span>) ];</span><br><span class="line">corPic = [f .* corSensor1(:,<span class="number">1</span>) ./corSensor1(:,<span class="number">3</span>)  ,  f .* corSensor1(:,<span class="number">2</span>) ./corSensor1(:,<span class="number">3</span>) ];</span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">scatter</span>(corPic(:,<span class="number">1</span>),corPic(:,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">scatter</span>(A1(:,<span class="number">1</span>),A1(:,<span class="number">2</span>));</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220119114259344.png" alt="image-20220119114259344"></p><p>以我预测的正向过程结果Fig2与星图数据画出结果Fig3一致，终于结束。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220119114416118.png" alt="image-20220119114416118"></p>]]></content>
    
    
    <summary type="html">接续前文已求出指向中的赤经赤纬，至于滚转角的求法，需要深入旋转矩阵的理解。</summary>
    
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/categories/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/tags/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>星图识别2-指向计算</title>
    <link href="https://tsuiwade.github.io/2022/01/09/blog31-starId-2/"/>
    <id>https://tsuiwade.github.io/2022/01/09/blog31-starId-2/</id>
    <published>2022-01-09T21:41:56.000Z</published>
    <updated>2022-01-09T21:41:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>根据 文章 B19910360003.pdf 中 </p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220109214931059.png" alt="image-20220109214931059"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220109215007244.png" alt="image-20220109215007244"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220109215025866.png" alt="image-20220109215025866"></p><p>焦距f，即为相机坐标系下的投影中心到感光面的距离，即f = 256/(tand(6)); 单位位像素，与a保持一致。</p><hr><p><strong>选前三点</strong></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110002256884.png" alt="image-20220110002256884"></p><p>赤经赤纬为：  109.6002   34.5005</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220109232504457.png" alt="image-20220109232504457"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/img/image-20220222193014726.png" alt="image-20220222193014726"></p><p>注意这里可能有2个解，在星图4中想了好几天。<code>其中这里有错，赤经应该还可能等于360°-式。</code></p><p><code>经过研究，结合sin赤经的正负号表现，探究最终结论：</code></p><p>若tan赤经和cos赤经同号则为原式，否则为360°-式</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>   Res(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-Res(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    [   <span class="built_in">acosd</span>(Res(<span class="number">1</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-Res(<span class="number">3</span>)^<span class="number">2</span>))  ,   <span class="built_in">asind</span>(Res(<span class="number">3</span>))   ]</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    [   <span class="number">360</span>-<span class="built_in">acosd</span>(Res(<span class="number">1</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-Res(<span class="number">3</span>)^<span class="number">2</span>))  ,   <span class="built_in">asind</span>(Res(<span class="number">3</span>))   ]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110001730296.png" alt=""></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% main5.m</span></span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu01.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">newMatrix= [<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A,<span class="number">1</span>),<span class="number">1</span>),A];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(newMatrix,<span class="number">1</span>)</span><br><span class="line">    ll(<span class="built_in">j</span>,<span class="number">1</span>) = norm(newMatrix(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">newNewMatrix = newMatrix./ll;</span><br><span class="line">syms m31 m32 m33;</span><br><span class="line"></span><br><span class="line">eqns = [</span><br><span class="line">    (f/(<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">1</span>,<span class="number">2</span>)^<span class="number">2</span> + newMatrix(<span class="number">1</span>,<span class="number">3</span>)^<span class="number">2</span>))) == <span class="built_in">cosd</span>(star_data(<span class="number">1670</span>,<span class="number">3</span>))*<span class="built_in">cosd</span>(star_data(<span class="number">1670</span>,<span class="number">2</span>))*m31 +   <span class="built_in">cosd</span>(star_data(<span class="number">1670</span>,<span class="number">3</span>))*<span class="built_in">sind</span>(star_data(<span class="number">1670</span>,<span class="number">2</span>))*m32  +  <span class="built_in">sind</span>(star_data(<span class="number">1670</span>,<span class="number">3</span>))*m33,</span><br><span class="line">    (f/(<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">2</span>,<span class="number">2</span>)^<span class="number">2</span> + newMatrix(<span class="number">2</span>,<span class="number">3</span>)^<span class="number">2</span>))) == <span class="built_in">cosd</span>(star_data(<span class="number">1477</span>,<span class="number">3</span>))*<span class="built_in">cosd</span>(star_data(<span class="number">1477</span>,<span class="number">2</span>))*m31 +   <span class="built_in">cosd</span>(star_data(<span class="number">1477</span>,<span class="number">3</span>))*<span class="built_in">sind</span>(star_data(<span class="number">1477</span>,<span class="number">2</span>))*m32  +  <span class="built_in">sind</span>(star_data(<span class="number">1477</span>,<span class="number">3</span>))*m33,</span><br><span class="line">    (f/(<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">3</span>,<span class="number">2</span>)^<span class="number">2</span> + newMatrix(<span class="number">3</span>,<span class="number">3</span>)^<span class="number">2</span>))) == <span class="built_in">cosd</span>(star_data(<span class="number">1502</span>,<span class="number">3</span>))*<span class="built_in">cosd</span>(star_data(<span class="number">1502</span>,<span class="number">2</span>))*m31 +   <span class="built_in">cosd</span>(star_data(<span class="number">1502</span>,<span class="number">3</span>))*<span class="built_in">sind</span>(star_data(<span class="number">1502</span>,<span class="number">2</span>))*m32  +  <span class="built_in">sind</span>(star_data(<span class="number">1502</span>,<span class="number">3</span>))*m33</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">vars = [m31 m32 m33];</span><br><span class="line">[m31, m32 m33 ] = solve(eqns, vars);</span><br><span class="line">m31=double(m31);</span><br><span class="line">m32=double(m32);</span><br><span class="line">m33=double(m33);</span><br><span class="line"><span class="keyword">if</span>   Res(<span class="number">2</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-Res(<span class="number">3</span>)^<span class="number">2</span>) &gt; <span class="number">0</span> </span><br><span class="line">    [   <span class="built_in">acosd</span>(Res(<span class="number">1</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-Res(<span class="number">3</span>)^<span class="number">2</span>))  ,   <span class="built_in">asind</span>(Res(<span class="number">3</span>))   ]</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    [   <span class="number">360</span>-<span class="built_in">acosd</span>(Res(<span class="number">1</span>)/<span class="built_in">sqrt</span>(<span class="number">1</span>-Res(<span class="number">3</span>)^<span class="number">2</span>))  ,   <span class="built_in">asind</span>(Res(<span class="number">3</span>))   ]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>选全点：</strong></p><p>方程组个数小于未知数个数，这种情形称为不定方程组，不定方程组一般有无穷个解。</p><p>方程个数大于未知数个数的方程组称为超定方程组，超定方程组一般无解。但是它存在最小二乘解。比较常见的情形是实际生活中，我们要测量某一组数据大小，为减小误差，必须重复测很多次，每测一次就是一组数据，这组数据就是一个超定方程组，它的最小二乘解就是误差最小的值。</p><p>算出最小二乘解是差不多的，赤经赤纬为：109.6000   34.5000</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 星图1 </span></span><br><span class="line"><span class="comment">% main5.m</span></span><br><span class="line">clc;clear;close all;</span><br><span class="line">index = [<span class="number">1670</span></span><br><span class="line"><span class="number">1477</span></span><br><span class="line"><span class="number">1502</span></span><br><span class="line"><span class="number">1631</span></span><br><span class="line"><span class="number">1603</span></span><br><span class="line"><span class="number">1453</span></span><br><span class="line"><span class="number">1432</span></span><br><span class="line"><span class="number">1492</span></span><br><span class="line"><span class="number">1488</span></span><br><span class="line"><span class="number">1648</span></span><br><span class="line"><span class="number">1646</span></span><br><span class="line"><span class="number">1566</span></span><br><span class="line"><span class="number">1688</span></span><br><span class="line"><span class="number">1655</span></span><br><span class="line"><span class="number">1505</span>];</span><br><span class="line"></span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">f = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu01.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line">newMatrix= [<span class="built_in">repmat</span>(f,<span class="built_in">size</span>(A,<span class="number">1</span>),<span class="number">1</span>),A];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(newMatrix,<span class="number">1</span>)</span><br><span class="line">    ll(<span class="built_in">j</span>,<span class="number">1</span>) = norm(newMatrix(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">newNewMatrix = newMatrix./ll;</span><br><span class="line"></span><br><span class="line">A  =  [  <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">cosd</span>(star_data(index,<span class="number">2</span>))   ,   <span class="built_in">cosd</span>(star_data(index,<span class="number">3</span>)).*<span class="built_in">sind</span>(star_data(index,<span class="number">2</span>))  ,  <span class="built_in">sind</span>(star_data(index,<span class="number">3</span>))  ];</span><br><span class="line">Y = [   (f  ./  (<span class="built_in">sqrt</span>(f^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">2</span>).^<span class="number">2</span> + newMatrix(<span class="number">1</span>:<span class="number">15</span>,<span class="number">3</span>).^<span class="number">2</span>))  )];</span><br><span class="line"></span><br><span class="line">Res = inv(A&#x27;*A)*A&#x27;*Y;</span><br><span class="line">E = (A*Res - Y);</span><br><span class="line"><span class="comment">%MSE 为平均均方误差</span></span><br><span class="line">RMS = <span class="built_in">sqrt</span>(mse(E))</span><br></pre></td></tr></table></figure><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110084949071.png" alt="image-20220110084949071"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220110085851273.png" alt="image-20220110085851273"></p><p>对于星图3</p><p>全点：赤经赤纬 124.9740   43.9973</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220111143646339.png" alt="image-20220111143646339"></p><p>较为精准的3点：1825、1943、1722，赤经赤纬  125.0001   43.9999，和上对比，较为精准。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220111100252007.png" alt="image-20220111100252007"></p><p>较为不精准的3点：1942、1941、1900，赤经赤纬 125.4325   44.2513，发现确实有较大偏差。</p>]]></content>
    
    
    <summary type="html">前一文用了简单的角距匹配算法进行星体的识别，本文将由识别的星体进行指向的计算。</summary>
    
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/categories/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/tags/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>星图识别1-角距矩阵匹配模型</title>
    <link href="https://tsuiwade.github.io/2022/01/07/blog30-starId-1/"/>
    <id>https://tsuiwade.github.io/2022/01/07/blog30-starId-1/</id>
    <published>2022-01-07T23:11:38.000Z</published>
    <updated>2022-01-07T23:11:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博客主要是针对2019主要介绍的是<a href="https://www.shumo.com/wiki/doku.php?id=%E7%AC%AC%E5%8D%81%E5%85%AD%E5%B1%8A_2019_%E5%85%A8%E5%9B%BD%E7%A0%94%E7%A9%B6%E7%94%9F%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B_npmcm_%E8%AF%95%E9%A2%98">第十六届(2019)全国研究生数学建模竞赛(NPMCM)试题B题</a>：天文导航中的星图识别，这里我下载了<a href="https://github.com/tsuiwade/MathModel/tree/master/%E5%9B%BD%E8%B5%9B%E8%AE%BA%E6%96%87/2019%E5%B9%B4%E4%BC%98%E7%A7%80%E8%AE%BA%E6%96%87/B">5篇优秀论文</a>，以及优秀的<a href="https://www.bilibili.com/video/BV17J41117Ut?from=search&amp;seid=305839988149914531&amp;spm_id_from=333.337.0.0">答辩现场录像</a>，在这篇博客中，我将选取<code>B19102880053</code>提到的<code>基于角距传统算法</code>进行复现。</p><p>此赛题提供的4908个导航星表数据是.mat文件，因此将使用<code>MATLAB</code>进行代码编写。</p><ul><li><p>1、星表数据处理</p><p>首先将星表数据的<code>天球坐标系下的赤经、赤纬</code>转为<code>直角坐标系下的x/y/z轴的值</code>，利用公式</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220108103109.png" alt=""></p><p>得到</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220108103148.png" alt=""></p></li></ul><ul><li><p>2、准备库矩阵和星图矩阵</p><p> <img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220108094645.png" alt=""></p><ul><li><p>式6-1导航星角距库比较好理解，我将其化成度数，得到：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220108103624.png" alt=""></p></li><li><p>而式6-2某星图角距矩阵，文中作者提到选取导航星方式，但不妨以任意星，例如表中顺序来求。在此我选取第一个星<code>A01</code>作为基准星，求解与其他星的角距，但在此我去除了与本身星的角距（因其为0），得到如下角距：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220108103940.png" alt=""></p></li></ul></li></ul><ul><li><p>3、算法描述</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/20220108104116.png" alt=""></p><p>（其实在此我理解错了，怪不得我运行了这么长时间，先说一下我的理解的算法，是没有优化的算法，在于最后一步还进行遍历循环。）</p><p>取<code>星图角距矩阵</code>第i(i=1)个元素与<code>导航星角距矩阵</code>第j(j=1)列的元素依次匹配，若匹配到角距相等或近似的元素，判断矩阵第i(i=1)个元素数值加 1；  </p><p><strong>main3.m</strong></p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (   <span class="built_in">length</span>(<span class="built_in">find</span>(<span class="built_in">abs</span>(<span class="built_in">angle</span>(:,<span class="built_in">j</span>)-angle1(<span class="built_in">i</span>)) &lt; <span class="number">0.1</span>  ) <span class="comment">% 这里的0.1是匹配到角距的判定</span></span><br><span class="line">panduan(<span class="built_in">j</span>) = panduan(<span class="built_in">j</span>)+ <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>取<code>星图角距矩阵</code>第i （ i= 2,3,…,n）个元素，重复上一步操作； （该步完成后，若导航星就是第j列，则判断矩阵会加很多个1；）</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(angle1,<span class="number">2</span>) </span><br><span class="line"><span class="keyword">if</span> (   <span class="built_in">length</span>(<span class="built_in">find</span>(<span class="built_in">abs</span>(<span class="built_in">angle</span>(:,<span class="built_in">j</span>)-angle1(<span class="built_in">i</span>))&lt; <span class="number">0.1</span>  )</span><br><span class="line">panduan(<span class="built_in">j</span>) = panduan(<span class="built_in">j</span>)+ <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>若星图矩阵所有元素均完成匹配，则取导航星矩阵第 j （ j = 2,3,…,4908）列元素重复上两步操作； </p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="number">4908</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(angle1,<span class="number">2</span>) </span><br><span class="line"><span class="keyword">if</span> (   <span class="built_in">length</span>(<span class="built_in">find</span>(<span class="built_in">abs</span>(<span class="built_in">angle</span>(:,<span class="built_in">j</span>)-angle1(<span class="built_in">i</span>))&lt; <span class="number">0.1</span>     )</span><br><span class="line">panduan(<span class="built_in">j</span>) = panduan(<span class="built_in">j</span>)+ <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>取判断矩阵最大元素所在列（记为 x ）作为基准星编号 x ；  </p><p>（关于0.1的设置，假设其为a，我希望采用智能化判断，即当判断矩阵的最大的一个值不大于最大的值的2倍时，差距a减半，继续判断，直到第一个值大于第二个值，即能够明显判断出差异和保证准确性时，判断截止）</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> delta=<span class="number">1</span>:<span class="number">10</span> </span><br><span class="line">       panduan = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">4908</span>);</span><br><span class="line">       <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="number">4908</span></span><br><span class="line">           <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(angle1,<span class="number">2</span>) </span><br><span class="line">               <span class="keyword">if</span> (   <span class="built_in">length</span>(<span class="built_in">find</span>(<span class="built_in">abs</span>(<span class="built_in">angle</span>(:,<span class="built_in">j</span>)-angle1(<span class="built_in">i</span>))&lt; (<span class="number">2</span>^(-delta))))     )</span><br><span class="line">                   panduan(<span class="built_in">j</span>) = panduan(<span class="built_in">j</span>)+ <span class="number">1</span> ;</span><br><span class="line">               <span class="keyword">end</span></span><br><span class="line">           <span class="keyword">end</span></span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">       [<span class="built_in">max</span>,I ] = maxk(panduan,<span class="number">5</span>)</span><br><span class="line">       <span class="keyword">if</span>( <span class="built_in">max</span>(<span class="number">1</span>) &gt; <span class="built_in">max</span>(<span class="number">2</span>)*<span class="number">2</span> )</span><br><span class="line">           newNewMatrix(ii,<span class="number">4</span>)=I(<span class="number">1</span>); </span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">       <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>继续匹配导航星矩阵第 x 列，确定星图其他恒星编号 。（其实我的理解的差别在这，作者由基准星的列直接判断其他星，而笨拙的方法是遍历其他基准星，<strong>若采用笨拙的方法，星图1将耗时60s，若不遍历，则耗时6s左右，若设定固定0.1差距，则耗时1s左右</strong>）</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ii = <span class="number">1</span>:<span class="built_in">size</span>(newNewMatrix,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    angle1 = <span class="built_in">real</span>(<span class="built_in">acosd</span>(newNewMatrix(ii,<span class="number">1</span>:<span class="number">3</span>) * newNewMatrix(:,<span class="number">1</span>:<span class="number">3</span>).&#x27;));</span><br><span class="line">    angle1(<span class="built_in">find</span>(angle1==<span class="number">0</span>))=[];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> delta=<span class="number">1</span>:<span class="number">10</span> </span><br><span class="line">        panduan = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">4908</span>);</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="number">4908</span></span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(angle1,<span class="number">2</span>) </span><br><span class="line">                <span class="keyword">if</span> (   <span class="built_in">length</span>(<span class="built_in">find</span>(<span class="built_in">abs</span>(<span class="built_in">angle</span>(:,<span class="built_in">j</span>)-angle1(<span class="built_in">i</span>))&lt; (<span class="number">2</span>^(-delta))))     )</span><br><span class="line">                    panduan(<span class="built_in">j</span>) = panduan(<span class="built_in">j</span>)+ <span class="number">1</span> ;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        [<span class="built_in">max</span>,I ] = maxk(panduan,<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">max</span>(<span class="number">1</span>) &gt; <span class="built_in">max</span>(<span class="number">2</span>)*<span class="number">2</span> )</span><br><span class="line">            newNewMatrix(ii,<span class="number">4</span>)=I(<span class="number">1</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></li></ul><p>  该方法在识别星图1和星图2的时候有较好的效果。但在识别星图3的时候，由于存在的星较少，星之间相距较近 的条件比较苛刻，判断条件需要优化，之前是判断最多的匹配个数大于次多的匹配个数的两倍，现在可能由于delta的缩放比例过大导致无法适应条件进行判断，因此需要修改delta的条件。</p><p>  对于星图3只能识别出C05</p><p>  <img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220109105948234.png" alt="image-20220109105948234"></p><p>  通过对每一个星、每一种delta得出的<code>前几匹配数</code>可见，其实星图3是存在位置误差的，C02、C04、C06、C07存在较大误差。接着对星图4、5验证没问题，对于星图6部分有问题。</p><p>  <img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220109105820180.png" alt="image-20220109105820180"></p><p>  接着识别星图7，总结当前代码为：</p>  <figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tic</span><br><span class="line">clc;clear;close all;</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">star_data_xyz(:,<span class="number">1</span>) = <span class="built_in">cos</span>(star_data(:,<span class="number">2</span>) * <span class="built_in">pi</span> / <span class="number">180</span>) .* <span class="built_in">cos</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line">star_data_xyz(:,<span class="number">2</span>) = <span class="built_in">sin</span>(star_data(:,<span class="number">2</span>) * <span class="built_in">pi</span> / <span class="number">180</span>) .* <span class="built_in">cos</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line">star_data_xyz(:,<span class="number">3</span>) = <span class="built_in">sin</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">angle</span> = <span class="built_in">real</span>(<span class="built_in">acosd</span>(star_data_xyz(:,<span class="number">1</span>:<span class="number">3</span>) * star_data_xyz(:,<span class="number">1</span>:<span class="number">3</span>).&#x27;));</span><br><span class="line">panduan = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">4908</span>);</span><br><span class="line"></span><br><span class="line">h2 = <span class="number">512</span>/(<span class="built_in">tand</span>(<span class="number">10</span>));</span><br><span class="line">A = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu07.xls&#x27;</span>) - <span class="number">512</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(A,<span class="number">1</span>)</span><br><span class="line">    l(<span class="built_in">j</span>,<span class="number">1</span>) = norm(A(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">newMatrix= [<span class="built_in">repmat</span>(h2,<span class="built_in">size</span>(A,<span class="number">1</span>),<span class="number">1</span>),A];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(newMatrix,<span class="number">1</span>)</span><br><span class="line">    ll(<span class="built_in">j</span>,<span class="number">1</span>) = norm(newMatrix(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">newNewMatrix = newMatrix./ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ii = <span class="number">1</span>:<span class="built_in">size</span>(newNewMatrix,<span class="number">1</span>)</span><br><span class="line"><span class="comment">% ii = 7;</span></span><br><span class="line"></span><br><span class="line">    angle1 = <span class="built_in">real</span>(<span class="built_in">acosd</span>(newNewMatrix(ii,<span class="number">1</span>:<span class="number">3</span>) * newNewMatrix(:,<span class="number">1</span>:<span class="number">3</span>).&#x27;));</span><br><span class="line">    angle1(<span class="built_in">find</span>(angle1==<span class="number">0</span>))=[];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> delta=<span class="number">1</span>:<span class="number">15</span> </span><br><span class="line">        panduan = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">4908</span>);</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="number">4908</span></span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(angle1,<span class="number">2</span>) </span><br><span class="line">                <span class="keyword">if</span> (   <span class="built_in">length</span>(<span class="built_in">find</span>(<span class="built_in">abs</span>(<span class="built_in">angle</span>(:,<span class="built_in">j</span>)-angle1(<span class="built_in">i</span>))&lt; (<span class="number">2</span>^(-delta))))     )</span><br><span class="line"><span class="comment">%                 if (   length(find(abs(angle(:,j)-angle1(i))&lt; 0.0001       ))     )</span></span><br><span class="line">                    panduan(<span class="built_in">j</span>) = panduan(<span class="built_in">j</span>)+ <span class="number">1</span> ;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        [<span class="built_in">max</span>,I ] = maxk(panduan,<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">max</span>(<span class="number">1</span>) == <span class="number">1</span> )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">max</span>(<span class="number">1</span>) &gt; <span class="built_in">max</span>(<span class="number">2</span>)*<span class="number">2</span> )</span><br><span class="line">            newNewMatrix(ii,<span class="number">4</span>)=I(<span class="number">1</span>); </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">toc</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;运行时间: &#x27;</span>,num2str(toc)]);</span><br></pre></td></tr></table></figure><p>  对于星图7，识别41个星耗时573秒，判断结果全对。</p><p>  <img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20220109111249906.png" alt="image-20220109111249906"></p><p>  对于星图8，识别29个星耗时319秒，判断结果全对。</p><p>到此为止，我描述了我的 遍历每个星作为基准星的方法，对于星图124578没问题，对于星图36存在找不全的情况。</p><hr><p>回到使用基准星的方法来看，使用基准星确实能加速识别过程，例如识别20个星，只需要识别出一个星，再找到对应的矩阵即可。并且使用基准星可以避免找不到星的情况。</p><p><code>如何挑选这个基准星呢？</code> 文中也没给出较好的计算方法。</p><p><code>对于一个基准星来说或许不可靠，能否有一个初步方法筛选出相对可靠的若干基准星？</code> 发现还是一个基准星来的快一些</p><p><code>得到若干基准星后，得到其他星之后是否有一个验证过程？</code> 当选择用一个基准星的时候其实已经进行了一轮验证。</p><p>总结上面的实验可得，后续的改进优化需要先快速算出基准星，再由基准星得到其他星，最后进行验证。</p><hr><p>基准星一定是相对最可靠的，遍历还是需要遍历，但遍历深度不可太深。</p><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 来自B19102880053.pdf的角距矩阵匹配模型。</span></span><br><span class="line"><span class="comment">% 找到一个基准星，然后找到其他星</span></span><br><span class="line"><span class="comment">% main4.m</span></span><br><span class="line"></span><br><span class="line">tic</span><br><span class="line">clc;clear;close all;</span><br><span class="line">load(<span class="string">&quot;附件2  简易星表.mat&quot;</span>);</span><br><span class="line"></span><br><span class="line">star_data_xyz(:,<span class="number">1</span>) = <span class="built_in">cos</span>(star_data(:,<span class="number">2</span>) * <span class="built_in">pi</span> / <span class="number">180</span>) .* <span class="built_in">cos</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line">star_data_xyz(:,<span class="number">2</span>) = <span class="built_in">sin</span>(star_data(:,<span class="number">2</span>) * <span class="built_in">pi</span> / <span class="number">180</span>) .* <span class="built_in">cos</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line">star_data_xyz(:,<span class="number">3</span>) = <span class="built_in">sin</span>(star_data(:,<span class="number">3</span>) * <span class="built_in">pi</span> / <span class="number">180</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">angle</span> = <span class="built_in">real</span>(<span class="built_in">acosd</span>(star_data_xyz(:,<span class="number">1</span>:<span class="number">3</span>) * star_data_xyz(:,<span class="number">1</span>:<span class="number">3</span>).&#x27;));</span><br><span class="line">panduan = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">4908</span>);</span><br><span class="line"></span><br><span class="line">h2 = <span class="number">256</span>/(<span class="built_in">tand</span>(<span class="number">6</span>));</span><br><span class="line">A = xlsread(<span class="string">&#x27;D:\文献\starimage\npmcm2019b\npmcm2019-B\附件3  8幅星图相关数据\xingtu03.xls&#x27;</span>) - <span class="number">256</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">newMatrix= [<span class="built_in">repmat</span>(h2,<span class="built_in">size</span>(A,<span class="number">1</span>),<span class="number">1</span>),A];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(newMatrix,<span class="number">1</span>)</span><br><span class="line">    ll(<span class="built_in">j</span>,<span class="number">1</span>) = norm(newMatrix(<span class="built_in">j</span>,:));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">newNewMatrix = newMatrix./ll;</span><br><span class="line"></span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> delta=<span class="number">5</span>:<span class="number">15</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ii = <span class="number">1</span>:<span class="built_in">size</span>(newNewMatrix,<span class="number">1</span>)</span><br><span class="line">        panduan = <span class="built_in">zeros</span>(<span class="number">1</span>,<span class="number">4908</span>);</span><br><span class="line">        angle1 = <span class="built_in">real</span>(<span class="built_in">acosd</span>(newNewMatrix(ii,<span class="number">1</span>:<span class="number">3</span>) * newNewMatrix(:,<span class="number">1</span>:<span class="number">3</span>).&#x27;));</span><br><span class="line">        angle1(<span class="built_in">find</span>(angle1==<span class="number">0</span>))=[];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="number">4908</span></span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(newNewMatrix,<span class="number">1</span>)<span class="number">-1</span></span><br><span class="line">                <span class="keyword">if</span> (   <span class="built_in">length</span>(<span class="built_in">find</span>(<span class="built_in">abs</span>(<span class="built_in">angle</span>(:,<span class="built_in">j</span>)-angle1(<span class="built_in">i</span>))&lt; (<span class="number">2</span>^(-delta))))     )</span><br><span class="line">                    panduan(<span class="built_in">j</span>) = panduan(<span class="built_in">j</span>)+ <span class="number">1</span> ;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        [<span class="built_in">max</span>,I ] = maxk(panduan,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>( (<span class="built_in">max</span>(<span class="number">1</span>) == <span class="number">1</span>) || (<span class="built_in">max</span>(<span class="number">1</span>) == <span class="number">0</span>) )<span class="comment">%将不讨论这个星</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">max</span>(<span class="number">1</span>) &gt;= <span class="built_in">max</span>(<span class="number">2</span>)+<span class="number">2</span> )</span><br><span class="line">            newNewMatrix(ii,<span class="number">4</span>)=I(<span class="number">1</span>); </span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">if</span> (flag ==<span class="number">1</span> )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">angle1 = <span class="built_in">real</span>(<span class="built_in">acosd</span>(newNewMatrix(ii,<span class="number">1</span>:<span class="number">3</span>) * newNewMatrix(:,<span class="number">1</span>:<span class="number">3</span>).&#x27;));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(angle1,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    A = <span class="built_in">abs</span>(    <span class="built_in">angle</span>(:,newNewMatrix(ii,<span class="number">4</span>)) -angle1(<span class="built_in">i</span>)    );</span><br><span class="line">    [minvalue,I] = <span class="built_in">min</span>(A);</span><br><span class="line">    newNewMatrix(<span class="built_in">i</span>,<span class="number">5</span>) = I(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">toc</span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;运行时间: &#x27;</span>,num2str(toc)]);</span><br></pre></td></tr></table></figure><p>星图全遍历91s、找到一组基准星57s，找到一个基准星43s，最快设置delta 2.23s，</p><p>在此我将计算每个星图的指向参数。</p><hr><p>结果可以参考003.pdf，以下为main4.m的结果，左侧为基准星</p><p>星图1结果：2s多</p><p>0    1670<br>0    1477<br>1502    1502<br>0    1631<br>0    1603<br>0    1453<br>0    1432<br>0    1492<br>0    1488 与053.pdf不同<br>0    1648<br>0    1646<br>0    1566<br>0    1688<br>0    1655<br>0    1505</p><p>星图2结果：1s多</p><p>0    518<br>472    472<br>0    537<br>0    428<br>0    491<br>0    469<br>0    482<br>0    503<br>0    478<br>0    499<br>0    547<br>0    460<br>0    507<br>0    556<br>0    447<br>0    479</p><p>星图3结果：15s多</p><p>0    1864<br>0    1942<br>0    1825<br>0    1941<br>1943    1943 与053.pdf不同 可以确定不需要参考053答案。<br>0    1900<br>0    1722</p><p>星图4结果：4s 与003.pdf相同</p><p>0    3249<br>0    3346<br>0    3364<br>0    3275<br>0    3421<br>0    3319<br>3283    3283<br>0    3370<br>0    3265<br>0    3261<br>0    3321<br>0    3309</p><p>星图5：5.3s 与003.pdf相同</p><p>0    1230<br>0    1150<br>0    1017<br>1033    1033<br>0    1014<br>0    1223<br>0    1008<br>0    1208<br>0    1201</p><p>星图6： 11s</p><p>0    1670<br>0    1675 003.pdf为1477<br>0    1502<br>0    1631<br>0    1655  003.pdf为1603<br>0    1692<br>0    1492<br>0    1576  003.pdf为1488<br>1646    1646<br>0    1566<br>0    1655<br>0    1505</p><p>星图7:2.1s</p><p>1525    1525<br>0    1572<br>0    1443<br>0    1748<br>0    1780<br>0    1675<br>0    1720<br>0    1503<br>0    1634<br>0    1577<br>0    1757<br>0    1586<br>0    1536<br>0    1610<br>0    1681<br>0    1606<br>0    1670<br>0    1477<br>0    1790<br>0    1502<br>0    1631<br>0    1603<br>0    1415<br>0    1692<br>0    1453<br>0    1432<br>0    1492<br>0    1488<br>0    1648<br>0    1646<br>0    1566<br>0    1688<br>0    1655<br>0    1505<br>0    1373<br>0    1576<br>0    1545<br>0    1424<br>0    1375<br>0    1825<br>0    1401</p><p>星图8为1.6s：</p><p>1572    1572<br>0    1387<br>0    1675<br>0    1634<br>0    1586<br>0    1610<br>0    1354<br>0    1681<br>0    1606<br>0    1670<br>0    1390<br>0    1502<br>0    1631<br>0    1603<br>0    1692<br>0    1432<br>0    1488<br>0    1648<br>0    1646<br>0    1566<br>0    1688<br>0    1359<br>0    1505<br>0    1373<br>0    1576<br>0    1424<br>0    1375<br>0    1401<br>0    1385</p><hr><p>以main4.m的结果来看，仅星图6有差，后续再验证。</p>]]></content>
    
    
    <summary type="html">这是我研究生阶段的研究课题——星图识别的第一篇博客，过往的两个月，都幻想着高屋建瓴、一蹴而就，却步履维艰，决心潜心修行、脚踏实地，从最基础的传统方法做起。这篇博客主要是针对2019主要介绍的是第十六届(2019)全国研究生数学建模竞赛(NPMCM)试题B题：天文导航中的星图识别，其中最简单的角距矩阵匹配模型。</summary>
    
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/categories/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
    
    <category term="星图识别" scheme="https://tsuiwade.github.io/tags/%E6%98%9F%E5%9B%BE%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>《QT项目》靶轮控制</title>
    <link href="https://tsuiwade.github.io/2021/10/10/blog28-qtTargetWheelConsole/"/>
    <id>https://tsuiwade.github.io/2021/10/10/blog28-qtTargetWheelConsole/</id>
    <published>2021-10-10T22:16:35.000Z</published>
    <updated>2021-10-10T22:16:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="targetWheelConsole"><a href="#targetWheelConsole" class="headerlink" title="targetWheelConsole"></a>targetWheelConsole</h1><p>源代码： <a href="https://github.com/tsuiwade/targetWheelConsole">https://github.com/tsuiwade/targetWheelConsole</a></p><p>这是一个简单的靶轮控制软件，主要用到的是串口功能。实现了一些现代化的按钮立体显示效果、动态交互激活按钮状态、菜单栏选择串口。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211010180956933.png" alt="image-20211010180956933"></p><ol><li><p>现代化的按钮立体显示效果，借鉴自<a href="https://www.jianshu.com/p/952637f9958f">https://www.jianshu.com/p/952637f9958f</a></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211010181447085.png" alt="image-20211010181447085"></p><p>1:可设置文本,居中显示</p><p>2:可设置文本颜色</p><p>3:可设置外边框渐变颜色</p><p>4:可设置里边框渐变颜色</p><p>5:可设置背景色</p><p>6:可直接调用内置的设置 绿色/红色/黄色/黑色/蓝色 等公有槽函数</p><p>7:可设置是否在容器中可移动,当成一个对象使用</p><p>8:可设置是否显示矩形</p><p>9:可设置报警颜色+非报警颜色</p><p>10:可控制启动报警和停止报警,报警时闪烁</p></li></ol><p>   这段配置了按键的样式。</p>   <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; btn_list.size(); i++) &#123;</span><br><span class="line">    connect(btn_list[i], &amp;QPushButton::clicked, <span class="keyword">this</span>, [ = ](<span class="keyword">bool</span> checked) &#123;</span><br><span class="line">        <span class="keyword">if</span>(checked)</span><br><span class="line">            btn_list[i]-&gt;setLightRed();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            btn_list[i]-&gt;setLightGreen();</span><br><span class="line">    &#125;);</span><br><span class="line">    connect(btn_list[i],  &amp;QPushButton::pressed, <span class="keyword">this</span>, [ = ]() &#123;</span><br><span class="line">        btn_list[i]-&gt;setBgRadius(<span class="number">70</span>);</span><br><span class="line">        btn_list[i]-&gt;setOverlayRadius(<span class="number">70</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    connect(btn_list[i],  &amp;QPushButton::released, <span class="keyword">this</span>, [ = ]() &#123;</span><br><span class="line">        btn_list[i]-&gt;setBgRadius(<span class="number">80</span>);</span><br><span class="line">        btn_list[i]-&gt;setOverlayRadius(<span class="number">80</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">   </span><br><span class="line">    QGraphicsDropShadowEffect *shadow_effect = <span class="keyword">new</span> QGraphicsDropShadowEffect(<span class="keyword">this</span>);</span><br><span class="line">    shadow_effect-&gt;setOffset(<span class="number">1</span>, <span class="number">1</span>);             <span class="comment">//阴影的偏移量</span></span><br><span class="line">    shadow_effect-&gt;setColor(QColor(<span class="number">43</span>, <span class="number">43</span>, <span class="number">43</span>, <span class="number">150</span>)); <span class="comment">//阴影的颜色</span></span><br><span class="line">    shadow_effect-&gt;setBlurRadius(<span class="number">8</span>);             <span class="comment">// 阴影圆角的大小</span></span><br><span class="line">   </span><br><span class="line">    btn_list[i]-&gt;setLightGreen();</span><br><span class="line">    btn_list[i]-&gt;resize(<span class="number">120</span>, <span class="number">120</span>);</span><br><span class="line">    btn_list[i]-&gt;setText(QString::number(i + <span class="number">1</span>));</span><br><span class="line">    btn_list[i]-&gt;setGraphicsEffect(shadow_effect);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>动态交互激活按钮状态</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211010181553606.png" alt="image-20211010181553606"></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">connect(btn_list[i],  &amp;QPushButton::pressed, <span class="keyword">this</span>, [ = ]() &#123;</span><br><span class="line">    btn_list[i]-&gt;setBgRadius(<span class="number">70</span>);</span><br><span class="line">    btn_list[i]-&gt;setOverlayRadius(<span class="number">70</span>);</span><br><span class="line">&#125;);</span><br><span class="line">connect(btn_list[i],  &amp;QPushButton::released, <span class="keyword">this</span>, [ = ]() &#123;</span><br><span class="line">    btn_list[i]-&gt;setBgRadius(<span class="number">80</span>);</span><br><span class="line">    btn_list[i]-&gt;setOverlayRadius(<span class="number">80</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>这里我为了实现：点击主菜单，弹出可选串口，试过多个方案，最终发现挺简单的，由自己看着库函数实现了。在将要弹出子菜单之前，进行串口搜索，点击子菜单，进行配置打开串口。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">    connect(ui-&gt;menuSerial, &amp;QMenu::aboutToShow, <span class="keyword">this</span>, [ = ]() &#123;</span><br><span class="line">        <span class="keyword">if</span> (ui-&gt;menuSerial-&gt;title() == QString(<span class="string">&quot;选择串口&quot;</span>)) &#123;</span><br><span class="line">            ui-&gt;menuSerial-&gt;clear();</span><br><span class="line">            foreach(<span class="keyword">const</span> QSerialPortInfo &amp;info, QSerialPortInfo::availablePorts()) &#123;</span><br><span class="line">                ui-&gt;menuSerial-&gt;addAction(QIcon(<span class="string">&quot;:/target.png&quot;</span>), info.portName() + <span class="string">&quot;: &quot;</span> + info.description());</span><br><span class="line"></span><br><span class="line">                ui-&gt;menuSerial-&gt;addSeparator();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ui-&gt;menuSerial-&gt;clear();</span><br><span class="line">            ui-&gt;menuSerial-&gt;addAction(QString(<span class="string">&quot;关闭串口&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    connect(ui-&gt;menuSerial, &amp;QMenu::triggered, <span class="keyword">this</span>, [ = ](QAction * _action) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ui-&gt;menuSerial-&gt;title() == QString(<span class="string">&quot;选择串口&quot;</span>)) &#123;</span><br><span class="line">            qDebug() &lt;&lt; <span class="string">&quot;点击 选择串口&quot;</span>;</span><br><span class="line">            qDebug() &lt;&lt; _action-&gt;text();</span><br><span class="line">            QString spTxt =  _action-&gt;text();</span><br><span class="line"><span class="comment">//            ui-&gt;menuSerial-&gt;setTitle(spTxt) ;</span></span><br><span class="line">            QString spTxt1 = spTxt.section(<span class="string">&#x27;:&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            serial.setPortName(spTxt1);</span><br><span class="line">            serial.setBaudRate(<span class="number">9600</span>);</span><br><span class="line">            serial.setDataBits(QSerialPort::Data8);</span><br><span class="line">            serial.setParity(QSerialPort::NoParity);</span><br><span class="line">            serial.setStopBits(QSerialPort::OneStop);</span><br><span class="line">            serial.setFlowControl(QSerialPort::NoFlowControl);</span><br><span class="line">            <span class="keyword">if</span>(!serial.open(QIODevice::ReadWrite)) &#123;</span><br><span class="line">                QMessageBox::about(<span class="literal">NULL</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;无法打开串口！&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ui-&gt;menuSerial-&gt;setTitle(spTxt) ;</span><br><span class="line">            ui-&gt;menuSerial-&gt;clear();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            qDebug() &lt;&lt; <span class="string">&quot;点击 else&quot;</span>;</span><br><span class="line">            serial.close();</span><br><span class="line">            ui-&gt;menuSerial-&gt;clear();</span><br><span class="line">            ui-&gt;menuSerial-&gt;setTitle(QString(<span class="string">&quot;选择串口&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">该平移台控制系统项目是我在nairc的第一个项目，2021.08.26接手，2021.10.10完成。主要涉及到一些现代化的按钮立体显示效果、动态交互激活按钮状态、菜单栏选择串口。</summary>
    
    
    
    <category term="qt" scheme="https://tsuiwade.github.io/categories/qt/"/>
    
    
    <category term="qt" scheme="https://tsuiwade.github.io/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>树莓派qt</title>
    <link href="https://tsuiwade.github.io/2021/10/07/blog29-raspberrypiQt/"/>
    <id>https://tsuiwade.github.io/2021/10/07/blog29-raspberrypiQt/</id>
    <published>2021-10-07T19:20:29.000Z</published>
    <updated>2021-10-07T19:20:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>第二次装树莓派系统。</p><p>google搜索raspberrypi os，下载imager和os系统，准备一个U盘或者sd卡，然后进行烧写。</p><p>默认安装完，由于我有买固态，想将U盘启动改为ssd启动，从而进行转移。</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211007192857479.png" alt="image-20211007192857479"></p><p>接下来是换源：直接看官方文档，我的确实是debian10 buster版本系统。</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/</a></p><p>接下来是准备远程环境。下载putty，开启ssh和vnc，最后远程桌面连接即可。<a href="https://tsuiwade.tk/2021/03/13/blog18_RaspberryPi/">https://tsuiwade.tk/2021/03/13/blog18_RaspberryPi/</a></p><p>再接下来是安装qt。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第二次装树莓派系统。&lt;/p&gt;
&lt;p&gt;google搜索raspberrypi os，下载imager和os系统，准备一个U盘或者sd卡，然后进行烧写。&lt;/p&gt;
&lt;p&gt;默认安装完，由于我有买固态，想将U盘启动改为ssd启动，从而进行转移。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;ht</summary>
      
    
    
    
    <category term="qt" scheme="https://tsuiwade.github.io/categories/qt/"/>
    
    <category term="raspberrypi" scheme="https://tsuiwade.github.io/categories/qt/raspberrypi/"/>
    
    
    <category term="raspberrypi" scheme="https://tsuiwade.github.io/tags/raspberrypi/"/>
    
    <category term="qt" scheme="https://tsuiwade.github.io/tags/qt/"/>
    
  </entry>
  
  <entry>
    <title>《QT项目》平移台控制</title>
    <link href="https://tsuiwade.github.io/2021/10/06/blog27-qtSrialPort/"/>
    <id>https://tsuiwade.github.io/2021/10/06/blog27-qtSrialPort/</id>
    <published>2021-10-06T20:49:36.000Z</published>
    <updated>2021-10-06T20:49:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要涉及到上位机的布局、样式的调整、材质的阴影美化、完成标识的弹框动画、点击QLineEdit的虚拟键盘弹出。</p><p>源代码：<a href="https://github.com/tsuiwade/translationTableControlSystem210909">https://github.com/tsuiwade/translationTableControlSystem210909</a></p><p>这是一个简单的平移台控制软件，主要用到的是qt的串口功能。</p><ol><li><a href="https://blog.csdn.net/Mark_md/article/details/109048127">https://blog.csdn.net/Mark_md/article/details/109048127</a></li></ol><p>重写ComboBox下拉框的鼠标点击事件，实现点击下拉框扫描可用串口</p><ol><li><p>修改项目文件：</p><p>把新的 timeshow 文件夹重命名为 timeshowfixed，并把 timeshowfixed 里面 timeshow.pro.user 用户文件删掉。<br>进入 timeshowfixed 文件夹，把 timeshow.pro 重命名为 timeshowfixed.pro。<br>③用记事本打开 timeshowfixed.pro，修改里面的 TARGET 一行，变成下面这句：<br>TARGET = timeshowfixed<br>进行这样三步操作后，我们本章第一个例子的项目 timeshowfixed 就建立好了。</p></li><li><p>初始布局：</p><p><img src="https://user-images.githubusercontent.com/78476272/132862407-86f434ff-2748-4944-a236-213f7f98c96d.png" alt="image"></p></li></ol><p><img src="https://user-images.githubusercontent.com/78476272/132862466-c9d9b781-1851-478a-b0ec-54154e6004ab.png" alt="image"></p><ol><li>经过几天的优化。总体样式如下：</li></ol><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211006193232544.png" alt="image-20211006193232544"></p><p>项目结构如下：</p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211006193838493.png" alt="image-20211006193838493"></p><ul><li>先定分辨率1024<em>768，又布局了几天。布局采用Card的想法，分组放置，故研究阴影的放置，但出现groupBox<strong>与子组件的样式和阴影不兼容问题</strong>，查了好几天没找到是什么问题，最终偶然间下载qt5.14时，发现是<em>*5.9的bug</em></em>。</li></ul><ol><li><p>除了布局的设计，还有样式和阴影的设计。在qss文件和窗口文件中设置。</p><p>加阴影的代码已经经过优化，优化前写的较重复且乱，有个问题一个阴影对象只可以幅值给一个对象，因此…</p></li></ol><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">QList&lt;QWidget*&gt; qList = &#123;ui-&gt;horizontalSlider, ui-&gt;comboBox_portName,  ui-&gt;centralWidget&#125;; <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">   QList&lt;QPushButton*&gt; btnList = ui-&gt;centralWidget-&gt;findChildren&lt;QPushButton*&gt;();</span><br><span class="line">   QList&lt;QLineEdit*&gt; lineList = ui-&gt;centralWidget-&gt;findChildren&lt;QLineEdit*&gt;();</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">auto</span> i : btnList)  qList.append(i);</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">auto</span> i : lineList)  qList.append(i);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">auto</span> i : qList) &#123;</span><br><span class="line">       QGraphicsDropShadowEffect * shadow_effect = <span class="keyword">new</span> QGraphicsDropShadowEffect(<span class="keyword">this</span>);</span><br><span class="line">       shadow_effect-&gt;setOffset(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">       shadow_effect-&gt;setColor(QColor(<span class="number">55</span>, <span class="number">55</span>, <span class="number">55</span>));</span><br><span class="line">       shadow_effect-&gt;setBlurRadius(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">       i-&gt;setGraphicsEffect(shadow_effect);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">QPushButton</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">253</span>,<span class="number">253</span>,<span class="number">253</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">border-width</span>:<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">50</span>);</span><br><span class="line">    <span class="attribute">border-style</span>:outset;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">qlineargradient</span>(x1: <span class="number">0</span>, y1: <span class="number">0</span>, x2: <span class="number">0</span>, y2: <span class="number">1</span>,</span><br><span class="line">                                      stop: <span class="number">0</span> #f6f7fa, stop: <span class="number">1</span> #dadbde);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">QPushButton</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">224</span>,<span class="number">238</span>,<span class="number">249</span>);</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">11</span>,<span class="number">137</span>,<span class="number">234</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">QPushButton</span><span class="selector-pseudo">:pressed</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">qlineargradient</span>(x1: <span class="number">0</span>, y1: <span class="number">0</span>, x2: <span class="number">0</span>, y2: <span class="number">1</span>,</span><br><span class="line">                                      stop: <span class="number">0</span> #dadbde, stop: <span class="number">1</span> #f6f7fa);</span><br><span class="line">    <span class="attribute">padding-left</span>:<span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>:<span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>:inset;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">QSlider</span><span class="selector-pseudo">::horizontal</span>&#123;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">QSlider</span><span class="selector-pseudo">::groove</span><span class="selector-pseudo">:horizontal</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="string">&quot;#EC7064&quot;</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">QSlider</span><span class="selector-pseudo">::add-page</span><span class="selector-pseudo">:horizontal</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="string">&quot;#EC7064&quot;</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">QSlider</span><span class="selector-pseudo">::sub-page</span><span class="selector-pseudo">:horizontal</span>&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="string">&quot;#2EE1C1&quot;</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">QSlider</span><span class="selector-pseudo">::handle</span><span class="selector-pseudo">:horizontal</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:-<span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">qradialgradient</span>(spread:pad,cx:<span class="number">0.5</span>,cy:<span class="number">0.5</span>,radius:<span class="number">0.5</span>,fx:<span class="number">0.5</span>,fy:<span class="number">0.5</span>,stop:<span class="number">0.6</span> <span class="string">&quot;#FFFFFF&quot;</span>,stop:<span class="number">0.8</span> <span class="string">&quot;#34495E&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">QGroupBox</span><span class="selector-id">#groupBox_1</span>, <span class="selector-id">#groupBox_2</span>, <span class="selector-id">#groupBox_3</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">qlineargradient</span>(x1: <span class="number">0</span>, y1: <span class="number">0</span>, x2: <span class="number">0</span>, y2: <span class="number">1</span>,</span><br><span class="line">    stop: <span class="number">0</span> #f6f7fa, stop: <span class="number">1</span> #dadbde);</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">border-width</span>:<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">50</span>);</span><br><span class="line">    <span class="attribute">border-style</span>:outset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>样式包括圆角、偏移、渐变及渐变的颠倒、滑动条的前后样式和滑块样式。</p><p>还有一个小tip是加上icon会生动许多。</p><ol><li>还有完成标志的动画。</li></ol><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211006194645681.png" alt="image-20211006194645681"></p><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211006194751940.png" alt=""></p><p>截图看不出动画的效果，是有关位置和透明度的动画。</p><p>主要是设计了一个新对话框窗体，以非模态的方式出现3秒后自动消失。对话框淡入淡出的动画代码如下：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">    <span class="comment">//获取主屏幕分辨率</span></span><br><span class="line">    QRect screenRect = QGuiApplication::primaryScreen()-&gt;geometry();</span><br><span class="line"></span><br><span class="line">    QPropertyAnimation *appearPositionAnimation = <span class="keyword">new</span> QPropertyAnimation(<span class="keyword">this</span>, <span class="string">&quot;geometry&quot;</span>);</span><br><span class="line">    appearPositionAnimation-&gt;setDuration(<span class="number">1000</span>);</span><br><span class="line">    appearPositionAnimation-&gt;setStartValue(QRect((screenRect.width() / <span class="number">2</span>) - <span class="number">80</span>, screenRect.height() / <span class="number">2</span> - <span class="number">40</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    appearPositionAnimation-&gt;setEndValue(QRect(screenRect.width() / <span class="number">2</span> - <span class="number">80</span>, screenRect.height() / <span class="number">2</span>, <span class="number">160</span>, <span class="number">80</span>));</span><br><span class="line">    appearPositionAnimation-&gt;setEasingCurve(QEasingCurve::InOutElastic);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    QPropertyAnimation *vanishPostionAnimation = new QPropertyAnimation(this, &quot;geometry&quot;);</span></span><br><span class="line"><span class="comment">//    vanishPostionAnimation-&gt;setDuration(1000);</span></span><br><span class="line"><span class="comment">//    vanishPostionAnimation-&gt;setStartValue(QRect(1024 / 2 - 80, 768 / 2, 160, 80));</span></span><br><span class="line"><span class="comment">//    vanishPostionAnimation-&gt;setEndValue(QRect(1024 / 2 - 80, 768 / 2 - 40, 0, 0));</span></span><br><span class="line"><span class="comment">//    vanishPostionAnimation-&gt;setEasingCurve(QEasingCurve::InBounce);</span></span><br><span class="line"></span><br><span class="line">    QSequentialAnimationGroup *positionAnimationGroup = <span class="keyword">new</span> QSequentialAnimationGroup(<span class="keyword">this</span>);</span><br><span class="line">    positionAnimationGroup-&gt;addAnimation(appearPositionAnimation);</span><br><span class="line">    positionAnimationGroup-&gt;addPause(<span class="number">2000</span>);</span><br><span class="line"><span class="comment">//    pScaleGroup-&gt;addAnimation(vanishPostionAnimation);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;setWindowOpacity(<span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line">    QPropertyAnimation* appearOpacityAnimation = <span class="keyword">new</span> QPropertyAnimation(<span class="keyword">this</span>, <span class="string">&quot;windowOpacity&quot;</span>);</span><br><span class="line">    appearOpacityAnimation-&gt;setDuration(<span class="number">1000</span>); <span class="comment">// will take 5 seconds</span></span><br><span class="line">    appearOpacityAnimation-&gt;setEasingCurve(QEasingCurve::OutBack); <span class="comment">// just demonstration, there are a lot of curves to choose</span></span><br><span class="line">    appearOpacityAnimation-&gt;setStartValue(<span class="number">0.0</span>);</span><br><span class="line">    appearOpacityAnimation-&gt;setEndValue(<span class="number">1.0</span>);</span><br><span class="line"></span><br><span class="line">    QPropertyAnimation* vanishOpacityAnimation = <span class="keyword">new</span> QPropertyAnimation(<span class="keyword">this</span>, <span class="string">&quot;windowOpacity&quot;</span>);</span><br><span class="line">    vanishOpacityAnimation-&gt;setDuration(<span class="number">1000</span>); <span class="comment">// will take 5 seconds</span></span><br><span class="line">    vanishOpacityAnimation-&gt;setEasingCurve(QEasingCurve::Linear); <span class="comment">// just demonstration, there are a lot of curves to choose</span></span><br><span class="line">    vanishOpacityAnimation-&gt;setStartValue(<span class="number">1.0</span>);</span><br><span class="line">    vanishOpacityAnimation-&gt;setEndValue(<span class="number">0.0</span>);</span><br><span class="line"></span><br><span class="line">    QSequentialAnimationGroup *opacityAnimationGroup = <span class="keyword">new</span> QSequentialAnimationGroup(<span class="keyword">this</span>);</span><br><span class="line">    opacityAnimationGroup-&gt;addAnimation(appearOpacityAnimation);</span><br><span class="line">    opacityAnimationGroup-&gt;addPause(<span class="number">2000</span>);</span><br><span class="line">    opacityAnimationGroup-&gt;addAnimation(vanishOpacityAnimation);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    anim-&gt;start(QAbstractAnimation::DeleteWhenStopped);</span></span><br><span class="line"></span><br><span class="line">    m_group = <span class="keyword">new</span> QParallelAnimationGroup(<span class="keyword">this</span>);</span><br><span class="line">    m_group-&gt;addAnimation(positionAnimationGroup);</span><br><span class="line">    m_group-&gt;addAnimation(opacityAnimationGroup);</span><br><span class="line">    m_group-&gt;setDirection(QAbstractAnimation::Forward);</span><br><span class="line">    m_group-&gt;setLoopCount(<span class="number">1</span>);</span><br><span class="line">    m_group-&gt;start();</span><br><span class="line">    connect(<span class="keyword">this</span>-&gt;m_group, SIGNAL(finished()), m_group, SLOT(deleteLater()), Qt::UniqueConnection);</span><br><span class="line">    connect(<span class="keyword">this</span>-&gt;m_group, SIGNAL(finished()), <span class="keyword">this</span>, SLOT(close()));</span><br></pre></td></tr></table></figure><p>其中最后几句槽函数是花了一些时间找来的，当动画消失后，对话框窗体关闭。</p><ol><li>点击QLineEdit，弹出虚拟数字键盘，代码也是网上找的修改了一下样式。</li></ol><p><img src="https://images-1312692717.cos.ap-nanjing.myqcloud.com/img/image-20211006195444106.png" alt="image-20211006195444106"></p><p>QT数字软键盘，包括QLineEdit弹出代码和键盘样式来自：<a href="https://download.csdn.net/download/zhuifengcong/8833143">https://download.csdn.net/download/zhuifengcong/8833143</a></p><p>最后采用遮罩蒙版，当某个窗体出现，背景变黑。代码来自：<a href="https://blog.csdn.net/tax10240809163com/article/details/108086890">https://blog.csdn.net/tax10240809163com/article/details/108086890</a></p>]]></content>
    
    
    <summary type="html">该平移台控制系统项目是我在nairc的第二个项目，2021.09.09接手，2021.10.07完成。主要涉及到上位机的布局、样式的调整、材质的阴影美化、完成标识的弹框动画、点击QLineEdit的虚拟键盘弹出。</summary>
    
    
    
    <category term="qt" scheme="https://tsuiwade.github.io/categories/qt/"/>
    
    
    <category term="qt" scheme="https://tsuiwade.github.io/tags/qt/"/>
    
  </entry>
  
</feed>
