<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【第12篇博客】PicGo配合Typora的便捷贴图</title>
      <link href="2021/03/06/blog12-PicGo/"/>
      <url>2021/03/06/blog12-PicGo/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第11篇博客】博客操作优化2——使用bat优化操作及bat语法学习记录</title>
      <link href="2021/03/06/blog11-BatLearning/"/>
      <url>2021/03/06/blog11-BatLearning/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客优化 </tag>
            
            <tag> bat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第10篇博客】博客操作优化1——使用Typora编写markdown博客</title>
      <link href="2021/03/06/blog10-Typora/"/>
      <url>2021/03/06/blog10-Typora/</url>
      
        <content type="html"><![CDATA[<h2 id="一个markdown文本编辑器"><a href="#一个markdown文本编辑器" class="headerlink" title="一个markdown文本编辑器"></a>一个markdown文本编辑器</h2><p>「它的<strong>功能之强大、设计之冷静、体验之美妙、理念之先进</strong>，我认为值得所有笔记应用厂商学习。」</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/beta.gif" alt="beta"></p><p><a href="https://www.typora.io/">Typora</a> 是一款<strong>支持实时预览的 Markdown 文本编辑器</strong>。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是<strong>完全免费</strong>的。</p><p>由于目前还没有一个权威机构对 Markdown 的语法进行规范，各应用厂商制作时遵循的 Markdown 语法也是不尽相同的。其中比较受到认可的是 <a href="https://github.github.com/gfm/">GFM 标准</a>，它是由著名代码托管网站 <a href="https://github.com/">GitHub</a> 所制定的。Typora 主要使用的也是 GFM 标准。同时，你还可以在 <code>文件 - 偏好设置 - Markdown 语法偏好 - 严格模式</code> 中将标准设置为「更严格地遵循 GFM 标准」。具体内容你可以在官方的 <a href="http://support.typora.io/Strict-Mode/">这篇文档</a> 中查看。</p><h2 id="适用于自己的Typora配置"><a href="#适用于自己的Typora配置" class="headerlink" title="适用于自己的Typora配置"></a>适用于自己的Typora配置</h2><ol><li><p><strong>快捷键</strong></p><p>打开自己电脑根目录下的<code>C:\Users\tsui\AppData\Roaming\Typora\conf</code>文件夹（读者自行修改该目录），如下图所示：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306195316546.png" alt="image-20210306195316546"></p><p>打开<code>conf.user.json</code>文件，主要修改画框处的代码即可，如下图所示：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306195441753.png" alt="image-20210306195441753"></p><p>至于代码中的<code>Always on Top</code>和我代码中的<code>Delete Line/Sentence</code>这些参数，该如何找呢？打开偏好设置，语言设置为英文，再从工具栏中找到对应的操作，例如我要设置删除改行（vscode中的Ctrl+D，很是方便），如下图所示：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/8EFBAA12EABA3092AE1EB1CE061298DD.png" alt="img"></p><p>找到对应的参数名<code>Delete Line/Sentence</code>，然后再设置具体的快捷键即可。</p><p>还可以参考官网的快捷键帮助<a href="https://support.typora.io/Shortcut-Keys/">https://support.typora.io/Shortcut-Keys/</a> 。</p></li><li><p><strong>侧边栏</strong></p><p><code>侧边栏</code>保持显示侧边栏，主要显示文件数和大纲，可以帮助开发。快捷键为Ctrl+Shift+L。</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306194555367.png" alt=""></p></li><li><p><strong>启动选项</strong></p><p><code>启动选项</code>选择重新打开选择重新打开上次使用的文件和目录，这样直接打开Typora软件即可找到上次编写的位置，同vscode一样，无需一步步打开文件，很是方便。</p><p>在偏好设置里设置：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306194138225.png" alt="image-20210306194138225"></p></li></ol><h2 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h2><p>Typora 的图片插入功能是广受好评的。要知道，Markdown 原生不太注重图片插入的功能，但你可以在 Typora 中：</p><ul><li>直接使用 <code>右键 - 复制 Ctrl + V</code> 将网络图片、剪贴板图片复制到文档中</li><li>拖动本地图片到文档中</li></ul><p>Typora 会自动帮你插入符合 Markdown 语法的图片语句，并给它加上标题。如：</p><p><code>![img](https://cdn.imzjw.cn/img/72)</code></p><p>现在已经支持粘贴图片自动上传至图床了，使用PicGo，具体参见我的另一篇博客。</p><h2 id="打字机模式和专注模式"><a href="#打字机模式和专注模式" class="headerlink" title="打字机模式和专注模式"></a>打字机模式和专注模式</h2><p><strong>「打字机模式」</strong>使得你所编辑的那一行永远处于屏幕正中。</p><p><strong>「专注模式」</strong>使你正在编辑的那一行保留颜色，而其他行的字体呈灰色。</p><p>你可以在 <code>视图 - 专注模式 / 打字机模式</code> 中勾选使用这两个模式。</p><h2 id="实时预览"><a href="#实时预览" class="headerlink" title="实时预览"></a>实时预览</h2><p>我想很果断地下这个结论：到现在还不支持编辑界面实时预览的 Markdown 编辑器基本可以退出市场了。Typora 在这一方面显然已经领先了一大步——他们连 Markdown 语法的标记都在实时预览中消去了。当你离开正在编辑的有格式的文本段后，Typora 会自动隐藏 Markdown 标记，只留下<strong>「所见即所得」</strong>的美妙。他们把这称为 <em>Hybrid View。</em></p><p>为了防止一些程序 bug 的发生（虽然在我使用下来感到是很少的）导致格式问题无法修改，Typora 保留了一个<strong>「源代码模式」</strong>。你可以通过 <code>视图 - 源代码模式</code> 或左下角的 <code>&lt;/&gt;</code> 按钮进入。</p><h2 id="大纲-文件侧边栏配置"><a href="#大纲-文件侧边栏配置" class="headerlink" title="大纲 / 文件侧边栏配置"></a>大纲 / 文件侧边栏配置</h2><p>Typora 会根据你 Markdown 标记的 H1、H2、H3…… 各级标题为你呈现一个大纲。</p><p>你也可以选择查看文件夹中的文件，但由于目前 Typora 只支持查看 md 文件。     </p><h2 id="空格与换行"><a href="#空格与换行" class="headerlink" title="空格与换行"></a>空格与换行</h2><p>Typora 在空格与换行部分主要是使用 <a href="http://www.commonmark.cn/w/">CommonMark</a> 作为标注规范。与前文提到的 GFM 一样，CommonMark 也是比较流行的 Markdown 语言规范（解析器）之一。 </p><ul><li><strong>空格：</strong>在输入连续的空格后，Typora 会在编辑器视图里为你保留这些空格，但当你打印或导出时，这些空格会被省略成一个。<br>你可以在源代码模式下，为每个空格前加一个 <code>\</code> 转义符，或者直接使用 HTML 风格的 <code>&amp;nbps;</code> 来保持连续的空格。</li><li><strong>软换行：</strong>需要说明的是，在 Markdown 语法中，换行（line break）与换段是不同的。且换行分为软换行和硬换行。在 Typora 中，你可以通过 <code>Shift + Enter</code> 完成一次软换行。软换行只在编辑界面可见，当文档被导出时换行会被省略。</li><li><strong>硬换行：</strong>你可以通过 <code>空格 + 空格 + Shift + Enter</code> 完成一次硬换行，而这也是许多 Markdown 编辑器所原生支持的。硬换行在文档被导出时将被保留，且没有换段的段后距。</li><li><strong>换段：</strong>你可以通过 <code>Enter</code> 完成一次换段。Typora 会自动帮你完成两次 <code>Shift + Enter</code> 的软换行，从而完成一次换段。这也意味着在 Markdown 语法下，换段是通过在段与段之间加入空行来实现的。 </li></ul><h2 id="emoji表情"><a href="#emoji表情" class="headerlink" title="emoji表情"></a>emoji表情</h2><p>在 Typora 中，你可以用 <code>:emoji:</code> 的形式来打出 emoji，软件会自动给出图形的提示，还是比较好用的。:sunny:、:cow:、:grey_question:。</p><p>emoji编码合集可参考<a href="https://blog.csdn.net/weixin_42395140/article/details/111642339">https://blog.csdn.net/weixin_42395140/article/details/111642339</a> 。</p><h2 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h2><p>Typora还提供了如同<strong>word</strong>快捷键的操作包括加粗、斜体等。</p><p>在vscode中写markdown的表格一直是一件比较头疼的事情。好在 Typora 为我们提供了图形界面的插入表格的功能，你只需要在行内 <code>鼠标右键 - 插入 - 表格</code> ，并输入行数和列数，Typora 就会自动生成一张样式不错的空表格。</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306211350709.png" alt="image-20210306211350709"></p><h2 id="hexo-new-post-更换模板"><a href="#hexo-new-post-更换模板" class="headerlink" title="hexo new post 更换模板"></a>hexo new post 更换模板</h2><p>除了上述介绍来的Typora使用之外，本文还将介绍如何优化 每次新建博客之后填写博客文章摘要信息的操作。</p><p>每当我们hexo n blog的时候，在未设置模板的情况下，如何才能出现以下完整的信息呢？</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">title: 【第10篇博客】博客操作优化1——使用Typora编写markdown博客</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> Typora</span><br><span class="line"><span class="bullet">  -</span> markdown</span><br><span class="line"><span class="bullet">  -</span> 博客优化</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> 博客搭建记录</span><br><span class="line">date: 2021-03-06 12:06:31</span><br><span class="line">updated: 2021-03-06 12:06:31</span><br><span class="line">description: 时至今日，可以优化一下博客的操作，本文将介绍使用Typora来写markdown语言，最为方便的在于图片的粘贴。以及自己的优化操作中的Typora偏好设置。</span><br><span class="line">cover: &quot;https://cdn.imzjw.cn/img/73&quot;</span><br></pre></td></tr></table></figure><p>通过查看文档，找到模板文件的路径：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306214807156.png" alt="image-20210306214807156"></p><p>打开post填写以下信息，保存即可。</p><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">updated: &#123;&#123; date &#125;&#125;</span><br><span class="line">description:  </span><br><span class="line">cover: </span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">  -</span> </span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">  -</span> </span><br></pre></td></tr></table></figure><p>将来hexo n blog的时候，将会自动存在这些基础信息。</p><hr><p>本文参考：<a href="https://sspai.com/post/54912">https://sspai.com/post/54912</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> markdown </tag>
            
            <tag> 博客优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第9篇博客】标签外挂的配置学习记录</title>
      <link href="2021/02/07/blog9-TagPlugins/"/>
      <url>2021/02/07/blog9-TagPlugins/</url>
      
        <content type="html"><![CDATA[<p>标签外挂主要使用了<a href="https://github.com/volantis-x/hexo-theme-volantis">Volantis</a>的标签样式。引入[tag].js，并针对butterfly主题修改了相应的[tag].styl。</p><p>标签外挂是Hexo独有的功能，并不是标准的Markdown格式。以下的写法，只适用于butterfly主题，用在其他主题不会有效果。</p><h2 id="配置教程"><a href="#配置教程" class="headerlink" title="配置教程"></a>配置教程</h2><p>主要参考 <a href="https://akilar.top/posts/615e2dec/">https://akilar.top/posts/615e2dec/</a><br>点击下方github链接，并下载。</p><p><a style="margin-inline:5px"target="_blank" href="https://github.com/Akilarlxh/Tag_Plugins"><img src="https://github-readme-stats.vercel.app/api/pin/?username=Akilarlxh&amp;repo=Tag_Plugins&amp;theme=vue&amp;show_owner=true" ></p><ol><li>将下载的Tag_Plugins.zip解压得到butterfly文件夹。</li><li>将butterfly文件夹复制到[Blogroot]\themes\目录下，覆盖当前的butterfly主题文件夹，提示重复则选择替换。(如果担心覆盖自己的其他魔改内容，可以根据静态文件内容自主比对修改)</li><li>修改[Blogroot]_config.butterfly.yml的inject配置项，添加CDN依赖项。由于issues写入timeline和site-card标签要用到jquery，请务必根据注释指示的版本决定是否添加。</li></ol><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/l-lin/font-awesome-animation/dist/font-awesome-animation.min.css&quot;</span>  <span class="string">media=&quot;defer&quot;</span> <span class="string">onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span>  <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment"># 自butterfly_v3.4.0+开始，主题基本实现去jquery化，需要自己添加引用，请读者根据版本自行决定是否添加这行引用。</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">defer</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/npm/hexo-theme-volantis@latest/source/js/issues.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="comment">#数据集合标签issues的依赖</span></span><br></pre></td></tr></table></figure><p>如果遇到问题，请hexo <span class='p red'>clean、</span> <span class='p green'>g、</span> <span class='p blue'>s。</span></p><p>接下来将介绍外挂标签使用语法。</p><h2 id="行内文本样式"><a href="#行内文本样式" class="headerlink" title="行内文本样式"></a>行内文本样式</h2><div class="tabs" id="1"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#1-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#1-2">样式预览</button></li><li class="tab"><button type="button" data-href="#1-3">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="1-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="1-2"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-3"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><div class="tabs" id="1"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#1-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#1-2">样式预览</button></li><li class="tab"><button type="button" data-href="#1-3">示例源码</button></li><li class="tab"><button type="button" data-href="#1-4">配置参数</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="1-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="1-2"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-3"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-4"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p blue'>blue</span>,<span class='p cyan'>cyan</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h2><div class="tabs" id="1"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#1-1">标签语法</button></li><li class="tab active"><button type="button" data-href="#1-2">样式预览</button></li><li class="tab"><button type="button" data-href="#1-3">示例源码</button></li><li class="tab"><button type="button" data-href="#1-4">配置参数</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="1-1"><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="1-2"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-3"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-4"><ol><li>字体: logo, code</li><li>颜色: <span class='p red'>red</span>,<span class='p yellow'>yellow</span>,<span class='p green'>green</span>,<span class='p blue'>blue</span>,<span class='p cyan'>cyan</span>,<span class='p gray'>gray</span></li><li>大小: small, h4, h3, h2, h1, large, huge, ultra</li><li>对齐方向: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h2><p>最新版butterfly标签支持引用fontawesome V5图标，效果上已经优于volantis的note标签。故不再额外引入volantis的note样式。</p><div class="tabs" id="1"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#1-1">通用配置</button></li><li class="tab"><button type="button" data-href="#1-2">语法格式</button></li><li class="tab"><button type="button" data-href="#1-3">配置参数</button></li><li class="tab active"><button type="button" data-href="#1-4">样式预览</button></li><li class="tab"><button type="button" data-href="#1-5">示例源码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="1-1"><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">simple</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">border_radius:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-2"><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>或者<br><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-3"><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">用法</th></tr></thead><tbody><tr><td style="text-align:left">class</td><td style="text-align:left">【可选】标识，不同的标识有不同的配色 &lt;/br&gt;（ default / primary / success / info / warning / danger ）</td></tr><tr><td style="text-align:left">no-icon</td><td style="text-align:left">【可选】不显示 icon</td></tr><tr><td style="text-align:left">style</td><td style="text-align:left">【可选】可以覆盖配置中的 style &lt;/br&gt;（simple/modern/flat/disabled）</td></tr></tbody></table></div><p>或者<br>参数| 用法<br>:-|:-<br>class | 【可选】标识，不同的标识有不同的配色 &lt;/br&gt;（ default / primary / success / info / warning / danger ）<br>no-icon | 【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )<br>style | 【可选】可以覆盖配置中的 style &lt;/br&gt;（simple/modern/flat/disabled）</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="1-4"><ol><li><p><code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div></li><li><p><code>modern</code>样式</p><div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1-5"><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>本文参考：<br><a href="https://akilar.top/posts/615e2dec/">https://akilar.top/posts/615e2dec/</a><br><a href="https://github.com/Akilarlxh/Tag_Plugins">https://github.com/Akilarlxh/Tag_Plugins</a></p><p><img src="https://cdn.sspai.com/2019/05/24/1de13eae43785e27bbbcd631931fd161.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 标签外挂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第8篇博客】GitHub Badge的配置学习记录</title>
      <link href="2021/02/04/blog8-ShieldIoBadge/"/>
      <url>2021/02/04/blog8-ShieldIoBadge/</url>
      
        <content type="html"><![CDATA[<p>效果如下：<br><img src="https://cdn.imzjw.cn/img/62" alt="p62"><br>大家平时在逛GitHub，Gitee，各大论坛博客的时候，都有类似很好看很漂亮的徽章，主要通过 <a href="https://shields.io/">shields.io</a> 在线生成。</p><p><img src="https://cdn.imzjw.cn/img/63" alt="p63"></p><p>其中，找到Your BADGE 专属定制徽章</p><ul><li>label：标签，徽标左侧内容</li><li>message：信息，徽标右侧内容</li><li>color：色值，支持支持十六进制、rgb、rgba、hsl、hsla 和 css 命名颜色。十六进制记得删除前面的 # 号</li></ul><p>输入相关信息后，点击 make badge 即可得到徽标的 URL。可以用 img 标签引用</p><p>在主题配置文件中的<code>footer</code>:  <code>copyright:</code>设置为false、<code>footer</code>:  <code>custom_text:</code>中填写<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://hexo.io/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Frame-Hexo-blue?style=flat&amp;logo=hexo&quot;</span> <span class="attr">title</span>=<span class="string">&quot;博客框架为 Hexo&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;HEXO&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://butterfly.js.org/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Theme-Butterfly-6513df?style=flat&amp;logo=bitdefender&quot;</span> <span class="attr">title</span>=<span class="string">&quot;主题采用 Butterfly&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Butterfly&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.jsdelivr.com/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/CDN-jsDelivr-orange?style=flat&amp;logo=jsDelivr&quot;</span> <span class="attr">title</span>=<span class="string">&quot;本站使用 Jsdelivr 为静态资源提供CDN加速&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Jsdelivr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://github.com/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Source-Github-d021d6?style=flat&amp;logo=GitHub&quot;</span> <span class="attr">title</span>=<span class="string">&quot;本站项目由 GitHub 托管&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;GitHub&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-inline:5px&quot;</span><span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span><span class="attr">href</span>=<span class="string">&quot;http://creativecommons.org/licenses/by-nc-sa/4.0/&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://img.shields.io/badge/Copyright-BY--NC--SA%204.0-d42328?style=flat&amp;logo=Claris&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;img&quot;</span> <span class="attr">title</span>=<span class="string">&quot;本站采用知识共享署名-非商业性使用-相同方式共享4.0国际许可协议进行许可&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br>可以发现，简单定制小牌子非常方便，最最基础的语法规则就是：<br><code>https://img.shields.io/badge/&#123;左半部分标签&#125;-&#123;右半部分标签&#125;-&#123;右半部分颜色&#125;</code><br>还可以贴在markdown文档中。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shield.io </tag>
            
            <tag> GitHub Badge </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第7篇博客】配置jsDelivr提供静态资源CDN加速学习记录</title>
      <link href="2021/02/01/blog7-JdDelivrUse/"/>
      <url>2021/02/01/blog7-JdDelivrUse/</url>
      
        <content type="html"><![CDATA[<p>在之前第二篇主题样式修改的学习记录里，就出现过很多引用jsdelivr的链接，一直不知道这是做什么用的，今天就来<code>学习</code>、<code>记录</code>、<code>配置</code>一下jsdelivr。</p><blockquote><p><code>CDN</code>的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。——百度百科</p></blockquote><p>放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。</p><p><code>jsDelivr</code> <a href="https://www.jsdelivr.com/">https://www.jsdelivr.com/</a> 是一个CDN服务提供商，优点在于全球通用。专门提供js相关的CDN，对npm,github做了加速镜像。针对npm, github提供了CDN镜像。<br><img src="https://cdn.imzjw.cn/img/45" alt="p1"></p><p>接下来，将介绍如何将自己的字体文件上传jsDelivr。</p><h2 id="新建github仓库"><a href="#新建github仓库" class="headerlink" title="新建github仓库"></a>新建github仓库</h2><p>在此，仓库名设置为CDN。<br><img src="https://cdn.imzjw.cn/img/46" alt="p2"></p><h2 id="克隆github仓库到本地"><a href="#克隆github仓库到本地" class="headerlink" title="克隆github仓库到本地"></a>克隆github仓库到本地</h2><pre><code>git clone git@github.com:tsuiwade/CDN.git</code></pre><p><img src="https://cdn.imzjw.cn/img/47" alt="p3"><br>在vscode的cmd中输入代码，倘若出现如下的报错，是因为客户端与服务端未生成 ssh key，为解决以上问题，我们需要重新生成一次ssh key ，并重新配置一下GitHub账户即可。具体参考 <a href="https://blog.csdn.net/weixin_40922744/article/details/107576748">https://blog.csdn.net/weixin_40922744/article/details/107576748</a><br>（其中，解决方法里面的cmd窗口是Git bash。）<br><img src="https://cdn.imzjw.cn/img/48" alt="p4"><br>如果出现ssh无效问题 参考 <a href="https://blog.csdn.net/weixin_45604257/article/details/106649576">https://blog.csdn.net/weixin_45604257/article/details/106649576</a></p><h2 id="上传资源"><a href="#上传资源" class="headerlink" title="上传资源"></a>上传资源</h2><p>将需要上传的资源放进本地CDN仓库中。<br><img src="https://cdn.imzjw.cn/img/49" alt="p5"><br>（注：jsDelivr不支持加载超过20M的资源），在本地git仓库目录下右键 Git Bash Here，执行以下命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status                    &#x2F;&#x2F;查看状态</span><br><span class="line">git add .                     &#x2F;&#x2F;添加所有文件到暂存区</span><br><span class="line">git commit -m &#39;第一次提交&#39;      &#x2F;&#x2F;把文件提交到仓库</span><br><span class="line">git push                      &#x2F;&#x2F;推送至远程仓库</span><br></pre></td></tr></table></figure></p><h2 id="发布仓库"><a href="#发布仓库" class="headerlink" title="发布仓库"></a>发布仓库</h2><p>回到github上，点击release发布，填写必要信息如下图所示。<br><img src="https://cdn.imzjw.cn/img/50" alt="p6"></p><p>这就设置完成了，接下来可以引用资源了。</p><h2 id="通过jsDelivr引用资源"><a href="#通过jsDelivr引用资源" class="headerlink" title="通过jsDelivr引用资源"></a>通过jsDelivr引用资源</h2><p><code>使用方法：https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</code><br>例如：<br><a href="https://cdn.jsdelivr.net/gh/tsuiwade/CDN@4.0/font/yenianti.otf">https://cdn.jsdelivr.net/gh/tsuiwade/CDN@4.0/font/yenianti.otf</a></p><p>这里就大功告成了，这里引用的字体，可以参考第二篇博客的首页字体修改。</p><p>本文主要参考 <a href="https://blog.csdn.net/qq_36759224/article/details/86936453">https://blog.csdn.net/qq_36759224/article/details/86936453</a></p><p><a href="https://github.com/badges/shields">https://github.com/badges/shields</a><br><a href="https://github.com/spencerwooo/Substats">https://github.com/spencerwooo/Substats</a><br><a href="https://sspai.com/post/59593">https://sspai.com/post/59593</a><br><a href="https://www.cnblogs.com/sddai/p/13779316.html">https://www.cnblogs.com/sddai/p/13779316.html</a><br><a href="https://shields.io/">https://shields.io/</a><br><a href="https://www.baidu.com/s?wd=https%3A%2F%2Fshields.io%2F&amp;pn=10&amp;oq=https%3A%2F%2Fshields.io%2F&amp;ie=utf-8&amp;rsv_pq=bf92913f0003488b&amp;rsv_t=d46aUVHAFQ77ZmEGMpHpwQ5ncdiMRCwA4exwuw8jxTdXvT1%2BpwCVWcKKgec&amp;rsv_jmp=slow">https://www.baidu.com/s?wd=https%3A%2F%2Fshields.io%2F&amp;pn=10&amp;oq=https%3A%2F%2Fshields.io%2F&amp;ie=utf-8&amp;rsv_pq=bf92913f0003488b&amp;rsv_t=d46aUVHAFQ77ZmEGMpHpwQ5ncdiMRCwA4exwuw8jxTdXvT1%2BpwCVWcKKgec&amp;rsv_jmp=slow</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jeDelivr </tag>
            
            <tag> CDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第6篇博客】写博客的git概念和指令学习记录</title>
      <link href="2021/01/09/blog6-BaseGit/"/>
      <url>2021/01/09/blog6-BaseGit/</url>
      
        <content type="html"><![CDATA[<p>在写完博客之后，一般都是通过<code>git add .</code>、<code>git commit -m &quot;message&quot;</code>、<code>git push</code>进行提交，至于这些代码的含义及相关概念是什么？本文就带着这些问题进行学习并记录。</p><h2 id="四个工作区域"><a href="#四个工作区域" class="headerlink" title="四个工作区域"></a>四个工作区域</h2><p>git本地有四个工作区域，文件在这四个区域之间的转换关系如下：<br><img src="1.jpg" alt="1png"></p><ul><li><code>workspace</code>：工作区，就是你平时存放项目代码的地方。</li><li><code>staging area</code>：又叫<code>Index / Stage</code>，暂存区/缓冲区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息。</li><li><code>local repository</code>：本地仓库区（或版本库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本。</li><li><code>remote repository</code>：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换。</li></ul><p>因此，git的工作流程一般是这样的：通过<code>git add .</code>将在工作区中修改、添加后的文件从工作区移至暂存区；再通过<code>git commit</code>移至本地仓库；最后通过<code>git push</code>推到远程仓库中。</p><p>因此，git管理的文件有三种状态：已修改（modified），已暂存（staged），已提交(committed)。</p><h2 id="文件的版本控制"><a href="#文件的版本控制" class="headerlink" title="文件的版本控制"></a>文件的版本控制</h2><p>版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。</p><p>git不关心文件两个版本之间的具体差别，而是关心文件的整体是否有改变，若文件被改变，在添加提交时就生成文件新版本的快照，而判断文件整体是否改变的方法就是用SHA-1算法计算文件的校验和。</p><p>版本控制的文件状态有四种，如下图所示。</p><p><img src="2.png" alt="2png"></p><p><code>Untracked</code>： 未跟踪，此文件在文件夹中，但并没有加入到git库，不参与版本控制。 通过git add可将状态变为Staged。</p><p><code>Unmodify</code>： 文件已经入库，但未修改，即版本库中的文件快照内容与文件夹中完全一致。 这种类型的文件有两种去处，如果它被修改，而变为Modified。如果使用git rm移出版本库，则成为Untracked文件。</p><p><code>Modified</code>： 文件已修改，仅仅是修改，并没有进行其他的操作。 这个文件也有两个去处，通过git add可进入暂存staged状态，使用git checkout 则丢弃修改过，返回到unmodify状态，这个git checkout即从库中取出文件，覆盖当前修改。</p><p><code>Staged</code>： 暂存状态。 执行git commit则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为Unmodify状态。 执行git reset HEAD filename取消暂存，文件状态为Modified。</p><h2 id="git-status命令"><a href="#git-status命令" class="headerlink" title="git status命令"></a>git status命令</h2><p>在命令行中输入git status命令可以得到文件在工作区、暂存区的状态，下面展示这不同的三种状态：</p><pre><code>PS C：\Users\tsui\blog&gt; git statusOn branch myblogYour branch is up to date with &#39;origin/myblog&#39;.Changes to be committed：(use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)        modified：   source/_posts/blog3_DnsBlogGithubIo.md        modified：   source/_posts/blog6_hexo_commands.md        modified：   source/_posts/blog7-MarkdownLearning.md        new file：   source/_posts/blog8-BaseGit.md        new file：   source/_posts/blog8-BaseGit/0.gifChanges not staged for commit：(use &quot;git add &lt;file&gt;...&quot; to update what will be committed)(use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)        modified：   source/_posts/blog8-BaseGit.mdUntracked files：(use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)        source/_posts/te.md</code></pre><ol><li><code>Changes to be committed</code>：表示已经从工作区add到暂存区的file（文件或文件夹），可以通过 <code>git restore --staged filename</code> 命令将该file从暂存区移出，只有工作区有该文件，该文件就为Untracked files。通过 <code>git commit -m [message]</code>将暂存区内容添加到本地仓库中，此时我的vscode左侧工具栏源代码管理被挂起的文件，即一个小数字，将会消失。而在vscode底部状态栏的源代码管理处上拉数加一。</li><li><code>Changes not staged for commit</code>：表示文件还在工作区修改，没有add到暂存区。可以通过 <code>git add file</code> 命令将变更文件添加到暂存区，如此便可取消Changes not staged for commit状态。还可以通过 <code>git restore  file</code> 的命令取消在file在工作区的变更，那么暂存区的file内容还是以前的，也取消Changes not staged for commi的状态。</li><li><code>Untracked files：</code>表示只在工作区有的file（文件或文件夹），也就是在暂时区没有该file。</li></ol><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><p>git 每次提交代码，都要写 Commit message (提交说明)，应该清晰明了，说明本次提交的目的。git commit 命令将暂存区内容添加到本地仓库中。</p><pre><code>git commit -m [message]</code></pre><p>[message] 可以是一些备注信息。</p><p>还可以提交暂存区的指定文件到仓库区：</p><pre><code>git commit [file1] [file2] ... -m [message]</code></pre><p>目前, 社区有多种 Commit message 的写法规范, 例如<a href="https://www.jianshu.com/p/1b56cd033eea">Angular规范</a>。规范主要针对的问题如下：</p><ol><li>版本回退时无法快速定位到指定版本</li><li>无法知道项目中封版操作是哪一个commit</li><li>无法清晰的知道每次提交的记录</li></ol><h3 id="commit提交规范"><a href="#commit提交规范" class="headerlink" title="commit提交规范"></a>commit提交规范</h3><p>每次提交，Commit message 都包括三个部分：Header，Body 和 Footer。<br>其中，Header 是必需的，Body 和 Footer 可以省略。</p><h3 id="Commit-message-的作用"><a href="#Commit-message-的作用" class="headerlink" title="Commit message 的作用"></a>Commit message 的作用</h3><p>格式化的Commit message，有几个好处</p><ol><li>提供更多的历史信息，方便快速浏览</li><li>可以过滤某些commit（比如文档改动）, 便于快速查找信息</li><li>可以直接从commit生成Change log</li></ol><h3 id="Commit-message-的格式"><a href="#Commit-message-的格式" class="headerlink" title="Commit message 的格式"></a>Commit message 的格式</h3><p>每次提交，Commit message 都包括三个部分：<code>Header</code>，<code>Body</code> 和<code>Footer</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span><br><span class="line">&#x2F;&#x2F; 空一行</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&#x2F;&#x2F; 空一行</span><br><span class="line">&lt;footer&gt;</span><br></pre></td></tr></table></figure><p>其中, Header 是必需的, Body 和 Footer 可以省略不管是哪一个部分, 任何一行都不得超过72个字符（或100个字符）, 这是为了避免自动换行影响美观。</p><p><strong>一、Header</strong><br>Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。</p><ol><li><p>type<br>type用于说明 commit 的类别，只允许使用下面7个标识。其中，如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中. 其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要。</p><ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul></li><li><p>scope<br>scope用于说明commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p></li><li><p>subject<br>subject 是 commit 目的的简短描述，不超过50个字符以动词开头，使用第一人称现在时，比如change , 而不是 changed 或 changes 第一个字母小写, 结尾不加句号（.）</p></li></ol><p><strong>二、Body</strong><br>Body 部分是对本次 commit 的详细描述, 可以分成多行。下面是一个范例：</p><pre><code>More detailed explanatory text, if necessary. Wrap it to about 72 characters or so. Further paragraphs come after blank lines.- Bullet points are okay, too- Use a hanging indent</code></pre><p>有两个注意点:</p><ol><li>使用第一人称现在时, 比如使用change, 而不是changed或changes</li><li>应该说明代码变动的动机. 以及与以前行为的对比</li></ol><p><strong>三、Footer</strong><br>Footer 部分只用于两种情况。</p><ol><li><p>不兼容变动<br>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE<br>开头，后面是对变动的描述、以及变动理由和迁移方法。</p><pre><code> BREAKING CHANGE: isolate scope bindings definition has changed. To migrate the code follow the example below: Before: scope: &#123; myAttr: &#39;attribute&#39;, &#125; After: scope: &#123; myAttr: &#39;@&#39;, &#125; The removed inject wasn&#39;t generaly useful for directives so there should be no code using it.</code></pre></li><li><p>关闭Issure<br>如果当前 commit 针对某个issue, 那么可以在 Footer 部分关闭这个 issue。</p><pre><code> Closes #234</code></pre></li></ol><hr><h2 id="其他的一些git指令"><a href="#其他的一些git指令" class="headerlink" title="其他的一些git指令"></a>其他的一些git指令</h2><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><p><code>git add</code> 命令可将该文件添加到暂存区。<br>添加一个或多个文件到暂存区：</p><pre><code>git add [file1] [file2] ...</code></pre><p>添加指定目录到暂存区，包括子目录：</p><pre><code>git add [dir]</code></pre><p>添加当前目录下的所有文件到暂存区：</p><pre><code>git add .</code></pre><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><p><code>git clone</code> 拷贝一个 git 仓库到本地，让自己能够查看该项目，或者进行修改。<br>拷贝项目命令格式如下：</p><pre><code>git clone [url]</code></pre><p>[url] 是你要拷贝的项目。<br>默认情况下，git 会按照你提供的 URL 所指向的项目的名称创建你的本地项目目录。 通常就是该 URL 最后一个 / 之后的项目名称。如果你想要一个不一样的名字，你可以在该命令后加上你想要的名称。</p><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><p><code>git push</code> 用于从将本地的分支版本上传到远程并合并。<br>命令格式如下：</p><pre><code>git push &lt;远程主机名&gt; &lt;本地分支名&gt;：&lt;远程分支名&gt;</code></pre><p>如果本地分支名与远程分支名相同，则可以省略冒号和远程分支名<br><code>git push origin master</code>将本地的 master 分支推送到 origin 主机的 master 分支。</p><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><p><code>git pull</code> 命令用于从远程获取代码并合并本地的版本。</p><pre><code>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;：&lt;本地分支名&gt;</code></pre><p>更新操作：</p><pre><code>git pullgit pull origin</code></pre><p>将远程主机 origin 的 master 分支拉取过来，与本地的 brantest 分支合并。</p><pre><code>git pull origin master：brantest</code></pre><p>如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</p><pre><code>git pull origin master</code></pre><p>上面命令表示，取回 origin/master 分支，再与本地的 brantest 分支合并。</p><p>参考：<br><a href="https://www.cnblogs.com/qdhxhz/p/9757390.html">https://www.cnblogs.com/qdhxhz/p/9757390.html</a><br><a href="https://www.jianshu.com/p/1b56cd033eea">https://www.jianshu.com/p/1b56cd033eea</a></p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第5篇博客】hexo下的markdown的语法(GFM)学习记录</title>
      <link href="2021/01/02/blog5-MarkdownLearning/"/>
      <url>2021/01/02/blog5-MarkdownLearning/</url>
      
        <content type="html"><![CDATA[<p>Hexo下使用的MarkDown为Github的GFM，<a href="https://github.github.com/gfm/">GFM（Github Flavored Markdown）</a> 是 Github 拓展的基于 Markdown 的一种纯文本的书写格式。风格很漂亮，简洁美观大方。但是GFM的MarkDown语法和标准的MarkDown稍有不同，使用过程中需要注意一些。</p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>Markdown 中，使用 # 或 = 来定义大纲标题，有多少个#或=，就表示是几级的大纲，相当于<h几>。</p><div class="table-container"><table><thead><tr><th style="text-align:center">语法</th><th style="text-align:center">效果 </th></tr></thead><tbody><tr><td style="text-align:center"># 一级标题</td><td style="text-align:center"><h1>一级标题</h1></td></tr><tr><td style="text-align:center">## 二级标题</td><td style="text-align:center"><h2>二级标题</h2></td></tr><tr><td style="text-align:center">### 三级标题</td><td style="text-align:center"><h3>三级标题</h3></td></tr><tr><td style="text-align:center">#### 四级标题</td><td style="text-align:center"><h4>四级标题</h4></td></tr><tr><td style="text-align:center">正常文字</td><td style="text-align:center">正常文字</td></tr><tr><td style="text-align:center">##### 五级标题</td><td style="text-align:center"><h5>五级标题</h5></td></tr><tr><td style="text-align:center">###### 六级标题</td><td style="text-align:center"><h6>六级标题</h6></td></tr></tbody></table></div><h1 id="基本字体样式"><a href="#基本字体样式" class="headerlink" title="基本字体样式"></a>基本字体样式</h1><p>Markdown 使用一个星号表示斜体，两个星号表示加粗，三个星号表示加粗斜体。</p><div class="table-container"><table><thead><tr><th style="text-align:center">语法</th><th style="text-align:center">效果 </th></tr></thead><tbody><tr><td style="text-align:center">*斜体*</td><td style="text-align:center"><em>斜体</em></td></tr><tr><td style="text-align:center">**粗体** 或 __粗体__</td><td style="text-align:center"><strong>粗体</strong> </td></tr><tr><td style="text-align:center">***加粗斜体<em>*</em></td><td style="text-align:center"><strong><em>加粗斜体</em></strong></td></tr><tr><td style="text-align:center">~~删除线~~</td><td style="text-align:center"><del>删除线</del></td></tr></tbody></table></div><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>使用星号或者中横线来表示无序列表，注意后面需要加个空格。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 无序列表1</span><br><span class="line">* 无序列表2</span><br><span class="line">- 无序列表3</span><br><span class="line">- 无序列表4</span><br><span class="line">1. 有序列表1</span><br><span class="line">2. 有序列表2</span><br></pre></td></tr></table></figure></p><ul><li>无序列表1</li><li>无序列表2</li></ul><ul><li>无序列表3</li><li>无序列表4</li></ul><ol><li>有序列表1</li><li>有序列表2</li></ol><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>引用部分的内容只需要在行首加上 &gt; 就可以了。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 沃兹基硕德说过：不要以自己的放纵来对抗平庸</span><br><span class="line"></span><br><span class="line">&gt; 动物</span><br><span class="line">&gt;&gt; 水生动物</span><br><span class="line">&gt;&gt; 陆生动物</span><br><span class="line">&gt;&gt;&gt; 猴子</span><br><span class="line">&gt;&gt;&gt; 人</span><br><span class="line">&gt;&gt;&gt;&gt; 程序猿</span><br><span class="line">&gt;&gt;&gt;&gt; 攻城狮</span><br><span class="line">&gt;&gt;产品狗 &#x2F;&#x2F;这里需要注意，没有空行间隔，忽略降级引用标记</span><br><span class="line">射鸡虱   &#x2F;&#x2F;这里需要注意，没有空行间隔，忽略降级引用标记</span><br></pre></td></tr></table></figure></p><blockquote><p>沃兹基硕德说过：不要以自己的放纵来对抗平庸</p><p>动物</p><blockquote><p>水生动物<br>陆生动物</p><blockquote><p>猴子<br>人</p><blockquote><p>程序猿<br>攻城狮<br>产品狗 //这里需要注意，没有空行间隔，忽略降级引用标记<br>射鸡虱   //这里需要注意，没有空行间隔，忽略降级引用标记</p></blockquote></blockquote></blockquote></blockquote><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p>Markdown 使用<code>[]()</code>来表示超链接，中括号表示链接文字，小括号表示链接地址。</p><pre><code>[tsuiwade&#39;s blog](tsuiwade.github.io)</code></pre><p><a href="tsuiwade.github.io">tsuiwade’s blog</a></p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>图片的样式与超链接非常相似，只需在前面加个感叹号就可以了，即用<code>![]()</code>表示图片。其中中括号表示图片未加载时的提示文字，小括号表示图片地址。<br>例如使用hexo n blog7_MarkdownLearning时创建了<code>blog7-MarkdownLearning.md</code>和<code>blog7-MarkdownLearning</code>文件夹，此时在文件夹中放入图片。再由小括号中填写文件名就可以在博客中贴图。<br>还可以使用HTML的<code>&lt;img&gt;</code>标签，还有许多例如高度、对齐、宽度标签。具体可见 <a href="https://www.w3school.com.cn/tags/tag_img.asp。">https://www.w3school.com.cn/tags/tag_img.asp。</a><br>下面展示四张图，分别是原始图1、gif图2、网页链接图3、改大小图4。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![1png](1.png)</span><br><span class="line">![2gif](2.gif)</span><br><span class="line">![baidu](https:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png)</span><br><span class="line">&lt;img src&#x3D;1.png width&#x3D;&quot;100&quot;&#x2F;&gt;&lt;br&#x2F;&gt;</span><br></pre></td></tr></table></figure><br><img src="1.png" alt="1png"></p><div align="center">图1</div><p><img src="2.gif" alt="2gif"></p><div align="center">图2</div><p><img src="https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png" alt="baidu"></p><div align="center">图3</div><p><img src=1.png width="100"/><br/></p><div align="center">图4</div><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;单行文字&#96;</span><br><span class="line">&#96;&#96;&#96;</span><br><span class="line">多行文字1</span><br><span class="line">多行文字2</span><br><span class="line">多行文字3</span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><p><code>单行文字</code><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">多行文字1</span><br><span class="line">多行文字2</span><br><span class="line">多行文字3</span><br></pre></td></tr></table></figure><br>还可以采用下面的代码块：在连续几行的文本开头加入1个Tab或者4个空格，代码块没有前面的序号。（代码块前需要换行）</p><pre><code>多行文字1多行文字2多行文字3</code></pre><p>也适合做一篇文章的tag。</p><pre><code>`linux` `网络编程` `socket` `epoll`</code></pre><p><code>linux</code> <code>网络编程</code> <code>socket</code> <code>epoll</code></p><h1 id="水平分割线"><a href="#水平分割线" class="headerlink" title="水平分割线"></a>水平分割线</h1><p>使用—-进行水平分割<br>水平分割线上方</p><hr><p>水平分割线下方</p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>表格 - 和 | 分割行和列 ， : 控制对其方式<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">居左   | 居右 | 居中</span><br><span class="line">:- | -: | :-:</span><br><span class="line">第1行 | 12  | 13  </span><br><span class="line">第2行 | 22  | 23  </span><br><span class="line">第3行 | 32  | 33  </span><br></pre></td></tr></table></figure><br>居左   | 居右 | 居中<br>:- | -: | :-:<br>第1行 | 12  | 13<br>第2行 | 22  | 23<br>第3行 | 32  | 33  </p><p>表格中的样式可以利用html语言进行修改，还需要配合转义字符<code>\</code><br>如第1部分标题的代码如下</p><pre><code>语法   | 效果 :-: | :-: \# 一级标题 | &lt;h1&gt;一级标题&lt;/h1&gt;\#\# 二级标题 | &lt;h2&gt;二级标题&lt;/h2&gt;\#\#\# 三级标题 | &lt;h3&gt;三级标题&lt;/h3&gt;\#\#\#\# 四级标题 | &lt;h4&gt;四级标题&lt;/h4&gt;正常文字 | 正常文字\#\#\#\#\# 五级标题 | &lt;h5&gt;五级标题&lt;/h5&gt;\#\#\#\#\#\# 六级标题 | &lt;h6&gt;六级标题&lt;/h6&gt;</code></pre><h1 id="提示块标签"><a href="#提示块标签" class="headerlink" title="提示块标签"></a>提示块标签</h1><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>可使用语法 no-icon去掉小图标</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><h1 id="diff语法"><a href="#diff语法" class="headerlink" title="diff语法"></a>diff语法</h1><p>版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。<br>GFM中可以显示的展示diff效果。使用蓝色表示新增，红色表示删除。<br>其语法与代码高亮类似，只是在三个反引号后面写diff，<br>并且其内容中，以 +开头表示新增，-开头表示删除。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;diff</span><br><span class="line">+ 鸟宿池边树，僧敲月下门</span><br><span class="line">- 鸟宿池边树，僧推月下门</span><br><span class="line">&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><br><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ 鸟宿池边树，僧敲月下门</span></span><br><span class="line"><span class="deletion">- 鸟宿池边树，僧推月下门</span></span><br></pre></td></tr></table></figure></p><h1 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h1><p>其中，字母要统统小写，空格统统要替换成 ‘-‘</p><pre><code>[回到1、标题](#1、标题)[回到2、基本字体样式](#2、基本字体样式)</code></pre><p><a href="#1、标题">回到1、标题</a><br><a href="#2、基本字体样式">回到2、基本字体样式</a></p><h1 id="表情"><a href="#表情" class="headerlink" title="表情"></a>表情</h1><p>Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。<br>比如<code>:blush:</code>，可以显示:blush:。<code>:smile:</code>，可以显示:smile:。<code>:grinning:</code>，可以显示:grinning:。<code>:elephant:</code>，可以显示:elephant:。<code>:v:</code>，可以显示:v:。<code>:balloon:</code>，可以显示:balloon:。<code>:triangular_flag_on_post:</code>，可以显示:triangular_flag_on_post:。<code>:fast_forward:</code>，可以显示:fast_forward:。<code>:100:</code>，可以显示:100:。<br>通过以下代码进行命令行安装配置，还需要配置hexo站点配置文件_config.yml<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br><span class="line">npm i hexo-renderer-markdown-it --save</span><br><span class="line">npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure><br>其他有关表情的符号码和问题可查 <a href="https://hasaik.com/posts/9b280ea3.html">https://hasaik.com/posts/9b280ea3.html</a></p><p>后续跟踪：安装了markdown-it-emoji可能会造成markdown渲染问题，如果出错请注意是这里的问题。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> GFM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第4篇博客】hexo的常见指令及简写汇总</title>
      <link href="2021/01/01/blog4_hexo_commands/"/>
      <url>2021/01/01/blog4_hexo_commands/</url>
      
        <content type="html"><![CDATA[<p>本文借鉴自<a href="https://hexo.io/zh-cn/docs/commands.html">https://hexo.io/zh-cn/docs/commands.html</a></p><p>为了方便查阅,这里汇总一些常用的hexo指令。</p><h2 id="简写指令："><a href="#简写指令：" class="headerlink" title="简写指令："></a>简写指令：</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><p><code>hexo init [folder]</code><br>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。<br>该命令是一个缩写，完成如下步骤：<br>1、Git clone hexo-starter including hexo-theme-landscape into the current directory or a target folder if specified.<br>2、Install dependencies using a package manager: Yarn 1, pnpm or npm, whichever is installed; if there are more than one installed, the priority is as listed. npm is bundled with Node.js by default.</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><p><code>hexo new [layout] &lt;title&gt;</code><br>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。<br><code>hexo n &quot;我的第一篇文章&quot;</code> 等价于 <code>hexo new &quot;我的第一篇文章&quot;</code> 还等价于 <code>hexo new post &quot;我的第一篇文章&quot;</code></p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><p><code>hexo generate</code><br>生成静态文件。(执行 $ hexo g后会在站点根目录下生成public文件夹, hexo会将”/blog/source/“ 下面的.md后缀的文件编译为.html后缀的文件,存放在”/blog/public/ “ 路径下)<br>该命令可以简写为<br><code>hexo g</code></p><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><p><code>hexo publish [layout] &lt;filename&gt;</code><br>发表草稿。<br>该命令可以简写为：<br><code>hexo p</code></p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><p><code>hexo server</code><br>启动服务器。Hexo 会监视文件变动并自动更新，除修改站点配置文件外，无须重启服务器，直接刷新网页即可生效。<br>默认情况下，访问网址为： <a href="http://localhost:4000/。">http://localhost:4000/。</a><br>该命令可以简写为：<br><code>hexo s</code></p><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><p><code>hexo deploy</code><br>部署网站。<br>该命令可以简写为：<br><code>hexo d</code></p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><p><code>hexo clean</code><br>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第3篇博客】如何在无外网情况下访问自己的github.io博客</title>
      <link href="2020/10/10/blog3_DnsBlogGithubIo/"/>
      <url>2020/10/10/blog3_DnsBlogGithubIo/</url>
      
        <content type="html"><![CDATA[<p>在没有科学上网的环境下，访问不了github.io个人博客，导致自己欣赏不了自己的博客。<br>于是，记录了配置dns来解决该问题的步骤。</p><p>本文借鉴自<a href="https://blog.csdn.net/qq_32627137/article/details/108046461">https://blog.csdn.net/qq_32627137/article/details/108046461</a></p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>在网络上访问网站，要首先通过DNS服务器把网络域名<code>www.XXXX.com</code> 解析成XXX.XXX.XXX.XXX的IP地址后，我们的计算机才能访问。要是对于每个域名请求我们都要等待域名服务器解析后返回IP信息，这样访问网络的效率就会降低，而Hosts文件就能提高解析效率。根据Windows系统规定，在进行DNS请求以前，Windows系统会先检查自己的Hosts文件中是否有这个地址映射关系，如果有则调用这个IP地址映射，如果没有再向已知的DNS服务器提出域名解析。也就是说Hosts的请求级别比DNS高。 </p><p>github的CDN被某墙屏了，由于网络代理商的原因，所以访问下载很慢。ping github.com 时，速度只有300多ms。<br>于是解决方案就是绕过dns解析，在本地直接绑定host，该方法也可加速其他因为CDN被屏蔽导致访问慢的网站。</p><h2 id="根据环境情况选择跳转ip"><a href="#根据环境情况选择跳转ip" class="headerlink" title="根据环境情况选择跳转ip"></a>根据环境情况选择跳转ip</h2><p>由该网站进行查询<a href="https://tools.ipip.net/dns.php">https://tools.ipip.net/dns.php</a><br>如下图查看访问github.com域名时，延迟最低的ip，复制该ip</p><h4 id="该步骤的作用是选择可以访问到github-io的ip"><a href="#该步骤的作用是选择可以访问到github-io的ip" class="headerlink" title="该步骤的作用是选择可以访问到github.io的ip"></a>该步骤的作用是选择可以访问到github.io的ip</h4><p><img src="1.png" alt="picture1"><br>然后管理员权限打开记事本<br><img src="2.png" alt="picture1"><br>在记事本中打开C:\Windows\System32\drivers\etc路径下的hosts文件<br>该文件是域名解析文件。可以直接用记事本打开。将IP地址重定向。<br>格式为：ip地址-空格-域名<br>可以将一个域名重新定向到一个IP<br>通过它可以达到以下目的：1、加快域名解析；2、方便局域网用户；3、屏蔽网站 </p><p><img src="3.png" alt="picture1"><br>在记事本的最后补上<br><code>219.141.136.10 github.com</code><br>这时候可以打开cmd，输入<code>ping github.com</code>，可以看出ping通该网址了。<br><img src="4.png" alt="picture1"><br>上一段是来自选中的跳转ip，下一段是来自己自己家原来的ip，可以看出用了跳转ip，速度会更快。</p><p>接下来同理，设置自己博客的tsuiwade.github.io的ip,接着补在记事本的最后。<br><img src="5.png" alt="picture1"><br>最后就可以访问了。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【第2篇博客】butterfly样式修改学习记录</title>
      <link href="2020/10/09/blog2-BlogTheme/"/>
      <url>2020/10/09/blog2-BlogTheme/</url>
      
        <content type="html"><![CDATA[<h2 id="博客首页图"><a href="#博客首页图" class="headerlink" title="博客首页图"></a>博客首页图</h2><pre><code>default_top_img: /img/me.png # 进入博客首页显示的图</code></pre><p>图片资源放进\themes\butterfly\source\img</p><h2 id="博客头部模板"><a href="#博客头部模板" class="headerlink" title="博客头部模板"></a>博客头部模板</h2><p>在此记录一下博客的头部模板。包括名称、创建日期、更新日期、首页缩略图描述、封面（首页和博客顶部）、标签（多选）、分类的模板。<br><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 【第2篇博客】butterfly样式修改学习记录</span><br><span class="line">date: 2021-02-09 10:31:23</span><br><span class="line">updated: 2021-02-26 10:31:23</span><br><span class="line">description: butterfly主题样式修改学习记录</span><br><span class="line">cover: &quot;https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-diy-cover.png&quot;</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">  -</span> hexo</span><br><span class="line"><span class="bullet">  -</span> butterfly</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">  -</span> 博客搭建记录</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h2><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306222532700.png" alt="image-20210306222532700"></p><p>在_config.yml修改，还有子菜单的设计。</p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">首页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">文章</span> <span class="string">||</span> <span class="attr">fas fa-book:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">归档</span> <span class="string">||</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">标签</span> <span class="string">||</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">分类</span> <span class="string">||</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line">  <span class="string">便签</span> <span class="string">||</span> <span class="attr">fas fa-sticky-note:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">留言</span> <span class="string">||</span> <span class="string">/messages/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-comments</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">友链</span> <span class="string">||</span> <span class="string">/blogroll/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-user-friends</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">圈子</span> <span class="string">||</span> <span class="string">/moments/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-blog</span></span><br><span class="line">  <span class="string">列表</span> <span class="string">||</span> <span class="attr">fas fa-list:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">图库</span> <span class="string">||</span> <span class="string">/gallery/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-images</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">音乐</span> <span class="string">||</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">说说</span> <span class="string">||</span> <span class="string">/say/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-comment</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">叨叨</span> <span class="string">||</span> <span class="string">/talk/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-comment-dots</span></span><br><span class="line">  <span class="string">关于</span> <span class="string">||</span> <span class="attr">fas fa-desktop:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">本站</span> <span class="string">||</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-stream</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">统计</span> <span class="string">||</span> <span class="string">/charts/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-chart-bar</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">订阅</span> <span class="string">||</span> <span class="string">/sub/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-rss</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">背景</span> <span class="string">||</span> <span class="string">/background/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-adjust</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">自己</span> <span class="string">||</span> <span class="string">/me/</span> <span class="string">||</span> <span class="string">far</span> <span class="string">fa-user</span></span><br></pre></td></tr></table></figure><p>必须是 /xxx/，后面||分开，然后写图标名。导航的文字可以自行修改。</p><p>首先介绍文章内的归档archive、标签tag、分类category的修改顶部图方法。</p><p>1、 在主题样式配置文件内修改各属性的img图。<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># archive_img修改了归档页archives的顶部图</span></span><br><span class="line"><span class="attr">archive_img:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/jerryc127/butterfly_cdn@2.1.0/top_img/archive.jpg&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">#category_img修改了分类categories下的每个分类category的顶部图</span></span><br><span class="line"><span class="attr">category_img:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/categories.jpg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#tag_img修改了标签tags下的每个标签tag的顶部图</span></span><br><span class="line"><span class="attr">tag_img:</span> <span class="string">&quot;https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/Photo/tags.jpg&quot;</span></span><br></pre></td></tr></table></figure><br>2、 分类页categories和便签页tags的顶部图需要新建index页设置属性，具体参考 <a href="https://butterfly.js.org/posts/dc584b87/">https://butterfly.js.org/posts/dc584b87/</a></p><p>例如设置分类页，需要先hexo new page link，接着找到source/link/index.md修改文件：<br><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2021-02-26 21:33:40</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">top<span class="emphasis">_img: &quot;https://cdn.jsdelivr.net/gh/jerryc127/butterfly_</span>cdn@2.1.0/top<span class="emphasis">_img/archive.jpg&quot;</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure></p><h2 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h2><p>效果如下：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/4.png" alt=""></p><p>butterfly支持<code>font-awesome v5</code>图标。<br>书写格式 <code>图标名: url || 描述性文字</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fab fa-github:</span> <span class="string">https://github.com/tsuiwade</span> <span class="string">||</span> <span class="string">Github</span></span><br><span class="line">  <span class="attr">fas fa-envelope:</span> <span class="string">mailto:478451541@gmail.com</span> <span class="string">||</span> <span class="string">Email</span></span><br><span class="line">  <span class="attr">iconfont  icon-bilibili:</span> <span class="string">https://space.bilibili.com/381957255</span> <span class="string">||</span> <span class="string">bilibili</span></span><br><span class="line">  <span class="attr">iconfont  icon-zhifubao:</span> <span class="string">https://www.bilibili.com</span> <span class="string">||</span> <span class="string">alipay</span></span><br><span class="line">  <span class="attr">iconfont  icon-wechat:</span> <span class="string">https://www.bilibili.com</span> <span class="string">||</span> <span class="string">wechat</span></span><br><span class="line">  <span class="attr">iconfont  icon-qq:</span> <span class="string">tencent://AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=478451541</span> <span class="string">||</span> <span class="string">qq</span></span><br><span class="line">  <span class="attr">iconfont  icon-csdn:</span> <span class="string">https://www.bilibili.com</span> <span class="string">||</span> <span class="string">CSDN</span></span><br><span class="line">  <span class="attr">iconfont  icon-shejiao-yinle:</span> <span class="string">https://www.bilibili.com</span> <span class="string">||</span> <span class="string">music</span></span><br><span class="line">  <span class="attr">iconfont  icon-shejiaotubiao-55:</span> <span class="string">https://www.bilibili.com</span> <span class="string">||</span> <span class="string">facebook</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/u012208219/article/details/106883012">https://blog.csdn.net/u012208219/article/details/106883012</a><br>该教程描述了如何引入外部样式。</p><p>添加qq超链接 tencent://AddContact/?fromId=45&amp;fromSubId=1&amp;subcmd=all&amp;uin=478451541<br>qq在线联系超链接<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=2445408174&amp;site=qq&amp;menu=yes">http://wpa.qq.com/msgrd?v=3&amp;uin=2445408174&amp;site=qq&amp;menu=yes</a></p><h2 id="主页文章节选"><a href="#主页文章节选" class="headerlink" title="主页文章节选"></a>主页文章节选</h2><p>主页文章的节选有自动节选和文章页description两种，<br>在主题配置文件中定位到<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Display the article introduction on homepage</span></span><br><span class="line"><span class="comment"># 1: description</span></span><br><span class="line"><span class="comment"># 2: both (if the description exists, it will show description, or show the auto_excerpt)</span></span><br><span class="line"><span class="comment"># 3: auto_excerpt (default)</span></span><br><span class="line"><span class="comment"># false: do not show the article introduction</span></span><br><span class="line"><span class="attr">index_post_content:</span></span><br><span class="line">  <span class="attr">method:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">500</span> <span class="comment"># if you set method to 2 or 3, the length need to config</span></span><br></pre></td></tr></table></figure><br>在这我们选择2，优先选择description，如果没有配置description，则自动节选内容。</p><h2 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h2><p><code>disable_top_img: true</code> ：不展示顶部图<br><code>index_img</code>：主页的顶部图<br><code>default_top_img</code>：默认的顶部图，当没有配置页面的顶部图的时候，将展示这个<br><code>archive_img</code>：归档页的顶部图<br><code>tag_img</code>：tag子页面的顶部图</p><p>还可尝试</p><pre><code>top_img: orangetop_img: &#39;linear-gradient(20deg, #0062be, #925696, #cc426e, #fb0347)&#39;</code></pre><h2 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h2><p>文章打赏设置二维码。</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306222725296.png" alt="image-20210306222725296"></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">      <span class="comment">#   link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">微信打赏</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">      <span class="comment">#   link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">支付宝打赏</span></span><br></pre></td></tr></table></figure><h2 id="button"><a href="#button" class="headerlink" title="button"></a>button</h2><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block center larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org/&#x27;,Butterfly,far fa-hand-point-right,block right outline larger %&#125;</span><br></pre></td></tr></table></figure><a class="btn-beautify button--animated block" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right fa-fw"></i><span>Butterfly</span></a><a class="btn-beautify button--animated block center larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right fa-fw"></i><span>Butterfly</span></a><a class="btn-beautify button--animated block right outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right fa-fw"></i><span>Butterfly</span></a><h2 id="tabs"><a href="#tabs" class="headerlink" title="tabs"></a>tabs</h2><p>具体参考 <a href="https://butterfly.js.org/posts/4aa8abbe/#Tabs">https://butterfly.js.org/posts/4aa8abbe/#Tabs</a><br><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><br><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h2 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h2><figure class="highlight md"><table><tr><td class="code"><pre><span class="line">哪個英文字母最酷？ &#123;% hideInline 因為西裝褲(C裝酷),查看答案,#FF7242,#fff %&#125;</span><br><span class="line"></span><br><span class="line">門裏站着一個人? &#123;% hideInline 閃 %&#125;</span><br></pre></td></tr></table></figure><p>哪個英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因為西裝褲(C裝酷)</span></span></p><p>門裏站着一個人? <span class="hide-inline"><button type="button" class="hide-button button--animated" style="">Click  </button><span class="hide-content">閃</span></span></p><h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><p>在主题配置文件中设置<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span></span><br><span class="line">  <span class="comment"># Up to two comments system, the first will be shown as default</span></span><br><span class="line">  <span class="comment"># Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo</span></span><br><span class="line">  <span class="attr">use:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Valine</span></span><br><span class="line">  <span class="attr">text:</span> <span class="literal">true</span> <span class="comment"># Display the comment name next to the button</span></span><br><span class="line">  <span class="comment"># lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span></span><br><span class="line">  <span class="comment"># If you set it to true, the comment count will be invalid</span></span><br><span class="line">  <span class="attr">lazyload:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> <span class="comment"># Display comment count in top_img</span></span><br><span class="line">  <span class="attr">card_post_count:</span> <span class="literal">false</span> <span class="comment"># Display comment count in Home Page</span></span><br></pre></td></tr></table></figure><br>其中，还需要配置Valine，需要用到leancloud。</p><p>它是领先的 BaaS 提供商,提供数据存储、文件存储、云引擎、容器、即时通讯、消息推送、短信、游戏云等多项服务,为移动开发提供强有力的后端支持。<br>valine: 参考 <a href="https://xuqwblog.blog.csdn.net/article/details/107248047">https://xuqwblog.blog.csdn.net/article/details/107248047</a></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">appId:</span>  <span class="comment"># leancloud application app id</span></span><br><span class="line"><span class="attr">appKey:</span>  <span class="comment"># leancloud application app key</span></span><br><span class="line"><span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># comment list page size</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://valine.js.org/#/avatar</span></span><br><span class="line"><span class="attr">lang:</span> <span class="string">en</span> <span class="comment"># i18n: zh-CN/zh-TW/en/ja</span></span><br><span class="line"><span class="attr">placeholder:</span> <span class="string">記得留下你的暱稱和郵箱....可以快速收到回復</span> <span class="comment"># valine comment input placeholder(like: Please leave your footprints )</span></span><br><span class="line"><span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment">#valine comment header info (nick/mail/link)</span></span><br><span class="line"><span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Record reviewer IP</span></span><br><span class="line"><span class="attr">serverURLs:</span> <span class="comment"># This configuration is suitable for domestic custom domain name users, overseas version will be automatically detected (no need to manually fill in)</span></span><br><span class="line"><span class="attr">bg:</span> <span class="string">/img/comment_bg.png</span> <span class="comment"># valine background</span></span><br><span class="line"><span class="attr">emojiCDN:</span> <span class="comment"># emoji CDN</span></span><br><span class="line"><span class="attr">enableQQ:</span> <span class="literal">false</span> <span class="comment"># enable the Nickname box to automatically get QQ Nickname and QQ Avatar</span></span><br><span class="line"><span class="attr">requiredFields:</span> <span class="string">nick,mail</span> <span class="comment"># required fields (nick/mail)</span></span><br><span class="line"><span class="attr">option:</span></span><br></pre></td></tr></table></figure><p>由于我们是静态博客，页面和存储是分离开的，动态博客才可以直接删除评论，因此需要用到LeanCloud，按下图进行删评。</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306221852309.png" alt="image-20210306221852309"></p><h2 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h2><p>评论区打字震动效果如下：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/1.gif" alt=""></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">activate_power_mode:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span> <span class="comment"># open particle animation (冒光特效)</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">true</span> <span class="comment">#  open shake (抖动特效)</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h2><p>本文设置的特效名称为canvas_nest，样式见本博客背景空白处的鼠标跟随连接网，很漂亮。<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&#x27;0,0,255&#x27;</span> <span class="comment">#color of lines, default: &#x27;0,0,0&#x27;; RGB values: (R,G,B).(<span class="doctag">note:</span> use &#x27;,&#x27; to separate.)</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.7</span> <span class="comment"># the opacity of line (0~1), default: 0.5.</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="number">-1</span> <span class="comment"># z-index property of the background, default: -1.</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">99</span> <span class="comment"># the number of lines, default: 99.</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment"># false 手機端不顯示 true 手機端顯示</span></span><br></pre></td></tr></table></figure></p><h2 id="鼠标点击效果"><a href="#鼠标点击效果" class="headerlink" title="鼠标点击效果"></a>鼠标点击效果</h2><p>效果可见本博客的鼠标样式。<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mouse click effects: Heart symbol (鼠標點擊效果: 愛心)</span></span><br><span class="line"><span class="attr">click_heart:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><h2 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a>网站副标题</h2><p>效果见首页背景图上的打字效果，sub中替换要展示的文字。<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># the subtitle on homepage (主頁subtitle)</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Typewriter Effect (打字效果)</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># loop (循環打字)</span></span><br><span class="line">  <span class="attr">loop:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># source調用第三方服務</span></span><br><span class="line">  <span class="comment"># source: false 關閉調用</span></span><br><span class="line">  <span class="comment"># source: 1  調用搏天api的隨機語錄（簡體）</span></span><br><span class="line">  <span class="comment"># source: 2  調用一言網的一句話（簡體）</span></span><br><span class="line">  <span class="comment"># source: 3  調用一句網（簡體）</span></span><br><span class="line">  <span class="comment"># source: 4  調用今日詩詞（簡體）</span></span><br><span class="line">  <span class="comment"># subtitle 會先顯示 source , 再顯示 sub 的內容</span></span><br><span class="line">  <span class="attr">source:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 如果有英文逗號&#x27; , &#x27;,請使用轉義字元 &amp;#44;</span></span><br><span class="line">  <span class="comment"># 如果有英文雙引號&#x27; &quot; &#x27;,請使用轉義字元 &amp;quot;</span></span><br><span class="line">  <span class="comment"># 開頭不允許轉義字元，如需要，請把整個句子用雙引號包住</span></span><br><span class="line">  <span class="comment"># 如果關閉打字效果，subtitle只會顯示sub的第一行文字</span></span><br><span class="line">  <span class="attr">sub:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">不要以自己的放纵来对抗平庸</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Never</span> <span class="string">put</span> <span class="string">off</span> <span class="string">till</span> <span class="string">tomorrow</span> <span class="string">what</span> <span class="string">you</span> <span class="string">can</span> <span class="string">do</span> <span class="string">today</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">你要悄悄的努力，然后惊艳所有人</span></span><br></pre></td></tr></table></figure></p><h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><p>效果见博客上方的介绍。</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306222901875.png" alt="image-20210306222901875"></p><p>先<code>yarn add hexo-wordcount</code></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># wordcount (字數統計)</span></span><br><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 主页侧边栏的文字统计</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span> <span class="comment"># 博客上方的文字统计</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="iconfont"><a href="#iconfont" class="headerlink" title="iconfont"></a>iconfont</h2><p>国内最出名的莫过于iconfont,功能很强大且图标內容很丰富的矢量图标库。很多Font Awesome不支持的图标都可以在这里找到。同时，iconfont支持选择需要的图标生成css链接，減少不必要的CSS加载。</p><p>具体参考 <a href="https://butterfly.js.org/posts/4073eda/#iconfont">https://butterfly.js.org/posts/4073eda/#iconfont</a></p><h2 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h2><p>这里设置的滚动条样式如本文的滚动条一样。</p><p>这里需要介绍一下JS/CSS 如何引用</p><ol><li>定位搜索 inject</li><li>其中 head 是用来引入 css 的。bottom 是用来引入 js 的。<br>具体参考 <a href="https://www.antmoe.com/posts/a811d614/#%E5%89%8D%E7%BD%AE%E8%AF%B4%E6%98%8E">https://www.antmoe.com/posts/a811d614/#%E5%89%8D%E7%BD%AE%E8%AF%B4%E6%98%8E</a></li></ol><p>滚动条参考 <a href="https://www.antmoe.com/posts/a811d614/#%E6%BB%9A%E5%8A%A8%E6%9D%A1">https://www.antmoe.com/posts/a811d614/#%E6%BB%9A%E5%8A%A8%E6%9D%A1</a></p><h2 id="引入css-js文件"><a href="#引入css-js文件" class="headerlink" title="引入css/js文件"></a>引入css/js文件</h2><p>这里介绍常用的主题样式魔改方法，大多需要修改或新建css和js文件。<br>具体参考 <a href="https://butterfly.lete114.top/article/Butterfly-config.html">https://butterfly.lete114.top/article/Butterfly-config.html</a><br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/iconfont.min.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/20210205.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/self/Kimbiedark.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/background.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@latest/butterfly/css/macblack.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/js/hideMobileSidebar.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">data-pjax</span> <span class="string">src=&quot;/js/myjs.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="卖萌标题"><a href="#卖萌标题" class="headerlink" title="卖萌标题"></a>卖萌标题</h2><p>当离开至其他页面标签后，再回到本博客页面，和过一小会时间后，标题显示的文字不同，效果如下：</p><p><img src="C:\Users\tsui\blog\source\_posts\blog2-BlogTheme\3.png" alt="3"></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 可爱的Title</span></span><br><span class="line"><span class="keyword">var</span> OriginTitle = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&#x27;visibilitychange&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/img/favicon.ico&quot;</span>);</span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">&#x27;(つェ⊂) 我藏好了哦~~&#x27;</span>;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(titleTime);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class="string">&#x27;href&#x27;</span>, <span class="string">&quot;/img/favicon.ico&quot;</span>);</span><br><span class="line">        <span class="built_in">document</span>.title = <span class="string">&#x27;(*´∇｀*) 被你发现啦~~&#x27;</span> + OriginTitle;</span><br><span class="line">        titleTime = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.title = OriginTitle;</span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="博主昵称颜色"><a href="#博主昵称颜色" class="headerlink" title="博主昵称颜色"></a>博主昵称颜色</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.author-info__name</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff7242</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果见主页的侧边栏博主信息卡片。</p><h2 id="鼠标魔改"><a href="#鼠标魔改" class="headerlink" title="鼠标魔改"></a>鼠标魔改</h2><p>效果可见本博客的鼠标样式。<br>具体参考 <a href="https://blog.csdn.net/u012208219/article/details/106883001/">https://blog.csdn.net/u012208219/article/details/106883001/</a></p><h2 id="页脚翻页时钟计时"><a href="#页脚翻页时钟计时" class="headerlink" title="页脚翻页时钟计时"></a>页脚翻页时钟计时</h2><p>样式在页脚可见，效果如下：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/2.png" alt=""></p><p>可设置开始计时的时间。<br>具体参考 <a href="https://akilar.top/posts/b941af/">https://akilar.top/posts/b941af/</a></p><h2 id="打赏按钮投币彩蛋效果"><a href="#打赏按钮投币彩蛋效果" class="headerlink" title="打赏按钮投币彩蛋效果"></a>打赏按钮投币彩蛋效果</h2><p>效果可见我的博客下方的打赏，点击后有硬币弹出的效果，并且点击后文本改变。<br>具体参考 <a href="https://akilar.top/posts/23fdf850/">https://akilar.top/posts/23fdf850/</a></p><h2 id="侧边栏的时钟卡片"><a href="#侧边栏的时钟卡片" class="headerlink" title="侧边栏的时钟卡片"></a>侧边栏的时钟卡片</h2><p>效果如下：</p><p><img src="https://gitee.com/tsuiwade/images/raw/master/image-20210306222217407.png" alt="image-20210306222217407"></p><ol><li>需要访问 <a href="https://openweathermap.org/">OpenWeather</a>, 按照网站指示完成注册。</li><li>注册完成后，访问 <a href="https://home.openweathermap.org/api_keys">API Keys</a> 获取相应的 API 密钥。留待之后备用。</li><li>还需完成邮箱验证，最后通过邮箱发放API，如果还未生效，需要hexo clean。</li></ol><p>具体参考 <a href="https://akilar.top/posts/4e39cf4a/">https://akilar.top/posts/4e39cf4a/</a></p><h2 id="搜索系统"><a href="#搜索系统" class="headerlink" title="搜索系统"></a>搜索系统</h2><p>建议使用本地搜寻方法，需要安装<a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> ，按提示安装即可。</p><p>最后还需配置主题文件<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="首页字体修改"><a href="#首页字体修改" class="headerlink" title="首页字体修改"></a>首页字体修改</h2><p>效果见本人主页的字体，不同位置的字体不同，例如h1和a使用的某Italic字体，span使用的新叶恋体<br>。这里推荐一个免费字体网站——<a href="https://www.100font.com/">100font</a> 。<br>在inject引入的css文件（或自己新建）中加入下面几行代码。<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">@font-face</span> &#123;</span><br><span class="line">  <span class="string">font-family:&#x27;zhongwen&#x27;;</span></span><br><span class="line">  <span class="string">src:url(&#x27;https://cdn.jsdelivr.net/gh/tsuiwade/CDN@4.0/font/yenianti.otf&#x27;);</span></span><br><span class="line">  <span class="string">font-display:swap</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">@font-face</span> &#123;</span><br><span class="line">  <span class="string">font-family:&#x27;yingwen&#x27;;</span></span><br><span class="line">  <span class="string">src:url(&#x27;https://cdn.jsdelivr.net/gh/tsuiwade/CDN@4.0/font/1Italic.ttf&#x27;);</span></span><br><span class="line">  <span class="string">font-display:swap</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">h1#site-title</span> &#123;</span><br><span class="line">  <span class="string">font-family:yingwen!important</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">span#subtitle</span> &#123;</span><br><span class="line">  <span class="string">font-family:zhongwen!important</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">a#site-name</span> &#123;</span><br><span class="line">  <span class="string">font-family:yingwen!important</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>挑选您心爱的字体，并把它下载下来，可以存在本地，也可以利用 jsdelivr 的方式加速，最后替换 css 文件中的 url 即可，zhongwen/yingwen 只是别名，可以任意修改，不过引用的时候，要确保名字相同。</p><p>有关jsdelivr加速的概念和使用，可见我的第七篇博客。</p><p>也可以换其他字体，具体参考 <a href="https://blog.imzjw.cn/posts/b74f504f/">https://blog.imzjw.cn/posts/b74f504f/</a><br>这里面语法—— <code>CSS3 @font-face规则</code> 可参考 <a href="https://www.runoob.com/cssref/css3-pr-font-face-rule.html">https://www.runoob.com/cssref/css3-pr-font-face-rule.html</a></p><h2 id="WOW-js-–-让页面滚动更有趣"><a href="#WOW-js-–-让页面滚动更有趣" class="headerlink" title="WOW.js – 让页面滚动更有趣"></a>WOW.js – 让页面滚动更有趣</h2><p>本博客在向下滚动的时候，有些元素会产生细小的动画效果。产生一种模块懒加载的特效感，这里主要用到的是wowjs。如果你希望你的页面也更加有趣，那么你可以试试 WOW.js。</p><p>主要参考<br><a href="https://www.delac.io/wow/">https://www.delac.io/wow/</a><br><a href="https://akilar.top/posts/abab51cf/">https://akilar.top/posts/abab51cf/</a> 。<br>还可修改相关配置。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
